{"metadata":{"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":30579,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true},"colab":{"provenance":[],"toc_visible":true,"gpuType":"T4"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"ae8426db2f314dee991a5ea34c2d45ea":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4aa30d4a7772471aa26bf2535d77ac6f","IPY_MODEL_24d46f03ccef4df7b937ed8fb1f0ef99","IPY_MODEL_fa68d6224b3c4f5694399129a4eb6b03"],"layout":"IPY_MODEL_aa03fc864994409190e6ff6ef828a7f7"}},"4aa30d4a7772471aa26bf2535d77ac6f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_30cb3b0aa46d4feea78069f1ef81b7b6","placeholder":"​","style":"IPY_MODEL_2d885c90e800479d97160fc6fff37274","value":"tokenizer_config.json: 100%"}},"24d46f03ccef4df7b937ed8fb1f0ef99":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e062f984c7144c91b8f8464133fd60d6","max":29,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9894262f4740482c91243249094f84e3","value":29}},"fa68d6224b3c4f5694399129a4eb6b03":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_769bd6e235154ef0890c8d73e2c97948","placeholder":"​","style":"IPY_MODEL_658aca807a2541198834594c7cd6eb64","value":" 29.0/29.0 [00:00&lt;00:00, 1.82kB/s]"}},"aa03fc864994409190e6ff6ef828a7f7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"30cb3b0aa46d4feea78069f1ef81b7b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2d885c90e800479d97160fc6fff37274":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e062f984c7144c91b8f8464133fd60d6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9894262f4740482c91243249094f84e3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"769bd6e235154ef0890c8d73e2c97948":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"658aca807a2541198834594c7cd6eb64":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b3871fe019df499686202d58ff24fcb0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_35516e4ae20a4fe7854eefecec943bb6","IPY_MODEL_b68e448454ac4182b5d891750b7e030b","IPY_MODEL_7b60dd2c9a004874aa4fbdb0b64654eb"],"layout":"IPY_MODEL_560de0cb8b1d4c219717f6cb1a23d142"}},"35516e4ae20a4fe7854eefecec943bb6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8d302f33afea4bf99e325604b00d0331","placeholder":"​","style":"IPY_MODEL_affe31781ee848908156c22ba993609c","value":"vocab.txt: 100%"}},"b68e448454ac4182b5d891750b7e030b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_2fe55209bd3c4d4d8d6f33c7338f084b","max":213450,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2723526ff3b440c896c1d0f3c97df416","value":213450}},"7b60dd2c9a004874aa4fbdb0b64654eb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2c30a8f7b7824e779c47552ed219e093","placeholder":"​","style":"IPY_MODEL_eabb3a3f952945e6adc10e1cd9f1a5fd","value":" 213k/213k [00:00&lt;00:00, 11.7MB/s]"}},"560de0cb8b1d4c219717f6cb1a23d142":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8d302f33afea4bf99e325604b00d0331":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"affe31781ee848908156c22ba993609c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2fe55209bd3c4d4d8d6f33c7338f084b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2723526ff3b440c896c1d0f3c97df416":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2c30a8f7b7824e779c47552ed219e093":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"eabb3a3f952945e6adc10e1cd9f1a5fd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"506804f0d286488ca7005ef3e34af3be":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a08c4d53929046b498664ab9ecd79b59","IPY_MODEL_5288da122c2748d3a73476a9f960b8a6","IPY_MODEL_3f3e742209904d89b0b76526fa54329b"],"layout":"IPY_MODEL_a28a3b4b793e4c9c8c3cc1fdf6d4d646"}},"a08c4d53929046b498664ab9ecd79b59":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ba818901ec0a4514868e22d8db268b81","placeholder":"​","style":"IPY_MODEL_487710e4e8744c8f9852b78d056f67ab","value":"tokenizer.json: 100%"}},"5288da122c2748d3a73476a9f960b8a6":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5fe51ae4917d4579b2f4daf89397736b","max":435797,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1bbe29acdf1a422d8e3aa4c4eca8da4b","value":435797}},"3f3e742209904d89b0b76526fa54329b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ebcbe0dc04e4440d817334454c6c801f","placeholder":"​","style":"IPY_MODEL_624d25db0c5f4b84bea30880a9ef7186","value":" 436k/436k [00:00&lt;00:00, 17.9MB/s]"}},"a28a3b4b793e4c9c8c3cc1fdf6d4d646":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ba818901ec0a4514868e22d8db268b81":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"487710e4e8744c8f9852b78d056f67ab":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5fe51ae4917d4579b2f4daf89397736b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1bbe29acdf1a422d8e3aa4c4eca8da4b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ebcbe0dc04e4440d817334454c6c801f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"624d25db0c5f4b84bea30880a9ef7186":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d4d5252fdf894eaeba976f06e8c32c46":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4a443986579f4afea5838c26b938edbf","IPY_MODEL_dfa934b32d78470baa8143620002b370","IPY_MODEL_64898ef75e1b4c51bdf2a5a9fb4ccbc2"],"layout":"IPY_MODEL_115690f1c94546ea9e376245c96a46dc"}},"4a443986579f4afea5838c26b938edbf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_922fb4327b544af0a50a952c0544b4cb","placeholder":"​","style":"IPY_MODEL_80c772e934b04de7a1a971a524bb1dfa","value":"config.json: 100%"}},"dfa934b32d78470baa8143620002b370":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_dc3a0cd6790a4631acd045140cba9f10","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_56ef9c6bd29142c191fd26fee76404e1","value":570}},"64898ef75e1b4c51bdf2a5a9fb4ccbc2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c63c89851650423680d05a638ed49e7f","placeholder":"​","style":"IPY_MODEL_35e4de3f50554c818d55235050f4e66a","value":" 570/570 [00:00&lt;00:00, 40.7kB/s]"}},"115690f1c94546ea9e376245c96a46dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"922fb4327b544af0a50a952c0544b4cb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"80c772e934b04de7a1a971a524bb1dfa":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dc3a0cd6790a4631acd045140cba9f10":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"56ef9c6bd29142c191fd26fee76404e1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c63c89851650423680d05a638ed49e7f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"35e4de3f50554c818d55235050f4e66a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d9e76bd0c48345919c44b311e1dd0993":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_85b641b4ba03459e9b45109c9342bc38","IPY_MODEL_a1f06eddb7e24011b076f528a732af0f","IPY_MODEL_2b32de6aac364276a8ff1d62c0fac29e"],"layout":"IPY_MODEL_1b3299b4ff2d459896294ef80092baf9"}},"85b641b4ba03459e9b45109c9342bc38":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d4ed5eb9dd3e43a789d8f78293568d0a","placeholder":"​","style":"IPY_MODEL_2b558759d4144613a50556b5b83179f2","value":"model.safetensors: 100%"}},"a1f06eddb7e24011b076f528a732af0f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3079acd0fd8b4997a0e6df02bd4556b7","max":435755784,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a7e4a3848b6341deb59386cd1390f63a","value":435755784}},"2b32de6aac364276a8ff1d62c0fac29e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_00a7189a6982429b8b5d73b4b4937e26","placeholder":"​","style":"IPY_MODEL_bcab12a7ebd94a1fb79b09fd3ccbb90a","value":" 436M/436M [00:07&lt;00:00, 43.3MB/s]"}},"1b3299b4ff2d459896294ef80092baf9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d4ed5eb9dd3e43a789d8f78293568d0a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2b558759d4144613a50556b5b83179f2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3079acd0fd8b4997a0e6df02bd4556b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a7e4a3848b6341deb59386cd1390f63a":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"00a7189a6982429b8b5d73b4b4937e26":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bcab12a7ebd94a1fb79b09fd3ccbb90a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d7d019b241d94b21b1d84a3c4686a0b1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_69fbec43aec74ec3b94e14b79fd72106","IPY_MODEL_8b9c33312d3e441789b0b8d1f49bf09b","IPY_MODEL_c719bb6c27344e0ea4f1eacf3270420f"],"layout":"IPY_MODEL_1ec569e806284812ac90a05740e4c897"}},"69fbec43aec74ec3b94e14b79fd72106":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_993f1b2ed8f040b6bf74e65ae114d5f3","placeholder":"​","style":"IPY_MODEL_9a4f2496eeac4cf59642c38f9e03b482","value":"tokenizer_config.json: 100%"}},"8b9c33312d3e441789b0b8d1f49bf09b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5f70b10e90a446bf991316fdd5fe4e43","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b9a0dcd227fc425fb00bd61df841b050","value":28}},"c719bb6c27344e0ea4f1eacf3270420f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f032b54061aa40e5929f667a85dbb70c","placeholder":"​","style":"IPY_MODEL_628e6476cb774fca9bfa03f2a532f68c","value":" 28.0/28.0 [00:00&lt;00:00, 1.28kB/s]"}},"1ec569e806284812ac90a05740e4c897":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"993f1b2ed8f040b6bf74e65ae114d5f3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9a4f2496eeac4cf59642c38f9e03b482":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5f70b10e90a446bf991316fdd5fe4e43":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b9a0dcd227fc425fb00bd61df841b050":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f032b54061aa40e5929f667a85dbb70c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"628e6476cb774fca9bfa03f2a532f68c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4bf3ae6085ff4ead9af0d07a917f331c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c3ca42a6f68044fabc23c15ff8485e3f","IPY_MODEL_c878b9ab401a44cd80ca9362c44218ec","IPY_MODEL_a334b76f096446858780d14461bc3100"],"layout":"IPY_MODEL_13897f682c584d6c95057699dbef9d22"}},"c3ca42a6f68044fabc23c15ff8485e3f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d2f79eb283c84b419e6b6c6309742ccc","placeholder":"​","style":"IPY_MODEL_23288bc9bdae450c9472d0adcf193dbc","value":"vocab.txt: 100%"}},"c878b9ab401a44cd80ca9362c44218ec":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b7792e0406f84e188b9fcf610884ff2d","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4ad33263225243fe935f01fd79e0740b","value":231508}},"a334b76f096446858780d14461bc3100":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4781ae5a9c8940da973a47cb37fc680d","placeholder":"​","style":"IPY_MODEL_e155d6a87c87409fb98c802456c6a828","value":" 232k/232k [00:00&lt;00:00, 3.26MB/s]"}},"13897f682c584d6c95057699dbef9d22":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d2f79eb283c84b419e6b6c6309742ccc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"23288bc9bdae450c9472d0adcf193dbc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b7792e0406f84e188b9fcf610884ff2d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4ad33263225243fe935f01fd79e0740b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4781ae5a9c8940da973a47cb37fc680d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e155d6a87c87409fb98c802456c6a828":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"08be919480e44d318581562db0ab6dac":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8fcc8765adf247fc954831f858a0d0d4","IPY_MODEL_cce4aaed6e374df4bb2542cb3eec0fd6","IPY_MODEL_4196150f880a4076a0e407c0fb26b18e"],"layout":"IPY_MODEL_f8aa57e3b6be49a99c0041d6d01cbd68"}},"8fcc8765adf247fc954831f858a0d0d4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4347b7db6f2c47bd815a4b5cc806ac8f","placeholder":"​","style":"IPY_MODEL_4a761990a85049528edb64cea5bb85f2","value":"tokenizer.json: 100%"}},"cce4aaed6e374df4bb2542cb3eec0fd6":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_471a7954d52748789d0f11fac3ad7134","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_99c6915a8cd14e8c8451877d9ae2aa1c","value":466062}},"4196150f880a4076a0e407c0fb26b18e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_409e49713a5444768e7c4b6ee84cacb4","placeholder":"​","style":"IPY_MODEL_fe5e7fc99a454109b43492e2556e7146","value":" 466k/466k [00:00&lt;00:00, 10.4MB/s]"}},"f8aa57e3b6be49a99c0041d6d01cbd68":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4347b7db6f2c47bd815a4b5cc806ac8f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4a761990a85049528edb64cea5bb85f2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"471a7954d52748789d0f11fac3ad7134":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"99c6915a8cd14e8c8451877d9ae2aa1c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"409e49713a5444768e7c4b6ee84cacb4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fe5e7fc99a454109b43492e2556e7146":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ded520a5d4fd4e6e904adc0aaabb2065":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e5441521fe2543c1bb2248c40e2aad3d","IPY_MODEL_78924df82e1546caadd199ab7acf605d","IPY_MODEL_623e4d552d8246d49d9b3586dd807483"],"layout":"IPY_MODEL_572d2f7d1aff4d96875555d4ee3f305b"}},"e5441521fe2543c1bb2248c40e2aad3d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_154e454a269945778e8cddf269337d8d","placeholder":"​","style":"IPY_MODEL_be40efe57deb4ac38cd35fc306153495","value":"config.json: 100%"}},"78924df82e1546caadd199ab7acf605d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5be6ff45371f44ea8116526f6042554f","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_422fb4587be64838b25fe81ad1241604","value":570}},"623e4d552d8246d49d9b3586dd807483":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c401be1801db4493a1f6daf570fd0b5c","placeholder":"​","style":"IPY_MODEL_8460942ab73b4b20b2ce6ca885811a40","value":" 570/570 [00:00&lt;00:00, 26.0kB/s]"}},"572d2f7d1aff4d96875555d4ee3f305b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"154e454a269945778e8cddf269337d8d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"be40efe57deb4ac38cd35fc306153495":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5be6ff45371f44ea8116526f6042554f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"422fb4587be64838b25fe81ad1241604":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c401be1801db4493a1f6daf570fd0b5c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8460942ab73b4b20b2ce6ca885811a40":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0216005df23442aa8b0336a631a14306":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c752ea676c78473185b98e20160587e0","IPY_MODEL_24c48ae5a1cc40cbbc09f3842dc60606","IPY_MODEL_cb1be9067c8b44d1940b8cbaada98689"],"layout":"IPY_MODEL_6a3a68b64b2b46bd85deb76004b472b8"}},"c752ea676c78473185b98e20160587e0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f43319fa82db440c8e42607ef9b086cf","placeholder":"​","style":"IPY_MODEL_706dbe6e0cfc44c78f376ad7a30ea16a","value":"model.safetensors: 100%"}},"24c48ae5a1cc40cbbc09f3842dc60606":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3368bfd4d8b94c4a8a244c20e073ba96","max":440449768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_59ac8f621f0a4e34b36c15d3a7fc5a2d","value":440449768}},"cb1be9067c8b44d1940b8cbaada98689":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_51485e6a382547b6b0f84427de3847a4","placeholder":"​","style":"IPY_MODEL_5e4544eedef84848b286e2615c57e1f5","value":" 440M/440M [00:05&lt;00:00, 81.1MB/s]"}},"6a3a68b64b2b46bd85deb76004b472b8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f43319fa82db440c8e42607ef9b086cf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"706dbe6e0cfc44c78f376ad7a30ea16a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3368bfd4d8b94c4a8a244c20e073ba96":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"59ac8f621f0a4e34b36c15d3a7fc5a2d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"51485e6a382547b6b0f84427de3847a4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5e4544eedef84848b286e2615c57e1f5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"markdown","source":["## Работу выполнили студенты мФТиАД22: Ануров Никита, Бердышев Роман, Золотарев Антон"],"metadata":{"id":"whqA_Bm_2yBV"}},{"cell_type":"markdown","source":["#### Домашнее задание 2\n","## Named Entety Recognition and Event Extraction from Literary Fiction\n","\n","deadline: 14 ноября 2021, 23:59\n","\n","В этом домашнем задании вы будете работать с корпусом LitBank. Корпус собран из популярных художественных произведений на английском языке и содержит разметку по именованным сущностям и событиям. Объем корпуса таков: 100 текстов по примерно 2000 слов каждый.\n","\n","Корпус описан в статьях:\n","* David Bamman, Sejal Popat, Sheng Shen, An Annotated Dataset of Literary Entities http://people.ischool.berkeley.edu/~dbamman/pubs/pdf/naacl2019_literary_entities.pdf\n","* Matthew Sims, Jong Ho Park, David Bamman, Literary Event Detection,  http://people.ischool.berkeley.edu/~dbamman/pubs/pdf/acl2019_literary_events.pdf\n","\n","Корпус доступен в репозитории проекта:  https://github.com/dbamman/litbank\n","\n","Статья и код, использованный для извлечения именованных сущностей:\n","* Meizhi Ju, Makoto Miwa and Sophia Ananiadou, A Neural Layered Model for Nested Named Entity Recognition, https://github.com/meizhiju/layered-bilstm-crf\n","\n","Структура корпуса устроена так.\n","Первый уровень:\n","* entities -- разметка по сущностям\n","* events -- разметка по сущностям\n","\n","\n","В корпусе используются 6 типов именованных сущностей: PER, LOC, ORG, FAC, GPE, VEH (имена, локации, организации, помещения, топонимы, средства перемещния), допускаются вложенные сущности.\n","\n","События выражается одним словом - *триггером*, которое может быть глагом, прилагательным и существительным. В корпусе описаны события, которые действительно происходят и не имеют гипотетического характера.\n","Пример: she *walked* rapidly and resolutely, здесь *walked* -- триггер события. Типы событий не заданы.\n","\n","\n","\n","Второй уровень:\n","* brat -- рабочие файлы инструмента разметки brat, ann-файлы содержат разметку, txt-файлы – сырые тексты\n","* tsv -- tsv-файлы содержат разметку в IOB формате,\n","\n","\n","В статье и репозитории вы найдете идеи, которые помогут вам выполнить домашнее задание. Их стоит воспринимать как руководство к действию, и не стоит их копировать и переиспользовать. Обученные модели использовать не нужно, код для их обучения можно использовать как подсказку.\n","\n","## ПРАВИЛА\n","\n","1. Домашнее задание можно выполнять в группе до 3-х человек.\n","2. Домашнее задание сдается через anytask.\n","3. Домашнее задание оформляется в виде отчета либо в .pdf файле, либо ipython-тетрадке.\n","4. Отчет должен содержать: нумерацию заданий и пунктов, которые вы выполнили, код решения, и понятное пошаговое описание того, что вы сделали. Отчет должен быть написан в академическом стиле, без излишнего использования сленга и с соблюдением норм русского языка.\n","5. Не стоит копировать фрагменты лекций, статей и Википедии в ваш отчет.\n","6. Отчеты, состоящие исключительно из кода, не будут проверены и будут автоматически оценены нулевой оценкой.\n","7. Плагиат и любое недобросоветсное цитирование приводит к обнуление оценки.\n","\n","\n","## Часть 1. [2 балла] Эксплоративный анализ\n","1. Найдите топ 10 (по частоте) именованных сущностей каждого из 6 типов.\n","2. Найдите топ 10 (по частоте) частотных триггеров событий.\n","3. Кластеризуйте все уникальные триггеры событий, используя эмбеддинги слов и любой алгоритм кластеризации (например, агломеративный иерархический алгоритм кластеризации) и попробуйте проинтерпретировать кластеры: есть ли очевидные типы событий?\n","\n","[бонус] Визуализируйте полученные кластеры с помощью TSNE или UMAP\n","\n","[бонус] Постройте тематическую модель по корпусу и сравните кластеры тригеров и выделенные темы: есть ли схожие паттерны в тематической модели и в стурктуре кластеров?\n","\n","В следующих частях домашнего задания вам понадобится train-test-dev разбиение. Авторы статей предлагают следующую структуру разбиения: обучающее множество – 80 книг, валидационное – 10 книг, тестовое – 10 книг. Предложения из одного источника не должны попадать в разные сегменты разбиения.\n","\n","\n","## Часть 2. [3 балла] Извлечение именованных сущностей\n","1. Обучите стандартную модель для извлечения именованных сущностей, CNN-BiLSTM-CRF, для извлечения именованных *низкоуровневых именованных сущностей*, т.е. для самых коротких из вложенных сущностей.\n","Модель устроена так: сверточная сеть на символах + эмбеддинги слов + двунаправленная LSTM сеть (модель последовательности) + CRF (глобальная нормализация).\n","2. Замените часть модели на символах и словах (CNN + эмбеддинги словах) на ELMo и / или BERT. Должна получиться модель ELMo / BERT + BiLSTM + CRF.\n","3. Замените модель последовательности (BiLSTM) на другой слой, например, на Transformer. Должна получиться модель CNN  + Transformer + CRF.\n","\n","[бонус] Дообучите BERT для извлечения именованных сущностей.\n","\n","[бонус] Используйте модель для извлечения вложенных именованных сущностей [Ju et al., 2018]\n","\n","[бонус] Модифицируйте модель для извлечения вложенных именованных сущностей [Ju et al., 2018]: вместо эмбеддингов слов используйте ELMo и/или BERT.\n","\n","## Часть 3. [2 балла] Извлечение событий\n","\n","1. Используйте BiLSTM на эмбеддингах слов для извлечения триггеров событий.\n","\n","2. Замените часть модели на  словах  на ELMo и/или BERT.  Должна получиться модель ELMo / BERT + BiLSTM.\n","\n","[бонус] Предобучите BiLSTM как языковую модель. Дообучите ее для извлечения триггеров.\n","\n","[бонус] Дообучите BERT для извлечения триггеров событий.\n","\n","## Часть 4. [2 балла] Одновременное извлечение именованных сущностей и событий\n","1. Обучите модель для совместного извлечения именованных сущностей и триггеров событий. У модели должен быть общий энкодер (например, CNN + BiLSMT, ELMo + BiLSTM, BERT + BiLSTM) и два декодера: один отвечает за извлечение именнованных сущностей, другой отвечает за извлечение триггеров событий.\n","\n","[бонус] Добавьте в модель механизм внимания, так, как это покажется вам разумным.\n","\n","[бонус] Визуализируйте карты механизма внимания.\n","\n","## Часть 5. [1 балл] Итоги\n","Напишите краткое резюме проделанной работы. Сравните результаты всех разработанных моделей. Что помогло вам в выполнении работы, чего не хватало?"],"metadata":{"id":"tSfo9dh92yBX"}},{"cell_type":"code","source":["!pip install -qq pytorch-crf"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:44:33.679137Z","iopub.execute_input":"2023-11-18T19:44:33.679501Z","iopub.status.idle":"2023-11-18T19:44:45.943968Z","shell.execute_reply.started":"2023-11-18T19:44:33.679471Z","shell.execute_reply":"2023-11-18T19:44:45.942626Z"},"trusted":true,"id":"URmCHec-2yBY","executionInfo":{"status":"ok","timestamp":1700420199661,"user_tz":-180,"elapsed":14626,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["!pip install -qq trimap"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:44:45.945943Z","iopub.execute_input":"2023-11-18T19:44:45.946262Z","iopub.status.idle":"2023-11-18T19:44:58.222670Z","shell.execute_reply.started":"2023-11-18T19:44:45.946229Z","shell.execute_reply":"2023-11-18T19:44:58.221443Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"VbxTXTw82yBZ","executionInfo":{"status":"ok","timestamp":1700420244025,"user_tz":-180,"elapsed":44365,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"4bcd5f64-07af-4410-9a38-8ea1f73d6933"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/647.5 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m112.6/647.5 kB\u001b[0m \u001b[31m3.2 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m645.1/647.5 kB\u001b[0m \u001b[31m9.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m647.5/647.5 kB\u001b[0m \u001b[31m8.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for annoy (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}]},{"cell_type":"code","source":["!pip install -qq transformers"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:44:58.224138Z","iopub.execute_input":"2023-11-18T19:44:58.224466Z","iopub.status.idle":"2023-11-18T19:45:10.184242Z","shell.execute_reply.started":"2023-11-18T19:44:58.224431Z","shell.execute_reply":"2023-11-18T19:45:10.183121Z"},"trusted":true,"id":"BOSR1aai2yBa","executionInfo":{"status":"ok","timestamp":1700420268449,"user_tz":-180,"elapsed":24427,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["!pip install -qq torcheval"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RnPvPl5MUtMS","executionInfo":{"status":"ok","timestamp":1700420302753,"user_tz":-180,"elapsed":34308,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"68e23f0c-3ee0-4e7b-fdc3-7e225dfe511e"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/179.2 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m30.7/179.2 kB\u001b[0m \u001b[31m677.0 kB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━━\u001b[0m \u001b[32m122.9/179.2 kB\u001b[0m \u001b[31m1.6 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m179.2/179.2 kB\u001b[0m \u001b[31m2.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import requests\n","from collections import defaultdict, Counter\n","import os\n","\n","from sklearn.cluster import AgglomerativeClustering\n","import gensim.downloader\n","import plotly.express as px\n","import trimap\n","\n","import torch\n","from torch import nn\n","from torch.nn import functional as F\n","\n","from torchcrf import CRF\n","from torch.utils.data import Dataset, DataLoader\n","from sklearn.preprocessing import LabelEncoder\n","\n","from torch import optim\n","from sklearn.metrics import f1_score\n","\n","from tqdm.auto import tqdm\n","import copy\n","import matplotlib.pyplot as plt\n","from abc import ABC\n","\n","import transformers\n","from transformers import BertModel, BertTokenizer, AdamW, get_linear_schedule_with_warmup\n","from torcheval.metrics.functional import binary_f1_score"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:45:10.186440Z","iopub.execute_input":"2023-11-18T19:45:10.186782Z","iopub.status.idle":"2023-11-18T19:45:10.194808Z","shell.execute_reply.started":"2023-11-18T19:45:10.186748Z","shell.execute_reply":"2023-11-18T19:45:10.193750Z"},"trusted":true,"id":"6Fopcsz12yBa","executionInfo":{"status":"ok","timestamp":1700420381868,"user_tz":-180,"elapsed":79128,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"wSLAAWQZNy77","executionInfo":{"status":"ok","timestamp":1700413977046,"user_tz":-180,"elapsed":18,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["word2vec_model = gensim.downloader.load('glove-wiki-gigaword-100')"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:45:10.196118Z","iopub.execute_input":"2023-11-18T19:45:10.196438Z","iopub.status.idle":"2023-11-18T19:45:53.961079Z","shell.execute_reply.started":"2023-11-18T19:45:10.196409Z","shell.execute_reply":"2023-11-18T19:45:53.960120Z"},"trusted":true,"id":"lk46gaKB2yBa","executionInfo":{"status":"ok","timestamp":1700414067423,"user_tz":-180,"elapsed":90394,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["## Data preprocessing"],"metadata":{"id":"1KZakJ2M2yBb"}},{"cell_type":"markdown","source":["Скачиваем данные"],"metadata":{"id":"a1L5hvqV2yBb"}},{"cell_type":"code","source":["# Replace 'username', 'repo' and 'path' with the appropriate values\n","username = 'dbamman'\n","repo = 'litbank'\n","path = '/entities/tsv'\n","\n","url = f'https://api.github.com/repos/{username}/{repo}/contents/{path}'\n","response = requests.get(url)\n","dataset = []\n","if response.status_code == 200:\n","    files = response.json()\n","    for file in files:\n","        if file['type'] == 'file':\n","            file_url = file['download_url']\n","            file_response = requests.get(file_url)\n","            #print(file_url)\n","            if file_response.status_code == 200:\n","                tmp = pd.read_csv(file_url, sep='\\t', on_bad_lines=\"skip\", engine='python', header=None, quotechar='~')\n","                dataset.append(tmp)\n","            else:\n","                print(f'Failed to read file {file[\"name\"]}')\n","else:\n","    print(f'Failed to get directory contents: {response.status_code}')\n","\n","df_entities = pd.concat(dataset)\n","df_entities.fillna('O', inplace=True)\n","df_entities"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:47:17.718946Z","iopub.execute_input":"2023-11-18T19:47:17.719330Z","iopub.status.idle":"2023-11-18T19:47:46.654810Z","shell.execute_reply.started":"2023-11-18T19:47:17.719299Z","shell.execute_reply":"2023-11-18T19:47:46.653558Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"B6wqHPKt2yBb","executionInfo":{"status":"ok","timestamp":1700402636236,"user_tz":-180,"elapsed":75695,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"5199fb9f-12da-4ba5-a59c-a23d46dcab4d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             0      1  2  3  4  5  6\n","0      CHAPTER      O  O  O  O  O  O\n","1            I      O  O  O  O  O  O\n","2           In      O  O  O  O  O  O\n","3     Chancery  B-FAC  O  O  O  O  O\n","4       London  B-GPE  O  O  O  O  O\n","...        ...    ... .. .. .. .. ..\n","2067  dictated      O  O  O  O  O  O\n","2068        to      O  O  O  O  O  O\n","2069       his      O  O  O  O  O  O\n","2070   conduct      O  O  O  O  O  O\n","2071         .      O  O  O  O  O  O\n","\n","[210532 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-4b849171-9714-4ed9-b280-dda213b16ce2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHAPTER</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>I</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>In</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Chancery</td>\n","      <td>B-FAC</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>London</td>\n","      <td>B-GPE</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2067</th>\n","      <td>dictated</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2068</th>\n","      <td>to</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2069</th>\n","      <td>his</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2070</th>\n","      <td>conduct</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2071</th>\n","      <td>.</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","      <td>O</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>210532 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b849171-9714-4ed9-b280-dda213b16ce2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b849171-9714-4ed9-b280-dda213b16ce2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b849171-9714-4ed9-b280-dda213b16ce2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdcb68b4-634c-4c93-88d0-ed57423876bb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdcb68b4-634c-4c93-88d0-ed57423876bb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdcb68b4-634c-4c93-88d0-ed57423876bb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df_entities[1].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I480jHVh5Yae","executionInfo":{"status":"ok","timestamp":1700402712418,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"2d5943a7-25c6-46b6-db49-696242da37a2"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["O        181665\n","I-PER     11335\n","B-PER      7987\n","I-FAC      2772\n","B-FAC      1841\n","I-LOC      1693\n","B-LOC      1026\n","B-GPE       840\n","I-GPE       568\n","I-VEH       275\n","I-ORG       235\n","B-VEH       186\n","B-ORG       109\n","Name: 1, dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Replace 'username', 'repo' and 'path' with the appropriate values\n","username = 'dbamman'\n","repo = 'litbank'\n","path = '/events/tsv'\n","\n","url = f'https://api.github.com/repos/{username}/{repo}/contents/{path}'\n","response = requests.get(url)\n","dataset = []\n","if response.status_code == 200:\n","    files = response.json()\n","    for file in files:\n","        if file['type'] == 'file':\n","            file_url = file['download_url']\n","            file_response = requests.get(file_url)\n","            #print(file_url)\n","            if file_response.status_code == 200:\n","                tmp = pd.read_csv(file_url, sep='\\t', on_bad_lines=\"skip\", engine='python', header=None, quotechar='~')\n","                dataset.append(tmp)\n","            else:\n","                print(f'Failed to read file {file[\"name\"]}')\n","else:\n","    print(f'Failed to get directory contents: {response.status_code}')\n","\n","df_events = pd.concat(dataset)\n","df_events.fillna('O', inplace=True)\n","df_events"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:47:53.986381Z","iopub.execute_input":"2023-11-18T19:47:53.986760Z","iopub.status.idle":"2023-11-18T19:48:21.744011Z","shell.execute_reply.started":"2023-11-18T19:47:53.986727Z","shell.execute_reply":"2023-11-18T19:48:21.743011Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"sPtrQTbz2yBc","executionInfo":{"status":"ok","timestamp":1700402711447,"user_tz":-180,"elapsed":75214,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"5dd526fb-4220-46c8-b16d-51b30f862f9e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             0  1\n","0      CHAPTER  O\n","1            I  O\n","2           In  O\n","3     Chancery  O\n","4       London  O\n","...        ... ..\n","2067  dictated  O\n","2068        to  O\n","2069       his  O\n","2070   conduct  O\n","2071         .  O\n","\n","[210532 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-2fe950f1-96d3-4a4b-ab61-56ad5ebbaa2f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHAPTER</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>I</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>In</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Chancery</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>London</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2067</th>\n","      <td>dictated</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2068</th>\n","      <td>to</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2069</th>\n","      <td>his</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2070</th>\n","      <td>conduct</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2071</th>\n","      <td>.</td>\n","      <td>O</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>210532 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fe950f1-96d3-4a4b-ab61-56ad5ebbaa2f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2fe950f1-96d3-4a4b-ab61-56ad5ebbaa2f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2fe950f1-96d3-4a4b-ab61-56ad5ebbaa2f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-401cac3a-45a7-4bcd-b15b-e2feff35b061\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-401cac3a-45a7-4bcd-b15b-e2feff35b061')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-401cac3a-45a7-4bcd-b15b-e2feff35b061 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df_events[1].value_counts()"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:48:27.924436Z","iopub.execute_input":"2023-11-18T19:48:27.924797Z","iopub.status.idle":"2023-11-18T19:48:27.958140Z","shell.execute_reply.started":"2023-11-18T19:48:27.924766Z","shell.execute_reply":"2023-11-18T19:48:27.957239Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"5yXgFy_02yBc","executionInfo":{"status":"ok","timestamp":1700402716308,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"d983df23-c9e6-404d-9b05-a0c05a4f9272"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["O        202683\n","EVENT      7849\n","Name: 1, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["## Часть 1. [2 балла] Эксплоративный анализ\n","1. Найдите топ 10 (по частоте) именованных сущностей каждого из 6 типов.\n","2. Найдите топ 10 (по частоте) частотных триггеров событий.\n","3. Кластеризуйте все уникальные триггеры событий, используя эмбеддинги слов и любой алгоритм кластеризации (например, агломеративный иерархический алгоритм кластеризации) и попробуйте проинтерпретировать кластеры: есть ли очевидные типы событий?\n","\n","[бонус] Визуализируйте полученные кластеры с помощью TSNE или UMAP\n","\n","[бонус] Постройте тематическую модель по корпусу и сравните кластеры тригеров и выделенные темы: есть ли схожие паттерны в тематической модели и в стурктуре кластеров?\n"],"metadata":{"id":"QnkJA_uv2yBd"}},{"cell_type":"code","source":["NER_quantity_dict = defaultdict(Counter)\n","\n","for i, (token, *labels) in df_entities.iterrows():\n","    for label in labels:\n","        # filter O-type\n","        if label in ['O']:\n","            continue\n","        # ignore X in X-NER\n","        label = label.split('-')[-1]\n","        NER_quantity_dict[label][token] += 1\n","\n","print('Top-10 occurences of entities\\n')\n","for label, counter in NER_quantity_dict.items():\n","    print(label)\n","    print(counter.most_common(10))\n","    print()"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:48:33.133084Z","iopub.execute_input":"2023-11-18T19:48:33.133729Z","iopub.status.idle":"2023-11-18T19:48:45.007022Z","shell.execute_reply.started":"2023-11-18T19:48:33.133695Z","shell.execute_reply":"2023-11-18T19:48:45.006014Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"_T_Ewl892yBd","executionInfo":{"status":"ok","timestamp":1700402727816,"user_tz":-180,"elapsed":7932,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"19780d39-1291-4964-c119-1e7170529913"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Top-10 occurences of entities\n","\n","FAC\n","[('the', 1194), ('a', 260), ('of', 223), ('house', 153), (',', 138), ('room', 100), ('home', 83), ('The', 80), ('and', 76), ('in', 74)]\n","\n","GPE\n","[('the', 172), ('town', 64), ('of', 55), ('London', 40), ('a', 39), ('England', 38), ('country', 34), ('village', 27), ('New', 27), (',', 26)]\n","\n","PER\n","[('the', 2148), ('a', 1137), ('of', 776), (',', 670), ('his', 406), ('man', 361), ('who', 309), ('Mr.', 307), ('and', 305), ('her', 289)]\n","\n","LOC\n","[('the', 828), ('of', 195), ('a', 122), ('world', 112), (',', 64), ('sea', 56), ('and', 53), ('river', 50), ('country', 47), ('this', 42)]\n","\n","VEH\n","[('the', 97), ('a', 33), ('ship', 21), ('car', 15), ('train', 14), ('ships', 12), ('The', 11), ('carriage', 10), ('_', 10), ('boats', 8)]\n","\n","ORG\n","[('the', 86), ('of', 28), ('a', 21), ('army', 20), (',', 19), ('and', 10), ('that', 7), ('Church', 7), ('his', 7), ('Office', 6)]\n","\n"]}]},{"cell_type":"code","source":["events_quantity = Counter()\n","\n","for i, (token, label) in df_events.iterrows():\n","    if label == 'EVENT':\n","        events_quantity[token] += 1\n","\n","print('Top-10 occurences of events\\n')\n","print(events_quantity.most_common(10))"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:48:47.616810Z","iopub.execute_input":"2023-11-18T19:48:47.617530Z","iopub.status.idle":"2023-11-18T19:48:59.095096Z","shell.execute_reply.started":"2023-11-18T19:48:47.617493Z","shell.execute_reply":"2023-11-18T19:48:59.094135Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"xsJ9uGUz2yBd","executionInfo":{"status":"ok","timestamp":1700402737673,"user_tz":-180,"elapsed":6875,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"b7a66c60-8da4-459e-be99-e2ffdd582259"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Top-10 occurences of events\n","\n","[('said', 464), ('came', 95), ('looked', 92), ('went', 92), ('asked', 69), ('heard', 63), ('saw', 59), ('cried', 59), ('took', 56), ('turned', 55)]\n"]}]},{"cell_type":"code","source":["words = list(events_quantity.keys())"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:48:59.096506Z","iopub.execute_input":"2023-11-18T19:48:59.096847Z","iopub.status.idle":"2023-11-18T19:48:59.101319Z","shell.execute_reply.started":"2023-11-18T19:48:59.096820Z","shell.execute_reply":"2023-11-18T19:48:59.100253Z"},"trusted":true,"id":"egX9Xgxe2yBd","executionInfo":{"status":"ok","timestamp":1700402739133,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# для каждого слова достаю его эмбеддинг\n","word_embedding = {}\n","for word in words:\n","    if word in word2vec_model.key_to_index:\n","        word_embedding[word] = word2vec_model.get_vector(word)\n","\n","word_embedding_df = pd.DataFrame(word_embedding.items(), columns=['word', 'embed'])\n","word_embedding_df"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:49:02.863812Z","iopub.execute_input":"2023-11-18T19:49:02.864185Z","iopub.status.idle":"2023-11-18T19:49:02.903481Z","shell.execute_reply.started":"2023-11-18T19:49:02.864155Z","shell.execute_reply":"2023-11-18T19:49:02.902396Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"aEvO9Jvs2yBd","executionInfo":{"status":"ok","timestamp":1700402740888,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"641b4d82-5717-424d-cd5e-719200de489f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            word                                              embed\n","0       lowering  [0.19831, -0.77033, 0.062455, 1.3418, -0.04004...\n","1        drizzle  [-0.79487, 0.4828, -0.30923, 0.68706, -0.31813...\n","2       jostling  [-0.022107, 0.035967, -0.077376, 0.21532, 0.00...\n","3      infection  [-0.011046, 0.051967, 0.072621, 0.24603, -0.84...\n","4         temper  [0.21224, -0.58716, 0.2765, -0.15791, -1.1571,...\n","...          ...                                                ...\n","2487    sweating  [-0.19552, 0.02132, 0.28279, -0.11673, -0.7532...\n","2488    grunting  [0.68041, 0.20176, 0.69297, -0.20956, -0.12143...\n","2489  purchasing  [0.68857, -0.25502, 0.22754, 0.2858, -0.15375,...\n","2490   graduated  [0.92827, -0.11482, -0.70497, 0.32438, 0.00762...\n","2491     dallied  [0.058847, 0.10463, -0.45006, 0.71615, -0.2634...\n","\n","[2492 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-c9dc0d09-5b75-4908-a15d-c89d204c377e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>embed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>lowering</td>\n","      <td>[0.19831, -0.77033, 0.062455, 1.3418, -0.04004...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>drizzle</td>\n","      <td>[-0.79487, 0.4828, -0.30923, 0.68706, -0.31813...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>jostling</td>\n","      <td>[-0.022107, 0.035967, -0.077376, 0.21532, 0.00...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>infection</td>\n","      <td>[-0.011046, 0.051967, 0.072621, 0.24603, -0.84...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>temper</td>\n","      <td>[0.21224, -0.58716, 0.2765, -0.15791, -1.1571,...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2487</th>\n","      <td>sweating</td>\n","      <td>[-0.19552, 0.02132, 0.28279, -0.11673, -0.7532...</td>\n","    </tr>\n","    <tr>\n","      <th>2488</th>\n","      <td>grunting</td>\n","      <td>[0.68041, 0.20176, 0.69297, -0.20956, -0.12143...</td>\n","    </tr>\n","    <tr>\n","      <th>2489</th>\n","      <td>purchasing</td>\n","      <td>[0.68857, -0.25502, 0.22754, 0.2858, -0.15375,...</td>\n","    </tr>\n","    <tr>\n","      <th>2490</th>\n","      <td>graduated</td>\n","      <td>[0.92827, -0.11482, -0.70497, 0.32438, 0.00762...</td>\n","    </tr>\n","    <tr>\n","      <th>2491</th>\n","      <td>dallied</td>\n","      <td>[0.058847, 0.10463, -0.45006, 0.71615, -0.2634...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2492 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9dc0d09-5b75-4908-a15d-c89d204c377e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c9dc0d09-5b75-4908-a15d-c89d204c377e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c9dc0d09-5b75-4908-a15d-c89d204c377e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-abd00835-3ea9-4220-afcb-59b50bed028c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-abd00835-3ea9-4220-afcb-59b50bed028c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-abd00835-3ea9-4220-afcb-59b50bed028c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["clustering_words = AgglomerativeClustering(distance_threshold=30, n_clusters=None)\n","clustering_words.fit(np.array(list(word_embedding_df.embed.values)))"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:49:05.104504Z","iopub.execute_input":"2023-11-18T19:49:05.104861Z","iopub.status.idle":"2023-11-18T19:49:05.467037Z","shell.execute_reply.started":"2023-11-18T19:49:05.104831Z","shell.execute_reply":"2023-11-18T19:49:05.466108Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"uzAaLebt2yBd","executionInfo":{"status":"ok","timestamp":1700402742841,"user_tz":-180,"elapsed":477,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"578d869b-d809-48a1-8560-db2ef4bf9e62"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AgglomerativeClustering(distance_threshold=30, n_clusters=None)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>AgglomerativeClustering(distance_threshold=30, n_clusters=None)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">AgglomerativeClustering</label><div class=\"sk-toggleable__content\"><pre>AgglomerativeClustering(distance_threshold=30, n_clusters=None)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["clustering_words.labels_"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:49:06.685653Z","iopub.execute_input":"2023-11-18T19:49:06.686155Z","iopub.status.idle":"2023-11-18T19:49:06.694480Z","shell.execute_reply.started":"2023-11-18T19:49:06.686113Z","shell.execute_reply":"2023-11-18T19:49:06.693431Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"BcLMV1Cn2yBd","executionInfo":{"status":"ok","timestamp":1700402746465,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"5894dc55-6a16-4681-f7c0-1a6da19e1fe4"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3, 4, 2, ..., 4, 3, 5])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["for cluster in range(clustering_words.n_clusters_):\n","\n","    non_cluster_words = [words[i] for i, label in enumerate(clustering_words.labels_)\n","                         if label != cluster]\n","    cluster_words_counter = events_quantity.copy()\n","    for word in non_cluster_words:\n","        cluster_words_counter.pop(word)\n","\n","    print(f'Топ слов по встречаемости из кластера {cluster}')\n","    most_common = cluster_words_counter.most_common(10)\n","    print(most_common)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:49:47.223501Z","iopub.execute_input":"2023-11-18T19:49:47.224368Z","iopub.status.idle":"2023-11-18T19:49:47.242715Z","shell.execute_reply.started":"2023-11-18T19:49:47.224333Z","shell.execute_reply":"2023-11-18T19:49:47.241630Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"ehQW4u_12yBe","executionInfo":{"status":"ok","timestamp":1700402749782,"user_tz":-180,"elapsed":445,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"73bb280d-b1fa-4b51-c676-12edf499efd5"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Топ слов по встречаемости из кластера 0\n","[('looked', 92), ('saw', 59), ('cried', 59), ('told', 51), ('returned', 34), ('reached', 26), ('felt', 25), ('glance', 23), ('wondered', 14), ('cry', 14)]\n","Топ слов по встречаемости из кластера 1\n","[('said', 464), ('came', 95), ('went', 92), ('asked', 69), ('heard', 63), ('took', 56), ('turned', 55), ('found', 49), ('put', 44), ('thought', 38)]\n","Топ слов по встречаемости из кластера 2\n","[('answered', 45), ('got', 34), ('passed', 27), ('opened', 24), ('sent', 18), ('shook', 18), ('followed', 17), ('set', 17), ('paused', 17), ('drew', 16)]\n","Топ слов по встречаемости из кластера 3\n","[('observed', 22), ('say', 21), ('died', 19), ('wonder', 16), ('tears', 15), ('rose', 14), ('smile', 13), ('wish', 12), ('taken', 12), ('dinner', 12)]\n","Топ слов по встречаемости из кластера 4\n","[('come', 37), ('fire', 34), ('brought', 27), ('seen', 21), ('saying', 18), ('death', 17), ('pulled', 17), ('carried', 15), ('explained', 12), ('led', 11)]\n","Топ слов по встречаемости из кластера 5\n","[('left', 36), ('see', 34), ('entered', 26), ('wind', 19), ('married', 18), ('coming', 18), ('smiled', 13), ('talked', 13), ('received', 11), ('music', 10)]\n"]}]},{"cell_type":"markdown","source":["### [бонус] Визуализация"],"metadata":{"id":"HGtUCqHw2yBe"}},{"cell_type":"code","source":["word_embedding_df['cluster'] = clustering_words.labels_\n","word_embedding_df"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:49:57.044213Z","iopub.execute_input":"2023-11-18T19:49:57.045133Z","iopub.status.idle":"2023-11-18T19:49:57.069725Z","shell.execute_reply.started":"2023-11-18T19:49:57.045094Z","shell.execute_reply":"2023-11-18T19:49:57.068684Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"v5yfPsua2yBe","executionInfo":{"status":"ok","timestamp":1700402825155,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"ebeb0ba9-e2a6-4d3f-d27d-38d0abe680aa"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            word                                              embed  cluster\n","0       lowering  [0.19831, -0.77033, 0.062455, 1.3418, -0.04004...        3\n","1        drizzle  [-0.79487, 0.4828, -0.30923, 0.68706, -0.31813...        4\n","2       jostling  [-0.022107, 0.035967, -0.077376, 0.21532, 0.00...        2\n","3      infection  [-0.011046, 0.051967, 0.072621, 0.24603, -0.84...        0\n","4         temper  [0.21224, -0.58716, 0.2765, -0.15791, -1.1571,...        0\n","...          ...                                                ...      ...\n","2487    sweating  [-0.19552, 0.02132, 0.28279, -0.11673, -0.7532...        2\n","2488    grunting  [0.68041, 0.20176, 0.69297, -0.20956, -0.12143...        2\n","2489  purchasing  [0.68857, -0.25502, 0.22754, 0.2858, -0.15375,...        4\n","2490   graduated  [0.92827, -0.11482, -0.70497, 0.32438, 0.00762...        3\n","2491     dallied  [0.058847, 0.10463, -0.45006, 0.71615, -0.2634...        5\n","\n","[2492 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-49103503-3b04-493c-83c6-34ee762078c8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>embed</th>\n","      <th>cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>lowering</td>\n","      <td>[0.19831, -0.77033, 0.062455, 1.3418, -0.04004...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>drizzle</td>\n","      <td>[-0.79487, 0.4828, -0.30923, 0.68706, -0.31813...</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>jostling</td>\n","      <td>[-0.022107, 0.035967, -0.077376, 0.21532, 0.00...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>infection</td>\n","      <td>[-0.011046, 0.051967, 0.072621, 0.24603, -0.84...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>temper</td>\n","      <td>[0.21224, -0.58716, 0.2765, -0.15791, -1.1571,...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2487</th>\n","      <td>sweating</td>\n","      <td>[-0.19552, 0.02132, 0.28279, -0.11673, -0.7532...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2488</th>\n","      <td>grunting</td>\n","      <td>[0.68041, 0.20176, 0.69297, -0.20956, -0.12143...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2489</th>\n","      <td>purchasing</td>\n","      <td>[0.68857, -0.25502, 0.22754, 0.2858, -0.15375,...</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2490</th>\n","      <td>graduated</td>\n","      <td>[0.92827, -0.11482, -0.70497, 0.32438, 0.00762...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2491</th>\n","      <td>dallied</td>\n","      <td>[0.058847, 0.10463, -0.45006, 0.71615, -0.2634...</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2492 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49103503-3b04-493c-83c6-34ee762078c8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-49103503-3b04-493c-83c6-34ee762078c8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-49103503-3b04-493c-83c6-34ee762078c8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6a58a96-9db1-4df5-8c5b-ab8f5acba621\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6a58a96-9db1-4df5-8c5b-ab8f5acba621')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6a58a96-9db1-4df5-8c5b-ab8f5acba621 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["trimap_viz = trimap.TRIMAP()\n","trimap_embedding = trimap_viz.fit_transform(np.array(list(word_embedding_df.embed.values)))\n","\n","fig = px.scatter(x=trimap_embedding[:, 0],\n","                 y=trimap_embedding[:, 1],\n","                 color=word_embedding_df.cluster,\n","                 hover_name=word_embedding_df.word)\n","fig.show()"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:51:17.365364Z","iopub.execute_input":"2023-11-18T19:51:17.366254Z","iopub.status.idle":"2023-11-18T19:51:19.831787Z","shell.execute_reply.started":"2023-11-18T19:51:17.366217Z","shell.execute_reply":"2023-11-18T19:51:19.830778Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"h43Pk2Bt2yBe","executionInfo":{"status":"ok","timestamp":1700402833227,"user_tz":-180,"elapsed":6004,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"c3552617-73b8-4d32-966c-8058fab2b1c1"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"db49b51e-a9bb-4c43-b080-577ab4a30718\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"db49b51e-a9bb-4c43-b080-577ab4a30718\")) {                    Plotly.newPlot(                        \"db49b51e-a9bb-4c43-b080-577ab4a30718\",                        [{\"hovertemplate\":\"\\u003cb\\u003e%{hovertext}\\u003c\\u002fb\\u003e\\u003cbr\\u003e\\u003cbr\\u003ex=%{x}\\u003cbr\\u003ey=%{y}\\u003cbr\\u003ecolor=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"hovertext\":[\"lowering\",\"drizzle\",\"jostling\",\"infection\",\"temper\",\"losing\",\"slipping\",\"sliding\",\"deposits\",\"sticking\",\"accumulating\",\"flows\",\"fog\",\"rolls\",\"creeping\",\"hovering\",\"drooping\",\"wheezing\",\"pinching\",\"peeping\",\"looming\",\"lighted\",\"gas\",\"addressed\",\"contemplation\",\"see\",\"engaged\",\"tripping\",\"groping\",\"running\",\"pretence\",\"mentioned\",\"yawning\",\"come\",\"plants\",\"keeps\",\"drones\",\"blew\",\"handled\",\"correcting\",\"observed\",\"tickled\",\"acquired\",\"born\",\"married\",\"died\",\"issue\",\"still-born\",\"improved\",\"adding\",\"birth\",\"inserting\",\"lost\",\"settled\",\"death\",\"excursions\",\"forced\",\"introduction\",\"found\",\"confirmed\",\"invited\",\"seen\",\"encouraged\",\"expected\",\"tidings\",\"purchased\",\"uniting\",\"summoned\",\"retired\",\"entered\",\"brought\",\"welded\",\"resolved\",\"provisioned\",\"precautions\",\"provided\",\"pestilence\",\"entertained\",\"ball\",\"masquerade\",\"held\",\"fire\",\"projected\",\"illumined\",\"appearances\",\"streamed\",\"look\",\"swung\",\"clang\",\"made\",\"sound\",\"constrained\",\"pause\",\"performance\",\"harken\",\"ceased\",\"evolutions\",\"disconcert\",\"rang\",\"pale\",\"passed\",\"echoes\",\"laughter\",\"looked\",\"smiled\",\"vows\",\"chiming\",\"meditation\",\"revel\",\"f\\u00eate\",\"glare\",\"glitter\",\"piquancy\",\"phantasm\",\"unsuited\",\"fancies\",\"stalked\",\"dreams\",\"writhed\",\"taking\",\"causing\",\"strikes\",\"voice\",\"chime\",\"die\",\"endured\",\"floats\",\"depart\",\"swells\",\"writhe\",\"stream\",\"waning\",\"peal\",\"reaches\",\"indulged\",\"beat\",\"sounding\",\"music\",\"told\",\"quieted\",\"cessation\",\"strokes\",\"revelled\",\"aware\",\"presence\",\"rumour\",\"buzz\",\"murmur\",\"disapprobation\",\"surprise\",\"terror\",\"horror\",\"disgust\",\"painted\",\"assume\",\"walking\",\"inclined\",\"nod\",\"came\",\"met\",\"rode\",\"hummed\",\"said\",\"halted\",\"turned\",\"reply\",\"hesitation\",\"discovery\",\"hunting\",\"give\",\"concluded\",\"smacking\",\"explained\",\"investigations\",\"tracing\",\"asked\",\"doubts\",\"retailing\",\"gone\",\"walked\",\"sat\",\"depositing\",\"appeared\",\"pursued\",\"seeing\",\"quickened\",\"frowned\",\"order\",\"call\",\"telling\",\"announcement\",\"declining\",\"stretched\",\"contemplated\",\"continued\",\"been\",\"put\",\"produced\",\"estimate\",\"record\",\"admit\",\"add\",\"conferred\",\"declare\",\"abrogation\",\"act\",\"received\",\"advent\",\"deemed\",\"hint\",\"insisted\",\"fervid\",\"assured\",\"gesticulating\",\"thrust\",\"intimated\",\"submission\",\"appeal\",\"saw\",\"resolving\",\"presented\",\"favor\",\"sent\",\"handed\",\"awakened\",\"crosser\",\"stammered\",\"passion\",\"kicked\",\"repeated\",\"slunk\",\"hurried\",\"wandered\",\"play\",\"pretended\",\"stuck\",\"angry\",\"muttering\",\"grinding\",\"saying\",\"heard\",\"talking\",\"stared\",\"lifted\",\"say\",\"answered\",\"wrung\",\"cried\",\"stayed\",\"party\",\"wailing\",\"clutched\",\"shivering\",\"grew\",\"gasped\",\"ran\",\"cholera\",\"dying\",\"ill\",\"wailed\",\"dead\",\"run\",\"panic\",\"hid\",\"forgotten\",\"slept\",\"sounds\",\"crept\",\"ate\",\"drank\",\"drowsy\",\"went\",\"shut\",\"frightened\",\"cries\",\"sleepy\",\"lay\",\"wails\",\"carried\",\"wondered\",\"noise\",\"hurrying\",\"waiting\",\"rustling\",\"gliding\",\"watching\",\"slipped\",\"watched\",\"footsteps\",\"talked\",\"opened\",\"frowning\",\"hungry\",\"neglected\",\"startled\",\"drawing\",\"thought\",\"asleep\",\"wakened\",\"exclaimed\",\"turning\",\"struck\",\"sinking\",\"launched\",\"lined\",\"awaiting\",\"clung\",\"start\",\"turn\",\"appealed\",\"noticed\",\"looking\",\"muttered\",\"flushed\",\"lowered\",\"proud\",\"chosen\",\"took\",\"closed\",\"lain\",\"list\",\"answer\",\"command\",\"greeted\",\"blocked\",\"unpopular\",\"blocking\",\"assenting\",\"anxiety\",\"pounced\",\"declared\",\"persuade\",\"ordered\",\"chuckled\",\"sighed\",\"nodded\",\"hinted\",\"assure\",\"interrupted\",\"led\",\"catching\",\"conversation\",\"murmured\",\"rose\",\"collected\",\"ensconced\",\"added\",\"rousing\",\"poured\",\"bite\",\"helped\",\"left\",\"promoted\",\"check\",\"row\",\"meeting\",\"affecting\",\"visiting\",\"resumed\",\"success\",\"inquired\",\"confessed\",\"resume\",\"intervened\",\"combed\",\"wounded\",\"happened\",\"demobbed\",\"tired\",\"peeped\",\"reading\",\"considering\",\"hear\",\"occurred\",\"started\",\"flashed\",\"pop\",\"falling\",\"wonder\",\"tried\",\"disappointment\",\"fell\",\"fall\",\"fallen\",\"got\",\"began\",\"spoke\",\"hope\",\"wish\",\"dozing\",\"dream\",\"jumped\",\"sight\",\"trying\",\"wondering\",\"fitted\",\"knelt\",\"longed\",\"think\",\"taste\",\"finding\",\"finished\",\"brightened\",\"waited\",\"nervous\",\"gossiping\",\"returned\",\"pulled\",\"sprang\",\"introduced\",\"drove\",\"followed\",\"measure\",\"glances\",\"disapproval\",\"inspection\",\"sifted\",\"caught\",\"drew\",\"leaned\",\"regarded\",\"smoked\",\"fanning\",\"hot\",\"offense\",\"bellowed\",\"glance\",\"examined\",\"lift\",\"irritating\",\"tickling\",\"sneered\",\"sprinkled\",\"pronounced\",\"slurred\",\"stare\",\"civility\",\"curl\",\"bent\",\"undid\",\"revealing\",\"straightened\",\"ignoring\",\"swore\",\"discovered\",\"scratched\",\"ripped\",\"shook\",\"mounted\",\"disturbed\",\"jingling\",\"discussed\",\"eyeing\",\"stated\",\"gamble\",\"tribute\",\"reminds\",\"remarked\",\"laughed\",\"jerked\",\"agreed\",\"joke\",\"blazing\",\"take\",\"go\",\"remember\",\"plodding\",\"following\",\"whistling\",\"breaking\",\"rapped\",\"called\",\"lingering\",\"says\",\"threw\",\"set\",\"hearing\",\"spoken\",\"described\",\"learn\",\"taken\",\"promised\",\"crossed\",\"dinner\",\"observing\",\"pipe\",\"supposed\",\"talk\",\"flapped\",\"stopped\",\"speaking\",\"glared\",\"oath\",\"pouring\",\"leapt\",\"played\",\"increase\",\"amusement\",\"flung\",\"increased\",\"awkwardness\",\"mist\",\"walk\",\"thickened\",\"reached\",\"suspended\",\"joined\",\"leaning\",\"remarking\",\"broke\",\"cursed\",\"exchanged\",\"glanced\",\"consolation\",\"replied\",\"stirred\",\"compressing\",\"danger\",\"reddened\",\"wind\",\"remark\",\"speculation\",\"hits\",\"lying\",\"depicted\",\"written\",\"read\",\"displaying\",\"decided\",\"built\",\"control\",\"attended\",\"checked\",\"dealing\",\"demanded\",\"interposed\",\"announced\",\"rejecting\",\"silenced\",\"detected\",\"controlling\",\"wandering\",\"clouds\",\"rain\",\"dispensed\",\"possessed\",\"care\",\"gathering\",\"drawn\",\"studied\",\"cloud\",\"sweeping\",\"blast\",\"formed\",\"glancing\",\"pinning\",\"surveying\",\"paused\",\"calling\",\"wished\",\"trembled\",\"idea\",\"seating\",\"gesture\",\"thrusting\",\"mused\",\"tottered\",\"regaining\",\"impudence\",\"answering\",\"fetched\",\"did\",\"poise\",\"stand\",\"cry\",\"hit\",\"striking\",\"cutting\",\"bled\",\"pain\",\"sharp\",\"climax\",\"feelings\",\"retreated\",\"defeat\",\"blows\",\"erection\",\"vanished\",\"coined\",\"listened\",\"verbiage\",\"resentment\",\"juggled\",\"shrunken\",\"emerged\",\"accepted\",\"promise\",\"poised\",\"regard\",\"wrapping\",\"disputed\",\"tossed\",\"raised\",\"disappeared\",\"gave\",\"crashing\",\"gulps\",\"outlined\",\"speech\",\"silent\",\"thoughtful\",\"sensation\",\"sickness\",\"off\",\"buttered\",\"smile\",\"folded\",\"drawled\",\"glint\",\"donned\",\"teased\",\"writing\",\"temptation\",\"washed\",\"shower\",\"enjoy\",\"answers\",\"completing\",\"recorded\",\"travelled\",\"effaced\",\"astonished\",\"opening\",\"rush\",\"beginning\",\"coming\",\"entering\",\"delight\",\"breath\",\"vowed\",\"consented\",\"blossomed\",\"delighted\",\"varnished\",\"burst\",\"flowered\",\"let\",\"invitation\",\"flatter\",\"abuse\",\"visit\",\"disclosed\",\"trimming\",\"scolding\",\"coughing\",\"tear\",\"adjusting\",\"sorry\",\"paid\",\"astonishment\",\"joy\",\"raptures\",\"impression\",\"gained\",\"feeding\",\"afraid\",\"soaked\",\"smothered\",\"lamed\",\"cut\",\"stung\",\"torn\",\"growled\",\"seized\",\"pleaded\",\"staring\",\"pointed\",\"emptied\",\"licking\",\"shake\",\"expressed\",\"tilted\",\"question\",\"dip\",\"roll\",\"keeping\",\"faltered\",\"hugged\",\"clasping\",\"limped\",\"picking\",\"going\",\"hugging\",\"sinister\",\"sullen\",\"arose\",\"wheeled\",\"melted\",\"murmuring\",\"dropped\",\"listening\",\"split\",\"supper\",\"whispered\",\"stepped\",\"fared\",\"closing\",\"hung\",\"harkened\",\"starting\",\"fearing\",\"fluttered\",\"danced\",\"hesitated\",\"impelled\",\"power\",\"shrinking\",\"song\",\"fear\",\"note\",\"smoke\",\"warmth\",\"cheer\",\"shouting\",\"peering\",\"flew\",\"dancing\",\"twined\",\"twirled\",\"flickered\",\"motion\",\"sang\",\"forgot\",\"dazzled\",\"bewildered\",\"fascinated\",\"whirl\",\"panting\",\"awoke\",\"peered\",\"crowding\",\"blurred\",\"fled\",\"stumbling\",\"feeling\",\"voices\",\"toiled\",\"haste\",\"struggling\",\"sank\",\"exhausted\",\"trembling\",\"drifted\",\"sleep\",\"sifting\",\"remembered\",\"vision\",\"waving\",\"flying\",\"determination\",\"gazed\",\"dreaming\",\"abstracted\",\"alert\",\"quizzical\",\"laughing\",\"challenged\",\"bridled\",\"scoffed\",\"asserted\",\"scornful\",\"soft\",\"waking\",\"daydream\",\"glinting\",\"noting\",\"fumbling\",\"clapped\",\"bounded\",\"flitted\",\"swaying\",\"dripping\",\"draught\",\"touched\",\"shock\",\"rained\",\"brightening\",\"still\",\"mischief\",\"hopped\",\"nestled\",\"pointing\",\"admitted\",\"faded\",\"crouched\",\"puzzled\",\"address\",\"refuse\",\"misinterpreted\",\"request\",\"difference\",\"event\",\"concerned\",\"storming\",\"revert\",\"assault\",\"stored\",\"stripped\",\"escaped\",\"removed\",\"transported\",\"worshipped\",\"completed\",\"breathed\",\"commanded\",\"bowed\",\"predicted\",\"polluted\",\"slaughter\",\"broken\",\"sacrilege\",\"perished\",\"possession\",\"placed\",\"won\",\"believe\",\"treating\",\"wrangle\",\"sally\",\"separated\",\"forded\",\"planted\",\"fighting\",\"orders\",\"plunder\",\"confusion\",\"conquest\",\"excesses\",\"loaded\",\"frenzy\",\"entrusted\",\"riot\",\"disgraced\",\"jests\",\"catchwords\",\"plundering\",\"break\",\"yelling\",\"dread\",\"crowded\",\"rushed\",\"shouted\",\"attendance\",\"throng\",\"proclamation\",\"words\",\"loss\",\"grief\",\"wedding\",\"sit\",\"recalled\",\"marriage\",\"chatted\",\"exertions\",\"maintain\",\"flow\",\"ideas\",\"hoped\",\"animated\",\"inquiries\",\"repeating\",\"exclamation\",\"quitting\",\"withdrew\",\"playing\",\"bustling\",\"directions\",\"crinkled\",\"mass\",\"croquet\",\"lit\",\"drag\",\"gaze\",\"advancing\",\"approach\",\"seated\",\"facing\",\"plunge\",\"surveyed\",\"reminded\",\"given\",\"leaving\",\"understanding\",\"laugh\",\"sparkled\",\"adventure\",\"realized\",\"yawned\",\"proposed\",\"instructed\",\"prepared\",\"holding\",\"lifting\",\"descended\",\"shrugged\",\"felt\",\"understood\",\"nodding\",\"wanted\",\"kissed\",\"rolled\",\"saving\",\"gathered\",\"reflected\",\"fan\",\"puffs\",\"assumed\",\"performing\",\"strolled\",\"amused\",\"entrance\",\"undressed\",\"piled\",\"utterances\",\"recommending\",\"submitted\",\"catastrophe\",\"circumstance\",\"settling\",\"accident\",\"imitation\",\"watered\",\"tears\",\"returning\",\"journey\",\"desire\",\"pass\",\"pacing\",\"work\",\"risen\",\"problem\",\"shown\",\"waved\",\"indicated\",\"fancy\",\"observe\",\"deduce\",\"changed\",\"fail\",\"rubbed\",\"tell\",\"caused\",\"scraped\",\"remove\",\"deduction\",\"out\",\"lighting\",\"throwing\",\"wrote\",\"endeavouring\",\"comes\",\"outburst\",\"sunset\",\"plumes\",\"covered\",\"ended\",\"differing\",\"connected\",\"thunders\",\"wagged\",\"preferred\",\"sauntered\",\"leave\",\"gratified\",\"preparing\",\"attracted\",\"cavalcade\",\"blushed\",\"recollected\",\"blush\",\"recollection\",\"beholding\",\"emotion\",\"witnessed\",\"driving\",\"proceed\",\"thinking\",\"determined\",\"designs\",\"dismounted\",\"sending\",\"proceeded\",\"illuminated\",\"hushed\",\"composure\",\"intention\",\"open\",\"overtook\",\"compliments\",\"begged\",\"ingratiate\",\"parting\",\"marrying\",\"arrived\",\"enquired\",\"tapped\",\"bid\",\"rivetted\",\"fixed\",\"painting\",\"shaking\",\"offered\",\"wiped\",\"cast\",\"drop\",\"blotted\",\"discoloured\",\"addressing\",\"odour\",\"scent\",\"perfume\",\"smoking\",\"catch\",\"effect\",\"shouldering\",\"circling\",\"insistence\",\"roar\",\"disappearance\",\"tossing\",\"elevated\",\"whorls\",\"strolling\",\"insist\",\"expression\",\"speak\",\"abducted\",\"discharged\",\"approaching\",\"pressed\",\"shudder\",\"darkened\",\"showed\",\"protest\",\"accents\",\"rising\",\"aloof\",\"feigning\",\"making\",\"protested\",\"belied\",\"sigh\",\"supported\",\"assisted\",\"desirable\",\"leading\",\"declined\",\"proffered\",\"bit\",\"picked\",\"lurked\",\"cluttered\",\"clutching\",\"seizure\",\"listen\",\"filtering\",\"moved\",\"place\",\"chord\",\"roamed\",\"thrill\",\"shattering\",\"regarding\",\"resented\",\"offended\",\"eating\",\"irritability\",\"anticipated\",\"shot\",\"grunted\",\"celebrated\",\"victory\",\"putting\",\"sniffing\",\"helplessness\",\"recoiling\",\"researches\",\"draft\",\"infuriated\",\"cleared\",\"mount\",\"tapping\",\"approval\",\"arranged\",\"whirring\",\"rippling\",\"breeze\",\"working\",\"partial\",\"begun\",\"swayed\",\"pretend\",\"alluding\",\"learned\",\"waxing\",\"smelling\",\"knocking\",\"learning\",\"breakfast\",\"drinking\",\"served\",\"selected\",\"buried\",\"poked\",\"pronouncing\",\"perceived\",\"counted\",\"rejoined\",\"thanked\",\"compliment\",\"astride\",\"attacked\",\"straightening\",\"converted\",\"springing\",\"kicking\",\"jump\",\"scattering\",\"acquaintance\",\"standing\",\"observation\",\"bought\",\"responded\",\"write\",\"claim\",\"attention\",\"gratification\",\"escorted\",\"inherited\",\"sale\",\"lamentations\",\"sold\",\"step\",\"appearance\",\"commenced\",\"bidding\",\"hold\",\"breathless\",\"visitation\",\"apparition\",\"shaken\",\"consequence\",\"scattered\",\"appearing\",\"present\",\"asking\",\"grimace\",\"kick\",\"faced\",\"groan\",\"reproach\",\"charmed\",\"inference\",\"episode\",\"fix\",\"quitted\",\"communicative\",\"had\",\"wonders\",\"committed\",\"departed\",\"professed\",\"organizing\",\"imagined\",\"arrive\",\"doubled\",\"affirmative\",\"tightened\",\"shutting\",\"rage\",\"grappled\",\"twist\",\"struggled\",\"fury\",\"lolling\",\"ebbed\",\"glazed\",\"flagged\",\"jolted\",\"shriek\",\"anger\",\"quick\",\"choked\",\"hiding\",\"struggle\",\"grumbled\",\"calculated\",\"attempted\",\"thrown\",\"filing\",\"nursing\",\"rattled\",\"expecting\",\"twisted\",\"growl\",\"stormed\",\"raged\",\"assailed\",\"allowed\",\"carted\",\"trucked\",\"deposited\",\"mauling\",\"headed\",\"deposition\",\"cheated\",\"trip\",\"fever\",\"trekked\",\"spending\",\"overcharged\",\"transhipped\",\"weighed\",\"excited\",\"suspected\",\"ascertained\",\"referring\",\"mistake\",\"anticipating\",\"change\",\"excitement\",\"burned\",\"cleansed\",\"erected\",\"shrank\",\"contact\",\"wakes\",\"fair\",\"whine\",\"rushing\",\"stood\",\"braying\",\"tooting\",\"quivered\",\"wrong\",\"whining\",\"trudged\",\"cracks\",\"screeching\",\"shouts\",\"screeches\",\"gazing\",\"killed\",\"spent\",\"lamented\",\"smelled\",\"rest\",\"flood\",\"drifting\",\"haze\",\"toying\",\"satisfied\",\"shone\",\"sombre\",\"appear\",\"stir\",\"boarded\",\"regret\",\"thoughts\",\"kiss\",\"touch\",\"clacked\",\"passing\",\"replaced\",\"conjectures\",\"termed\",\"pulling\",\"conscious\",\"intuition\",\"interest\",\"growing\",\"prevailed\",\"agreeable\",\"mingling\",\"sprung\",\"marked\",\"aroused\",\"clew\",\"ache\",\"affected\",\"realised\",\"smiling\",\"amazement\",\"offer\",\"return\",\"decline\",\"accept\",\"acknowledge\",\"planned\",\"dash\",\"ask\",\"flutter\",\"reassured\",\"studying\",\"witticism\",\"dragged\",\"whimpering\",\"tucked\",\"deploring\",\"escapade\",\"longing\",\"fought\",\"objections\",\"woke\",\"gong\",\"racket\",\"dressed\",\"explored\",\"sought\",\"plunged\",\"persuasive\",\"hypnotized\",\"aghast\",\"consider\",\"clashed\",\"intend\",\"sunny\",\"sparkling\",\"snowy\",\"grumbling\",\"tiptoed\",\"receiving\",\"deliberate\",\"drowned\",\"shivered\",\"crying\",\"wringing\",\"mewing\",\"clinging\",\"chased\",\"stooped\",\"wipe\",\"projecting\",\"tease\",\"unwound\",\"tied\",\"bared\",\"blowing\",\"stabbed\",\"severity\",\"predicament\",\"darted\",\"ascent\",\"tearing\",\"tearful\",\"colder\",\"tying\",\"saddened\",\"laying\",\"do\",\"meant\",\"generosity\",\"peevish\",\"guise\",\"wrangled\",\"leant\",\"repressing\",\"shocked\",\"sympathized\",\"repressed\",\"persisted\",\"thumped\",\"displeasure\",\"toy\",\"censured\",\"mumbled\",\"decision\",\"reversed\",\"parted\",\"revealed\",\"apologizing\",\"lateness\",\"exclaiming\",\"expect\",\"forward\",\"beckoned\",\"glad\",\"filling\",\"appointed\",\"enjoying\",\"informed\",\"advice\",\"bow\",\"box\",\"trotted\",\"chase\",\"frost\",\"pricked\",\"cantered\",\"galloping\",\"snorted\",\"away\",\"barking\",\"straight\",\"fright\",\"leaped\",\"dashing\",\"end\",\"whipped\",\"bleeding\",\"down\",\"groaning\",\"getting\",\"raise\",\"riding\",\"bang\",\"puzzle\",\"imprisonment\",\"swear\",\"reported\",\"deaths\",\"send\",\"hissing\",\"clenching\",\"drive\",\"spoilt\",\"bearing\",\"beheld\",\"standstill\",\"hopping\",\"untied\",\"survey\",\"glow\",\"lustre\",\"reflection\",\"deed\",\"smiles\",\"conjecture\",\"actions\",\"steps\",\"descending\",\"dispute\",\"reverie\",\"stepping\",\"handing\",\"gaining\",\"retreating\",\"indifference\",\"trail\",\"exhorted\",\"prayer\",\"recount\",\"weep\",\"cower\",\"exchange\",\"lengthening\",\"sprawled\",\"spurring\",\"flogged\",\"emerge\",\"fastening\",\"wishing\",\"refilled\",\"ridden\",\"flocking\",\"encountered\",\"tilt\",\"busy\",\"warranted\",\"testify\",\"grant\",\"rowing\",\"errand\",\"pace\",\"dissatisfaction\",\"stroke\",\"sounded\",\"ladling\",\"puff\",\"spat\",\"crammed\",\"desired\",\"confess\",\"approached\",\"persuaded\",\"annoyed\",\"discovering\",\"toil\",\"beckon\",\"occupation\",\"miss\",\"becomes\",\"excel\",\"pushing\",\"pleasure\",\"mastered\",\"apply\",\"earned\",\"laid\",\"carrying\",\"conclusions\",\"suggest\",\"supposing\",\"conclusion\",\"presentation\",\"stretching\",\"vanishes\",\"emerges\",\"inferences\",\"paced\",\"ring\",\"beg\",\"practising\",\"sneezing\",\"stop\",\"exercises\",\"goes\",\"reappears\",\"inflict\",\"amuse\",\"watch\",\"keep\",\"setting\",\"knocked\",\"pushed\",\"hush\",\"expedition\",\"ruined\",\"restoration\",\"wasted\",\"stopping\",\"liked\",\"insisting\",\"prevented\",\"disengaged\",\"adapted\",\"excuse\",\"dropping\",\"interested\",\"blazed\",\"judged\",\"urged\",\"suggested\",\"breakfasted\",\"word\",\"marking\",\"skirted\",\"advanced\",\"hunted\",\"squatted\",\"investigate\",\"scrambled\",\"foamed\",\"boiled\",\"searched\",\"lunch\",\"pumped\",\"assembled\",\"settlement\",\"borne\",\"occupied\",\"fastened\",\"sentence\",\"scandal\",\"warrant\",\"shame\",\"repelled\",\"action\",\"bore\",\"winked\",\"judging\",\"glided\",\"disappearing\",\"blight\",\"pierced\",\"yelp\",\"twittering\",\"calls\",\"flaring\",\"afterglow\",\"flooded\",\"swept\",\"moan\",\"fading\",\"strode\",\"brewing\",\"trotting\",\"moving\",\"deadened\",\"loom\",\"clinking\",\"queried\",\"jingled\",\"curses\",\"thuds\",\"strain\",\"heaves\",\"footstep\",\"wave\",\"became\",\"crash\",\"attested\",\"click\",\"sputtering\",\"efforts\",\"crackling\",\"flame\",\"shuffled\",\"glittered\",\"comin\",\"moaned\",\"raindrops\",\"pattered\",\"cracked\",\"query\",\"showing\",\"backed\",\"ejaculated\",\"glimpse\",\"visited\",\"search\",\"find\",\"howling\",\"drink\",\"refused\",\"mixed\",\"follow\",\"questions\",\"implored\",\"dried\",\"happy\",\"cuddled\",\"sob\",\"sobbed\",\"guessed\",\"pulse\",\"lurking\",\"raced\",\"ready\",\"deprived\",\"anxious\",\"opportunity\",\"luncheon\",\"bade\",\"permission\",\"enjoyed\",\"funeral\",\"landed\",\"agreement\",\"confronted\",\"pride\",\"display\",\"affectionate\",\"expressions\",\"know\",\"fragrance\",\"opposition\",\"blaze\",\"outbreak\",\"storm\",\"palpitating\",\"flaming\",\"jet\",\"invisible\",\"compared\",\"eruption\",\"vigil\",\"vibrating\",\"activity\",\"jetting\",\"flash\",\"projection\",\"streamer\",\"swimming\",\"gleam\",\"established\",\"dapple\",\"intoxicating\",\"whispering\",\"heightened\",\"transplanted\",\"plucked\",\"suffering\",\"substitution\",\"typing\",\"inserted\",\"altered\",\"appended\",\"snap\",\"tramped\",\"planked\",\"recognised\",\"tore\",\"inspected\",\"tackled\",\"despatched\",\"phrased\",\"scented\",\"sorted\",\"absent\",\"sadness\",\"re-entered\",\"revolved\",\"situation\",\"enlightened\",\"resolutions\",\"outbreaks\",\"apparent\",\"sketched\",\"rehearsed\",\"forgetting\",\"sped\",\"inspiration\",\"sorrow\",\"reversal\",\"hopes\",\"arrival\",\"weeping\",\"reposing\",\"troublesome\",\"lessening\",\"ceremony\",\"crisis\",\"heaviness\",\"indignation\",\"overthrow\",\"suffered\",\"dismissed\",\"wept\",\"mingle\",\"lessened\",\"eat\",\"grievance\",\"avenged\",\"swallowed\",\"draw\",\"embarrassment\",\"recollect\",\"exploit\",\"bewitched\",\"battle\",\"mention\",\"swarming\",\"charge\",\"thud\",\"kept\",\"runs\",\"fluttering\",\"driven\",\"scrimmage\",\"flashing\",\"rubbing\",\"stamping\",\"dodged\",\"shoulder\",\"sitting\",\"smell\",\"taught\",\"cold\",\"chilled\",\"confused\",\"worked\",\"nap\",\"brood\",\"brooding\",\"dining\",\"objected\",\"contented\",\"mots\",\"staid\",\"overheard\",\"whisper\",\"presentiment\",\"engagement\",\"coaxed\",\"exertion\",\"bark\",\"pity\",\"exhibited\",\"familiar\",\"bidden\",\"quietly\",\"sleeping\",\"sobs\",\"intoned\",\"blessed\",\"crosses\",\"gurgling\",\"whistle\",\"whistles\",\"skipped\",\"propped\",\"dipped\",\"lathered\",\"shave\",\"shaved\",\"raving\",\"moaning\",\"pull\",\"stirring\",\"clearing\",\"begging\",\"fretted\",\"giving\",\"kills\",\"asks\",\"pinched\",\"linked\",\"clacking\",\"prompted\",\"postpone\",\"feel\",\"disembarked\",\"sense\",\"nearing\",\"consorted\",\"invoked\",\"stolen\",\"evasion\",\"winced\",\"touching\",\"delay\",\"recognition\",\"enquiry\",\"wound\",\"rejoinder\",\"qualification\",\"shirked\",\"muffled\",\"forsaken\",\"case\",\"protection\",\"appointment\",\"presenting\",\"preparation\",\"impulse\",\"response\",\"comparison\",\"deserted\",\"madness\",\"snapped\",\"compromised\",\"forged\",\"fragrant\",\"showered\",\"chirping\",\"chirp\",\"scrape\",\"engaging\",\"rented\",\"pool\",\"tattoo\",\"echoing\",\"snapping\",\"coughed\",\"contracted\",\"threatened\",\"controlled\",\"shoveled\",\"whistled\",\"brisker\",\"cough\",\"producing\",\"soothed\",\"cosseted\",\"breathing\",\"dusted\",\"breaths\",\"bending\",\"swinging\",\"sowing\",\"spoiled\",\"tea\",\"knitting\",\"twitched\",\"jaunting\",\"headache\",\"dumb\",\"jolt\",\"distinguish\",\"light\",\"registered\",\"traversed\",\"recognized\",\"rung\",\"sentenced\",\"pardoned\",\"serving\",\"punishment\",\"misdemeanor\",\"paces\",\"varnishing\",\"task\",\"effusion\",\"air\",\"gravity\",\"seeking\",\"quoted\",\"remarks\",\"retraced\",\"converged\",\"campfire\",\"hovered\",\"flickering\",\"reflections\",\"fanned\",\"paling\",\"sparks\",\"echoed\",\"clink\",\"pads\",\"reach\",\"move\",\"halt\",\"preparations\",\"movements\",\"grateful\",\"solitude\",\"traveled\",\"digging\",\"crack\",\"halting\",\"packed\",\"slaps\",\"march\",\"camped\",\"travel\",\"reserve\",\"respond\",\"realization\",\"dug\",\"bring\",\"grasped\",\"amazed\",\"pitying\",\"curious\",\"quiver\",\"astounded\",\"force\",\"dark\",\"moist\",\"seep\",\"complied\",\"filled\",\"sniff\",\"agree\",\"examining\",\"complaining\",\"advised\",\"softened\",\"pecking\",\"lecture\",\"stroking\",\"snow\",\"crackled\",\"lecturing\",\"counsel\",\"persuasions\",\"discourse\",\"resolution\",\"concern\",\"prompting\",\"blow\",\"rise\",\"sick\",\"terrified\",\"reflect\",\"abandoning\",\"entreaties\",\"reproached\",\"snowfall\",\"staggered\",\"stamped\",\"fortune\",\"surprised\",\"melting\",\"dripped\",\"advances\",\"whisked\",\"mixing\",\"stabs\",\"cooked\",\"delaying\",\"gaping\",\"rigid\",\"recover\",\"embarrassed\",\"messing\",\"done\",\"unfolded\",\"extended\",\"tangent\",\"smouldered\",\"eaten\",\"drunk\",\"warmed\",\"animation\",\"acknowledgment\",\"explanation\",\"snatching\",\"reposed\",\"dumped\",\"flourishing\",\"directed\",\"hitching\",\"singing\",\"dined\",\"lingered\",\"dawdled\",\"scanned\",\"thrilled\",\"mantled\",\"suffused\",\"wooing\",\"flitting\",\"confusing\",\"guess\",\"leaping\",\"pictured\",\"blinking\",\"meditating\",\"bellied\",\"wistfulness\",\"flared\",\"fleeing\",\"arched\",\"love\",\"giggling\",\"indignant\",\"glowed\",\"apologize\",\"rammed\",\"rid\",\"yawn\",\"patted\",\"stroked\",\"fidgeting\",\"bell\",\"averred\",\"fit\",\"cured\",\"up\",\"packing\",\"extracted\",\"inscription\",\"blushing\",\"tells\",\"detained\",\"apprehend\",\"bequeathed\",\"abandon\",\"applying\",\"aims\",\"remind\",\"discontinued\",\"foresee\",\"perplexity\",\"uneasiness\",\"remorse\",\"detaining\",\"complying\",\"infatuated\",\"conjuring\",\"recommended\",\"instigation\",\"endeavoured\",\"enraged\",\"unkindness\",\"burnt\",\"denied\",\"anguish\",\"elopement\",\"illness\",\"recovery\",\"surging\",\"seething\",\"carnage\",\"allowing\",\"slip\",\"escape\",\"howl\",\"blunder\",\"located\",\"departure\",\"glimpses\",\"topped\",\"suspense\",\"arming\",\"strapped\",\"darkness\",\"await\",\"trot\",\"pursuing\",\"positive\",\"hoping\",\"report\",\"shots\",\"consternation\",\"dismay\",\"riveted\",\"narration\",\"charging\",\"shooting\",\"whooping\",\"convinced\",\"routing\",\"apprehension\",\"grasping\",\"condescended\",\"provision\",\"named\",\"adhered\",\"premised\",\"burying\",\"dreary\",\"beamed\",\"placing\",\"ushered\",\"gasping\",\"struggles\",\"sneezed\",\"advertise\",\"imposed\",\"proof\",\"rustled\",\"warm\",\"rub\",\"tasting\",\"perspective\",\"imprinted\",\"shuddered\",\"chafed\",\"pausing\",\"applied\",\"dress\",\"badged\",\"ticketed\",\"retiring\",\"tremble\",\"adopted\",\"plan\",\"arguing\",\"encouragement\",\"debate\",\"opposed\",\"advocated\",\"clamored\",\"bids\",\"bustled\",\"disdaining\",\"comments\",\"fill\",\"discussions\",\"crawled\",\"beating\",\"wreathed\",\"discouraged\",\"rebellion\",\"winds\",\"rejoicing\",\"shiver\",\"ecstasy\",\"enlisted\",\"milking\",\"silence\",\"milk\",\"trails\",\"disappointed\",\"primed\",\"destroyed\",\"peeled\",\"punching\",\"resurrected\",\"seize\",\"arrest\",\"whirled\",\"snatched\",\"through\",\"stealing\",\"scare\",\"suspicion\",\"flattered\",\"forestalled\",\"vexed\",\"overlooked\",\"missed\",\"forgive\",\"miscarried\",\"stumbled\",\"begin\",\"strike\",\"advertised\",\"withdrawn\",\"raffle\",\"pay\",\"separation\",\"affronted\",\"welcomed\",\"foreboding\",\"glowing\",\"pressing\",\"frown\",\"withdraw\",\"sheltered\",\"express\",\"wincing\",\"uttered\",\"preceded\",\"relieving\",\"conjectured\",\"ejaculation\",\"admire\",\"distinguished\",\"chatter\",\"clatter\",\"squealing\",\"haunted\",\"bestow\",\"doubt\",\"overwhelmed\",\"decamp\",\"attempting\",\"sneaking\",\"watering\",\"caress\",\"provoked\",\"checking\",\"punch\",\"striding\",\"dived\",\"guardianship\",\"imagining\",\"winking\",\"faces\",\"irritated\",\"interpose\",\"proceeding\",\"issued\",\"parrying\",\"demand\",\"climbed\",\"tempest\",\"yelping\",\"used\",\"subsided\",\"heaving\",\"treatment\",\"restoring\",\"ease\",\"mad\",\"tiresome\",\"lonesome\",\"shivers\",\"scared\",\"crawling\",\"flipped\",\"shriveled\",\"licks\",\"tiptoeing\",\"stooping\",\"itching\",\"itch\",\"itched\",\"reckoned\",\"breathe\",\"snore\",\"comfortable\",\"build\",\"blasted\",\"executed\",\"trodden\",\"execution\",\"prophecy\",\"grasp\",\"crime\",\"operations\",\"hard\",\"brackish\",\"wrested\",\"unearthed\",\"commissioned\",\"elated\",\"appalled\",\"sailed\",\"chartered\",\"scouring\",\"washing\",\"tripped\",\"overturning\",\"drenched\",\"oaths\",\"regained\",\"felled\",\"snarl\",\"crushing\",\"white\",\"mutiny\",\"firing\",\"lodged\",\"assisting\",\"limping\",\"wounding\",\"glowering\",\"bored\",\"breakdown\",\"consumption\",\"sampled\",\"pleased\",\"tipsy\",\"essayed\",\"exaltation\",\"reaction\",\"incident\",\"rejoiced\",\"hunched\",\"dreamy\",\"bound\",\"operation\",\"curled\",\"gives\",\"shipwrecked\",\"swims\",\"consulted\",\"sail\",\"voyage\",\"inform\",\"passage\",\"spied\",\"shift\",\"rowed\",\"computation\",\"trusted\",\"flurry\",\"swam\",\"tide\",\"abated\",\"roared\",\"hurt\",\"falls\",\"ventured\",\"wrench\",\"bind\",\"loosened\",\"shout\",\"flight\",\"over\",\"striving\",\"volley\",\"design\",\"disposed\",\"knew\",\"oration\",\"support\",\"acted\",\"promises\",\"demands\",\"signify\",\"learnt\",\"supplied\",\"marks\",\"sign\",\"slung\",\"signs\",\"warning\",\"tempted\",\"remembrance\",\"interpreted\",\"imaginations\",\"considered\",\"treated\",\"posture\",\"show\",\"smart\",\"blisters\",\"tokens\",\"repetitions\",\"relaxing\",\"conjecturing\",\"torrent\",\"violence\",\"daubed\",\"mingled\",\"commencement\",\"enterprise\",\"dispelled\",\"agitation\",\"enthusiasm\",\"undertaking\",\"dedicated\",\"own\",\"entreated\",\"hired\",\"complaints\",\"acquainted\",\"secure\",\"confessing\",\"abandoned\",\"bestowed\",\"solicited\",\"stifles\",\"puffing\",\"detect\",\"smells\",\"dragging\",\"vapor\",\"chirps\",\"drags\",\"notion\",\"float\",\"choose\",\"steadying\",\"inclining\",\"pacified\",\"groped\",\"kindled\",\"glimmer\",\"trod\",\"skinning\",\"munching\",\"gloom\",\"unnerved\",\"pondered\",\"acting\",\"reined\",\"thrilling\",\"speculating\",\"experiment\",\"deepen\",\"uplifted\",\"conducted\",\"heighten\",\"sentiments\",\"accosted\",\"doubted\",\"awed\",\"routed\",\"saved\",\"disaster\",\"admonishing\",\"spread\",\"certainty\",\"diminished\",\"objects\",\"shelved\",\"discussion\",\"premise\",\"duel\",\"smuggled\",\"chill\",\"ascended\",\"curiosity\",\"clinched\",\"propitiated\",\"declaring\",\"plodded\",\"cheering\",\"rebuking\",\"ascending\",\"collared\",\"whack\",\"directing\",\"ploughing\",\"account\",\"pretending\",\"summons\",\"bursting\",\"inhabited\",\"shrieked\",\"carving\",\"snorting\",\"choking\",\"screaming\",\"demolishing\",\"discuss\",\"misadventure\",\"explosion\",\"warned\",\"letting\",\"stampeded\",\"rolling\",\"obtained\",\"confession\",\"tales\",\"wrought\",\"charged\",\"attack\",\"christened\",\"sweating\",\"grunting\",\"purchasing\",\"graduated\",\"dallied\"],\"legendgroup\":\"\",\"marker\":{\"color\":[3,4,2,0,0,3,2,2,4,2,2,4,4,4,2,3,2,2,2,2,0,2,4,0,0,1,1,2,5,3,5,1,2,1,4,1,4,3,4,1,0,2,4,3,3,0,1,5,3,1,3,0,3,1,0,2,1,1,4,1,3,3,1,3,0,4,1,1,3,3,3,2,1,5,4,4,5,5,3,5,3,3,3,5,1,4,1,2,2,3,1,5,2,1,0,3,0,5,2,4,3,0,2,1,2,1,2,0,5,5,2,2,5,5,5,5,5,0,2,3,0,3,0,2,0,0,2,3,4,2,4,0,2,3,5,3,0,1,1,0,1,0,5,1,1,5,0,2,5,0,1,0,0,4,1,4,1,0,3,3,2,2,1,1,3,1,1,1,4,1,1,2,1,1,4,1,0,4,1,4,4,4,1,1,1,2,5,1,1,1,1,3,3,2,3,3,3,1,3,1,1,1,0,1,5,1,1,0,0,0,1,5,1,2,2,5,1,1,1,1,0,1,1,1,2,2,2,0,3,0,5,2,2,1,1,2,0,2,2,1,1,1,2,1,1,1,2,2,4,1,2,2,2,3,2,3,0,0,0,2,3,3,0,4,0,2,1,3,4,4,5,3,1,0,2,0,4,2,4,1,1,2,4,2,2,4,3,4,0,1,3,2,0,0,0,1,1,2,5,2,1,3,3,3,4,1,2,3,1,1,1,1,2,2,3,0,1,3,3,5,1,1,3,5,1,1,1,5,0,2,1,1,1,2,2,2,5,1,0,3,2,5,2,3,4,5,1,2,4,0,1,3,3,4,3,1,0,3,1,1,5,1,1,1,4,3,1,2,0,5,1,1,1,3,3,2,1,3,1,1,0,3,3,3,1,3,0,1,1,2,0,3,1,1,1,2,2,2,1,1,1,3,0,4,0,2,3,3,2,1,3,3,1,2,0,4,4,2,1,2,0,4,0,4,3,2,0,1,1,5,5,5,2,0,2,2,0,2,2,5,0,2,1,0,4,2,2,0,2,0,2,1,2,1,4,0,0,5,2,2,1,2,0,1,1,1,2,3,2,3,5,1,0,1,3,3,1,0,1,3,3,1,3,4,0,2,1,1,2,1,0,2,0,4,3,1,3,0,2,3,5,4,4,4,3,1,3,2,5,3,5,4,2,2,1,0,0,0,2,4,0,0,3,4,4,1,1,4,1,4,1,3,4,1,1,5,1,1,0,4,1,2,4,4,5,0,0,4,1,3,4,0,3,3,2,2,4,2,1,1,2,0,4,0,2,5,5,3,5,1,3,1,2,4,2,3,3,3,2,0,1,2,0,3,3,3,5,4,0,1,5,0,5,2,0,1,1,2,1,2,1,3,3,4,3,3,2,0,0,0,0,0,0,3,4,2,3,2,2,4,5,1,1,2,2,3,1,1,1,3,5,0,3,1,3,1,3,0,2,1,1,2,0,2,0,2,1,3,5,1,3,1,2,5,2,3,2,0,1,0,0,2,0,3,2,0,2,2,5,3,0,2,2,4,1,2,1,4,2,0,1,2,1,2,4,1,2,2,2,2,2,1,2,0,0,0,2,4,2,3,1,3,5,2,1,2,3,2,5,3,0,2,2,1,5,1,3,1,0,1,4,0,2,2,2,3,1,5,5,2,1,2,1,0,0,0,5,2,2,2,2,0,4,2,0,0,2,1,0,3,0,2,3,2,4,1,0,2,3,1,2,0,0,4,0,2,1,5,5,1,5,4,2,5,2,1,2,2,3,5,2,2,2,3,0,3,0,3,1,2,2,1,1,0,2,0,0,1,0,1,1,1,1,2,1,3,4,1,4,1,4,0,1,2,3,2,3,4,1,2,5,4,4,1,3,1,0,5,2,3,0,4,0,1,2,0,0,1,4,0,1,3,5,5,5,2,3,2,0,4,3,2,3,4,0,0,3,0,0,4,1,3,5,5,1,4,0,1,0,1,1,0,2,1,1,4,1,2,1,2,2,2,2,3,0,4,0,3,3,0,3,3,0,2,2,0,1,2,1,1,1,3,1,0,5,0,1,2,1,2,3,2,4,1,0,2,1,1,2,0,4,5,2,2,1,1,0,1,1,3,0,5,2,3,3,1,3,0,1,3,0,1,2,1,0,0,5,1,1,2,1,0,2,1,0,3,2,3,1,5,1,0,0,4,4,3,1,4,2,2,1,2,3,0,1,1,5,2,5,2,5,5,0,0,3,1,0,1,4,2,1,1,2,2,2,1,3,2,5,1,5,2,3,3,5,2,1,5,4,4,0,1,4,1,3,2,5,0,5,2,2,1,2,1,2,2,1,0,4,3,3,2,2,1,0,0,1,0,3,1,2,2,1,1,0,3,0,5,3,1,5,2,1,1,5,3,1,5,1,3,2,4,2,4,1,0,3,3,0,4,0,2,1,5,0,4,0,3,3,2,0,3,1,4,0,2,0,1,0,1,4,2,1,4,2,2,4,1,1,3,2,1,5,3,5,2,3,3,4,4,3,1,4,2,5,1,3,3,5,5,0,3,2,3,2,3,3,0,5,4,0,4,1,1,1,1,5,2,0,4,5,4,1,1,3,1,3,5,5,5,0,1,4,1,1,1,2,3,0,2,5,5,0,1,1,5,0,3,0,1,3,0,1,0,3,3,1,1,1,0,5,0,0,0,5,0,2,2,0,2,0,1,4,4,0,5,3,1,3,1,0,0,3,2,2,2,0,5,1,4,4,4,2,3,1,5,3,0,2,3,5,5,5,0,1,5,1,1,3,1,0,4,5,4,3,1,2,1,2,3,4,2,2,2,1,2,2,2,2,2,2,2,3,1,5,2,3,0,3,4,2,1,2,0,1,4,2,1,0,2,1,5,3,3,0,1,1,0,0,3,3,0,5,2,2,1,0,5,2,0,1,2,0,1,3,3,1,1,1,3,1,2,5,3,5,2,2,2,5,5,0,0,1,2,0,2,4,0,1,3,0,5,5,1,3,1,4,0,4,0,5,1,1,4,2,2,2,5,2,3,0,1,2,5,2,3,4,3,1,1,1,2,3,2,5,4,3,0,4,1,1,0,5,5,5,5,2,0,5,0,0,2,0,4,5,2,1,1,2,1,1,5,5,3,1,5,0,4,3,3,1,1,2,4,2,3,2,2,5,2,5,3,2,3,5,3,0,3,4,0,3,2,1,3,2,0,0,1,0,1,0,1,2,2,3,5,4,5,3,2,2,3,2,2,0,0,2,0,1,1,0,1,5,1,1,3,3,0,3,5,0,1,2,2,4,2,2,0,5,0,2,1,4,2,2,1,2,4,1,1,1,2,5,3,0,0,0,5,2,0,4,1,1,1,1,0,0,2,5,4,1,1,4,1,0,3,1,3,4,4,1,1,5,1,0,3,0,0,0,3,2,1,2,2,1,1,1,0,1,5,4,1,3,3,1,2,3,4,1,2,1,1,1,1,5,1,1,3,1,0,0,1,1,5,0,1,2,3,4,2,1,2,5,4,4,4,4,4,1,4,4,2,1,1,1,0,1,1,4,2,1,2,3,2,2,2,2,1,0,0,0,0,2,0,2,2,2,3,5,0,2,5,5,5,2,0,2,5,0,3,3,0,0,2,1,2,2,5,2,2,2,2,5,2,0,1,1,5,0,3,1,1,2,4,1,1,1,1,5,4,0,5,2,2,5,0,2,2,1,1,0,1,4,5,1,3,0,3,1,1,0,4,5,0,1,2,1,4,0,4,5,2,3,0,3,4,0,2,1,2,0,2,2,2,2,3,5,5,2,0,4,2,0,0,0,0,1,0,2,5,2,0,2,4,5,2,5,2,0,1,0,0,0,0,0,1,0,1,0,0,1,2,0,0,1,1,1,2,5,5,0,0,0,5,0,1,0,1,2,2,0,4,1,2,4,1,0,5,1,5,0,1,2,1,2,1,3,2,3,3,2,2,2,5,0,4,2,3,4,4,0,1,2,2,0,4,1,5,2,0,5,2,5,1,5,5,2,0,4,0,5,4,2,2,2,0,3,2,2,2,2,2,3,5,2,2,2,2,1,4,1,1,5,3,3,1,2,4,2,0,1,0,2,0,3,5,0,4,1,2,3,1,0,1,0,5,1,5,2,5,1,1,3,0,1,0,1,3,4,0,2,1,4,2,5,2,2,2,1,4,3,2,0,2,5,3,1,1,2,2,2,0,1,5,5,2,2,2,2,2,2,5,4,2,5,5,0,1,0,0,4,3,0,0,2,1,5,3,1,1,0,5,1,5,3,0,1,1,0,5,4,5,3,2,0,0,5,0,0,2,2,3,1,1,1,1,0,0,3,4,1,1,4,2,3,2,1,3,1,0,4,1,2,0,5,0,2,0,3,4,4,2,1,4,4,1,1,0,1,4,2,0,2,4,2,2,3,2,0,1,0,0,3,3,0,0,1,1,5,5,4,2,0,4,0,4,2,3,2,1,2,4,1,2,1,0,0,2,1,0,3,0,5,4,5,4,0,0,1,2,5,4,2,1,2,1,5,0,5,0,0,5,2,2,5,0,1,3,4,2,2,2,5,0,4,2,0,2,5,2,1,2,1,2,2,2,2,3,5,1,4,3,2,4,0,2,1,1,1,0,1,1,1,0,3,5,5,0,1,2,1,5,5,1,5,5,0,5,4,1,0,5,0,3,3,0,0,1,2,4,2,1,3,1,0,3,0,1,2,4,1,2,1,1,1,1,3,0,0,2,0,1,3,2,1,3,0,2,5,1,3,1,5,2,0,2,1,2,2,0,5,4,1,1,5,4,2,4,0,0,2,5,2,1,4,5,2,3,2,1,1,1,0,1,1,1,2,1,2,5,0,4,1,2,3,2,1,1,4,2,2,4,3,2,0,4,3,0,2,4,4,2,5,4,1,5,2,3,4,1,1,0,5,5,0,3,1,5,2,3,3,4,1,2,1,1,5,1,0,2,1,2,1,4,1,2,0,0,0,5,5,0,3,0,2,2,0,0,0,0,5,1,2,2,2,0,4,2,2,3,5,0,2,0,0,5,1,1,2,1,3,2,2,4,0,2,0,1,1,1,5,2,2,0,2,2,2,2,5,2,2,2,5,5,2,2,1,4,3,1,0,1,0,2,1,3,1,4,2,4,3,0,0,3,3,4,2,2,1,2,0,3,4,2,2,4,1,3,1,1,2,3,2,0,1,3,0,0,5,5,5,1,3,2,0,0,4,3,3,3,2,2,1,3,3,1,1,5,1,2,0,1,0,2,0,0,0,1,1,2,2,1,1,2,3,3,1,3,4,4,1,5,1,1,1,1,0,3,4,1,1,2,1,4,1,0,0,0,0,0,0,1,1,2,0,0,2,5,0,1,2,2,0,4,5,2,0,1,0,3,5,1,1,5,1,1,4,0,5,2,2,4,2,2,4,2,2,0,2,1,0,5,5,5,5,0,0,2,2,0,5,5,1,2,2,5,1,0,5,3,0,0,5,5,0,3,2,0,5,3,1,0,4,5,1,0,2,4,4,0,0,3,5,1,5,4,5,0,2,5,1,2,4,1,1,0,4,2,2,5,4,2,2,1,5,3,1,1,2,4,1,1,0,2,1,3,5,2,2,4,3,5],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"showlegend\":false,\"x\":[32.648719787597656,-16.24981117248535,-30.996620178222656,11.021008491516113,-11.651872634887695,33.3114128112793,37.491947174072266,34.55598831176758,18.068449020385742,31.06233787536621,-19.738523483276367,15.525510787963867,-8.85152816772461,11.150970458984375,-23.596147537231445,-24.04121208190918,-35.1561393737793,-39.68867492675781,-33.19725799560547,-36.60731506347656,24.07754135131836,-30.601728439331055,7.937333583831787,27.982929229736328,-18.60565757751465,39.501766204833984,23.378759384155273,-24.766742706298828,-32.125423431396484,30.70893669128418,-28.652597427368164,25.998811721801758,-21.40785789489746,40.975337982177734,15.19205093383789,43.175052642822266,-23.041179656982422,10.096184730529785,22.65205192565918,-19.719667434692383,24.151399612426758,-39.78046417236328,23.899030685424805,27.969966888427734,27.572057723999023,15.207118034362793,26.693321228027344,-38.21118927001953,38.5836067199707,30.94060707092285,15.73588752746582,-24.025863647460938,36.4254264831543,28.857315063476562,15.69078540802002,-21.985538482666016,35.0263671875,26.935348510742188,28.89997673034668,27.72529411315918,29.31050682067871,37.60102462768555,32.7807502746582,36.089576721191406,-23.47602081298828,22.871328353881836,-13.362992286682129,30.793163299560547,28.709718704223633,34.34184646606445,38.70009231567383,-16.416973114013672,26.150148391723633,-33.56709671020508,13.027894020080566,33.133575439453125,-31.898235321044922,-30.052295684814453,27.49131965637207,-28.69622039794922,38.49142074584961,13.952007293701172,36.06330871582031,-36.798606872558594,33.48208236694336,-27.07881736755371,40.60670471191406,-24.756303787231445,-45.89115905761719,38.04108810424805,11.450891494750977,-17.999181747436523,-25.46727752685547,34.71940231323242,-31.399986267089844,30.62897300720215,-29.215049743652344,-37.79503631591797,-48.77680587768555,-15.072986602783203,30.110027313232422,-10.727423667907715,-49.270423889160156,39.01307678222656,-47.39259719848633,33.96624755859375,-46.33118438720703,-18.72141456604004,-28.06957244873047,-29.399011611938477,-33.381832122802734,-27.3674373626709,-33.373958587646484,-33.229251861572266,-33.505859375,-29.547130584716797,-31.9615478515625,8.796222686767578,-36.663063049316406,40.260643005371094,17.007049560546875,21.53693962097168,13.17607307434082,-46.499698638916016,12.763937950134277,25.21345329284668,-22.38898277282715,27.755889892578125,-18.77947425842285,-37.51763916015625,12.637312889099121,-20.517290115356445,-46.581016540527344,31.82415008544922,-30.579496383666992,32.2959098815918,-0.913555920124054,12.550036430358887,33.72257995605469,-21.229158401489258,25.496421813964844,27.33075523376465,-36.74327850341797,23.008535385131836,26.496206283569336,-18.624475479125977,-13.695172309875488,-44.43838119506836,-36.625614166259766,30.438444137573242,18.38919448852539,12.413247108459473,-8.155655860900879,14.6104154586792,29.4287166595459,27.922264099121094,-16.889318466186523,-23.02239418029785,39.519691467285156,29.807043075561523,-24.769079208374023,-39.60641098022461,35.75221633911133,32.00692367553711,38.85091781616211,25.32039451599121,-19.90264892578125,22.004682540893555,20.804935455322266,39.96635818481445,26.84520721435547,-32.179786682128906,28.54506492614746,22.807701110839844,-17.368654251098633,33.46361541748047,21.640207290649414,-17.09018898010254,42.066165924072266,26.43612289428711,29.718496322631836,-21.689485549926758,33.7381706237793,23.50650978088379,36.98171615600586,-25.42474937438965,-30.071836471557617,34.32825469970703,32.270545959472656,31.30104637145996,30.84659767150879,39.27302932739258,23.548614501953125,-27.68947410583496,37.8919563293457,38.7470817565918,40.19134521484375,21.253501892089844,33.63080978393555,32.54463195800781,21.298362731933594,5.697995185852051,27.7114315032959,32.08748245239258,-27.050697326660156,28.97481918334961,33.85649490356445,-17.410905838012695,27.550142288208008,-18.75821304321289,30.44632339477539,-34.074012756347656,29.092817306518555,-39.70348358154297,-14.317022323608398,-33.399051666259766,-16.638572692871094,32.39609909057617,38.74477767944336,24.869203567504883,28.43726921081543,31.517925262451172,35.51224136352539,32.57206726074219,-31.488489151000977,-38.47359085083008,-50.71398162841797,-0.6607449650764465,26.510496139526367,26.233022689819336,-38.45780944824219,-28.29075050354004,-30.367277145385742,36.21881103515625,-26.380733489990234,31.50079345703125,4.521230697631836,-48.03169631958008,-21.16446304321289,32.204097747802734,23.82713508605957,27.184017181396484,-39.86035919189453,32.81625747680664,36.428794860839844,26.2010440826416,-32.43149185180664,-49.549312591552734,36.67927932739258,33.26813507080078,-51.10020446777344,-40.45165252685547,-37.60188293457031,36.83481216430664,-49.69914245605469,30.60859489440918,10.306958198547363,13.5548734664917,14.16982650756836,-51.404117584228516,13.383758544921875,32.73699188232422,1.4476624727249146,-24.548131942749023,-15.077882766723633,-28.05454444885254,11.740663528442383,-27.110929489135742,-13.225473403930664,-19.492023468017578,-34.735870361328125,37.00516128540039,30.805566787719727,-10.148646354675293,-50.974151611328125,-27.544200897216797,27.879732131958008,-48.814823150634766,24.908369064331055,8.006617546081543,1.528973937034607,-31.48274040222168,30.776813507080078,-45.218963623046875,-25.779430389404297,32.07817840576172,41.141578674316406,31.59172248840332,-22.0281925201416,26.9978084564209,34.53518295288086,-39.09577560424805,-9.069953918457031,-15.19771957397461,-15.994888305664062,35.760520935058594,25.925548553466797,-29.86382293701172,-36.88608932495117,-51.08799743652344,37.490848541259766,17.994274139404297,35.53310775756836,33.97746276855469,15.304338455200195,24.33363914489746,-29.80413055419922,41.23163986206055,39.722896575927734,33.02488708496094,24.459453582763672,38.96139144897461,-52.061065673828125,-26.06211280822754,32.75615692138672,7.244056224822998,29.107097625732422,38.95871353149414,35.56842803955078,-32.909481048583984,31.361764907836914,26.54176902770996,25.21980094909668,-46.59148406982422,28.85190773010254,28.947431564331055,29.77118682861328,-37.189125061035156,-0.9160196185112,-30.371797561645508,30.16779899597168,33.453243255615234,32.35795593261719,-51.20254898071289,-51.41887283325195,-43.909297943115234,29.17734718322754,31.312137603759766,28.266298294067383,39.05466079711914,27.840496063232422,26.501258850097656,-50.7070198059082,40.36732482910156,22.026344299316406,-31.072065353393555,35.690364837646484,-46.486915588378906,-17.2210636138916,-9.567946434020996,38.79059600830078,39.33552169799805,27.684051513671875,22.82720375061035,28.919082641601562,29.910715103149414,21.7952880859375,29.259178161621094,33.360939025878906,36.20351028442383,-32.792179107666016,19.675161361694336,33.307498931884766,32.1514778137207,-20.467382431030273,15.683207511901855,25.296199798583984,-37.544586181640625,2.393111228942871,-38.459869384765625,22.1236572265625,32.94140625,25.59189224243164,17.085660934448242,38.46192932128906,-35.854339599609375,9.60818099975586,39.339454650878906,13.625802040100098,38.59305953979492,-3.4565420150756836,40.553836822509766,39.72289276123047,38.80281066894531,40.27566909790039,39.33262634277344,27.73281478881836,36.69967269897461,28.757722854614258,-35.49236297607422,12.981712341308594,40.8983268737793,17.62324333190918,39.08773422241211,5.4628586769104,12.519952774047852,-40.004173278808594,-28.29498291015625,33.5538444519043,-5.618587493896484,34.39751052856445,31.28109359741211,-28.4752254486084,29.81699562072754,-1.025837779045105,-33.133968353271484,35.19160079956055,30.041730880737305,-25.684432983398438,28.989883422851562,25.309473037719727,38.15230941772461,30.981985092163086,-37.64945983886719,-10.641762733459473,22.98084831237793,-19.69649314880371,29.872528076171875,37.15842819213867,-37.02785110473633,28.257219314575195,-16.207727432250977,-18.130460739135742,0.40840551257133484,29.936281204223633,-52.7067756652832,-12.347579956054688,23.43828582763672,34.58506393432617,-26.596725463867188,-31.778602600097656,-46.19997024536133,-24.706893920898438,19.66875457763672,-41.731563568115234,-41.72938537597656,-16.044254302978516,-34.84040451049805,-17.555904388427734,-31.187419891357422,23.138967514038086,-28.801010131835938,28.28346061706543,-26.533973693847656,18.99994659423828,-26.402084350585938,0.37132108211517334,-5.360366344451904,21.05773162841797,-13.290780067443848,-46.641998291015625,28.440563201904297,-30.55424690246582,27.968828201293945,23.499841690063477,15.8970308303833,-18.272706985473633,-30.37842559814453,-49.02377700805664,-31.106637954711914,33.82118606567383,7.3182692527771,-21.520448684692383,40.130943298339844,41.969573974609375,20.468774795532227,-27.363248825073242,38.55683135986328,-45.03132247924805,28.715967178344727,-30.599931716918945,30.77478790283203,1.8205543756484985,37.28606414794922,24.10503578186035,39.1823844909668,24.81920623779297,21.962543487548828,28.122690200805664,25.958860397338867,38.20880126953125,35.21855163574219,25.695302963256836,2.675771951675415,17.383840560913086,-2.749915599822998,35.338966369628906,27.795082092285156,-34.32428741455078,31.692392349243164,27.41627311706543,-41.297550201416016,-24.299949645996094,-18.56142807006836,-25.744596481323242,34.09502029418945,38.68363952636719,-11.857030868530273,-29.15725326538086,38.124874114990234,-25.427560806274414,-18.51407814025879,30.0372257232666,-19.044031143188477,36.02774429321289,32.1215934753418,30.038908004760742,15.51333999633789,-34.36111831665039,28.42563819885254,-30.581640243530273,17.74532127380371,-36.370540618896484,-17.964242935180664,26.6947021484375,-9.686989784240723,-27.85323143005371,19.46697425842285,-34.65122985839844,1.0238776206970215,14.852582931518555,22.163965225219727,29.874095916748047,26.426231384277344,15.099355697631836,21.972612380981445,23.578874588012695,17.040178298950195,34.76543045043945,22.270814895629883,25.791608810424805,26.686450958251953,20.797056198120117,22.591672897338867,33.164031982421875,-36.84502029418945,33.56154251098633,30.628772735595703,-23.732622146606445,14.67971420288086,24.28923225402832,-29.270450592041016,-6.644656181335449,-6.056936264038086,-32.168514251708984,-19.517595291137695,15.261066436767578,24.4700927734375,37.276065826416016,22.505617141723633,-0.3542977571487427,29.50898551940918,13.960426330566406,28.366806030273438,-33.33448028564453,-30.366971969604492,-16.88817024230957,-47.74641036987305,31.791044235229492,30.25031280517578,-45.13335418701172,20.1396541595459,11.466773986816406,17.405187606811523,-30.310335159301758,-47.274112701416016,-36.73883819580078,-18.716480255126953,-31.42489242553711,25.092082977294922,-26.733396530151367,37.50727844238281,-18.525211334228516,32.742584228515625,-49.69406509399414,27.526578903198242,27.94228744506836,32.06562423706055,-27.78409194946289,12.723845481872559,38.1562614440918,-15.378971099853516,0.09725260734558105,39.01686096191406,33.8204460144043,-4.406115531921387,-21.51466178894043,-22.292306900024414,-21.263805389404297,25.864774703979492,-29.876379013061523,-7.404879093170166,-34.21156311035156,-33.553775787353516,30.11747932434082,30.65077018737793,34.47943115234375,36.703895568847656,23.597667694091797,-22.191974639892578,27.462411880493164,-13.468235969543457,33.99078369140625,18.847482681274414,38.99908447265625,-4.36331033706665,-38.02618408203125,30.910810470581055,22.944732666015625,15.153203010559082,-19.708032608032227,-12.000411033630371,-33.34476852416992,40.430702209472656,-19.868745803833008,-46.46739959716797,-22.821765899658203,-51.289546966552734,-34.33754348754883,-34.61970520019531,-34.59672546386719,21.201326370239258,-14.634649276733398,-13.67578125,-21.78424072265625,16.325693130493164,24.002338409423828,30.907987594604492,31.925159454345703,28.364398956298828,-36.672569274902344,-15.014822959899902,37.981937408447266,27.408206939697266,40.354949951171875,41.41770553588867,31.738576889038086,-11.180350303649902,-35.24676513671875,33.98276901245117,-27.118602752685547,-25.089733123779297,0.024533644318580627,-37.11798095703125,-0.7362682223320007,-34.684024810791016,41.5855827331543,28.922597885131836,-27.68471336364746,20.893234252929688,30.50319480895996,27.433971405029297,-23.23117446899414,-32.53710174560547,-38.180328369140625,7.7721686363220215,-20.324155807495117,-3.6898019313812256,33.78939437866211,-11.084181785583496,-6.530635833740234,-32.60997009277344,18.618558883666992,37.48690414428711,4.4860734939575195,1.4148164987564087,-19.14431381225586,-28.526567459106445,-39.65114974975586,34.76781463623047,-20.358173370361328,-1.833078384399414,-51.1751594543457,18.96976661682129,20.437597274780273,-40.91727828979492,28.516048431396484,-25.75715446472168,-33.12104797363281,-1.6046854257583618,26.960180282592773,-21.75660514831543,25.204198837280273,37.322547912597656,9.035916328430176,42.83127975463867,-21.649354934692383,-46.99715042114258,-39.18753433227539,-25.711353302001953,26.732223510742188,41.468109130859375,-39.732452392578125,-19.769643783569336,-29.87398910522461,25.047000885009766,-25.966041564941406,-16.3319091796875,-47.62614440917969,40.39420700073242,23.72475242614746,27.328882217407227,-21.41666030883789,-49.695709228515625,35.620941162109375,-19.897415161132812,37.276248931884766,21.13650131225586,-36.359004974365234,40.39227294921875,18.61638641357422,-33.74534606933594,-44.13923263549805,-29.752153396606445,-35.73261642456055,33.445289611816406,38.85990905761719,11.426551818847656,7.387505054473877,22.161590576171875,0.8508083820343018,-11.236067771911621,-48.85647964477539,-51.396244049072266,-38.137115478515625,22.4777774810791,9.85050106048584,-35.8842887878418,-36.46887969970703,-33.65176773071289,27.32291603088379,9.507678985595703,-20.651676177978516,-31.49277687072754,-16.04360580444336,-15.118258476257324,-30.084184646606445,-40.41652297973633,-32.04356384277344,-37.594322204589844,-28.03772735595703,-31.2335147857666,19.878055572509766,-24.897647857666016,10.327223777770996,12.636667251586914,-27.123767852783203,-20.89462661743164,27.68973159790039,35.89183044433594,-7.114913463592529,-41.48210906982422,-26.02630043029785,-30.907453536987305,-17.895410537719727,18.237804412841797,15.499641418457031,-46.58773422241211,21.038545608520508,32.86371994018555,-38.13817596435547,-21.981584548950195,-28.002519607543945,15.814780235290527,-36.69053649902344,-49.242034912109375,29.165149688720703,-35.57340621948242,-32.040287017822266,29.00570297241211,-33.93832778930664,-2.6609537601470947,-31.911836624145508,-30.677927017211914,-35.29911422729492,28.944948196411133,-33.11082458496094,-47.76803207397461,-21.068395614624023,-35.95357131958008,-22.80911636352539,-24.9310302734375,-20.25503158569336,21.992555618286133,8.849058151245117,-14.424997329711914,-34.17611312866211,41.085296630859375,-11.741559982299805,-30.908382415771484,-28.78245735168457,21.784603118896484,22.836362838745117,-22.111387252807617,-33.35562515258789,-15.554129600524902,26.565303802490234,32.50154495239258,-26.549156188964844,32.126407623291016,26.311050415039062,35.32347106933594,27.163129806518555,-24.930570602416992,-25.193370819091797,18.83587646484375,16.878236770629883,31.695592880249023,19.079952239990234,27.51742172241211,19.26720428466797,-21.634843826293945,30.22742462158203,-31.452856063842773,26.412307739257812,-39.725677490234375,35.82374954223633,-12.976924896240234,9.521191596984863,21.85482406616211,-30.184892654418945,-1.2643808126449585,19.53434181213379,33.58313751220703,32.967689514160156,32.39136505126953,14.114770889282227,-28.1895751953125,-19.024341583251953,23.07704734802246,-36.26435470581055,5.8379926681518555,24.468427658081055,33.45309829711914,-10.01667308807373,2.0557169914245605,22.785938262939453,-13.825340270996094,18.975963592529297,-12.367725372314453,-19.1117000579834,16.70966339111328,-26.832515716552734,-35.007755279541016,-38.691097259521484,-16.80940818786621,38.36252975463867,-51.219818115234375,-13.270689964294434,11.03641414642334,26.585744857788086,-51.2049674987793,35.01499938964844,-32.82823181152344,-20.32545280456543,21.367395401000977,31.527423858642578,-5.401909828186035,10.855862617492676,31.92182731628418,27.728261947631836,29.02399444580078,-44.143959045410156,-32.12246322631836,36.34821319580078,11.288844108581543,17.524003982543945,35.056968688964844,12.277579307556152,24.10568618774414,-0.44251492619514465,-23.10094451904297,31.988643646240234,33.00031661987305,33.95108413696289,-28.0024356842041,20.29349708557129,-34.8820686340332,15.705811500549316,-23.085079193115234,-30.589094161987305,31.611244201660156,-39.028263092041016,40.16210174560547,18.89545440673828,-28.397594451904297,26.448781967163086,37.34779739379883,32.361724853515625,27.79244041442871,35.130462646484375,38.26958465576172,18.689550399780273,-49.467899322509766,-35.0203742980957,11.346595764160156,24.96946144104004,-42.27954864501953,32.00717544555664,31.73270034790039,33.886722564697266,32.24845504760742,32.802066802978516,-14.474705696105957,-30.150712966918945,18.46319580078125,24.15998077392578,-42.628257751464844,37.42605209350586,-40.546974182128906,21.96624755859375,29.298831939697266,16.79264259338379,22.968229293823242,8.1991605758667,-27.71293067932129,28.523395538330078,22.91339683532715,-32.977516174316406,-17.047889709472656,18.626623153686523,-35.17272186279297,-17.38773536682129,-27.335439682006836,29.911518096923828,29.05352783203125,14.821669578552246,-15.638224601745605,26.606672286987305,16.764543533325195,-21.258407592773438,-20.32636070251465,-48.74588394165039,35.34850311279297,26.649675369262695,18.648820877075195,29.615497589111328,-25.16082763671875,34.50762176513672,38.79501724243164,24.44594955444336,30.850238800048828,-47.150264739990234,29.71797752380371,-3.666534423828125,21.091707229614258,-28.152206420898438,29.411693572998047,32.84681701660156,-26.628103256225586,29.445222854614258,16.798507690429688,-27.755098342895508,11.616106986999512,-16.993545532226562,41.89649200439453,5.153512477874756,23.108783721923828,25.378854751586914,-36.42894744873047,42.24559783935547,-10.172743797302246,-14.444173812866211,-20.267284393310547,14.680285453796387,36.99030685424805,19.557424545288086,21.990699768066406,-40.408599853515625,-37.02540588378906,29.572105407714844,-33.32106018066406,39.449886322021484,-14.379319190979004,33.39430236816406,36.501686096191406,-31.09926414489746,-43.737892150878906,-35.25719451904297,-28.674711227416992,-23.398263931274414,-35.59669494628906,-4.4744720458984375,32.96443557739258,28.590965270996094,29.2694091796875,20.848106384277344,29.03544044494629,15.723895072937012,-28.954992294311523,35.619205474853516,27.15298080444336,-30.90489387512207,-42.826499938964844,-19.320772171020508,31.667037963867188,37.294952392578125,-22.283870697021484,-26.789148330688477,-25.589406967163086,-30.44532585144043,-24.37221336364746,-20.22030258178711,31.057767868041992,-35.15576171875,-30.027969360351562,36.28033447265625,-37.903900146484375,28.523252487182617,15.095818519592285,-41.740177154541016,34.3181266784668,-12.63259506225586,32.60076141357422,38.75346374511719,-32.67389678955078,-37.2676887512207,26.652812957763672,-27.70546531677246,-27.306072235107422,-26.645151138305664,-1.7443515062332153,30.267536163330078,26.941072463989258,-31.225109100341797,-24.676132202148438,29.564043045043945,-46.92063522338867,19.09999656677246,-23.870656967163086,21.364582061767578,-21.488584518432617,-32.972572326660156,31.71513557434082,15.441760063171387,25.26789093017578,17.761066436767578,18.439085006713867,29.495302200317383,34.405982971191406,-41.696136474609375,-30.329988479614258,31.818601608276367,32.5713005065918,-12.949740409851074,39.10745620727539,-28.942502975463867,-24.505414962768555,39.45994186401367,31.40658950805664,-29.66147804260254,-41.052799224853516,31.504865646362305,24.898801803588867,18.664915084838867,39.04848098754883,34.91246795654297,-30.579200744628906,12.627425193786621,33.360557556152344,-30.48737335205078,-28.105358123779297,-38.321807861328125,19.458580017089844,25.345474243164062,-12.646096229553223,34.524139404296875,38.8096923828125,-13.473174095153809,-27.974224090576172,-12.875360488891602,-12.573226928710938,25.046297073364258,-25.80236053466797,-14.446800231933594,-7.721041679382324,-25.589248657226562,35.7172737121582,27.100698471069336,-47.30681610107422,21.477828979492188,34.064857482910156,40.56982421875,-25.225269317626953,-12.278168678283691,-36.2272834777832,-18.97100830078125,32.09795379638672,-18.422222137451172,28.032814025878906,18.113513946533203,-24.48795509338379,30.8393611907959,21.391937255859375,-44.883270263671875,-25.121606826782227,-15.384946823120117,33.22053527832031,28.620691299438477,39.77349853515625,-22.571659088134766,-18.360288619995117,-28.233333587646484,25.294092178344727,-25.895719528198242,-28.26180648803711,-7.423271656036377,19.981760025024414,-2.5265138149261475,-8.129487037658691,27.36002540588379,29.13957405090332,6.072268962860107,-30.669776916503906,-27.460535049438477,24.390268325805664,30.970104217529297,27.292755126953125,28.075170516967773,-22.488691329956055,-28.098583221435547,16.873638153076172,-28.289165496826172,22.191823959350586,-27.220958709716797,25.992937088012695,33.34349822998047,-14.845873832702637,-23.855241775512695,30.718130111694336,23.20477867126465,23.75607681274414,28.59694480895996,22.799236297607422,27.64405059814453,37.27617263793945,-16.434518814086914,18.718860626220703,21.591997146606445,24.41424560546875,-33.41499710083008,22.754159927368164,33.678810119628906,34.30452346801758,30.114675521850586,30.192007064819336,39.24738693237305,-29.25785255432129,-18.718027114868164,-25.612367630004883,-9.216218948364258,23.57949447631836,4.185936450958252,32.930850982666016,29.246488571166992,32.9731559753418,-41.141876220703125,26.970413208007812,25.894634246826172,-44.18721389770508,-30.781808853149414,-31.013835906982422,-19.627717971801758,14.472667694091797,14.505731582641602,-36.33216094970703,-20.464576721191406,39.863243103027344,-18.20699119567871,21.411808013916016,28.034191131591797,-23.51470375061035,22.772918701171875,-20.575281143188477,30.375015258789062,34.55495071411133,29.098684310913086,32.411399841308594,30.373050689697266,-6.399305820465088,-29.225906372070312,-0.2636752426624298,28.166465759277344,-8.515365600585938,-39.641326904296875,-21.687456130981445,-21.678638458251953,13.244046211242676,-11.074477195739746,-43.823486328125,-4.266853332519531,32.616329193115234,-26.022674560546875,19.861286163330078,25.969335556030273,-33.20342254638672,29.62004280090332,21.528732299804688,24.699602127075195,24.89780616760254,14.872867584228516,-9.13647174835205,37.02271270751953,-13.301072120666504,-43.28555679321289,17.573652267456055,-18.64688491821289,-30.703767776489258,36.571800231933594,-28.079256057739258,-28.75931167602539,-12.85461711883545,-25.192129135131836,37.834354400634766,-21.81928253173828,-27.177532196044922,29.13582992553711,9.435187339782715,-29.988086700439453,33.45860290527344,-31.347665786743164,-38.2901725769043,33.45674514770508,-0.27779167890548706,19.052949905395508,-28.725669860839844,29.27474021911621,19.83348846435547,-26.336639404296875,31.950014114379883,-8.860806465148926,0.35008952021598816,-32.46833801269531,20.82965660095215,38.018367767333984,29.529638290405273,-31.712913513183594,43.73581314086914,-45.72541046142578,28.833065032958984,32.12825012207031,-43.126102447509766,-44.096351623535156,-41.392234802246094,22.202302932739258,-44.61403274536133,-31.319793701171875,-9.874702453613281,-46.95397186279297,-51.33794403076172,-43.07392120361328,-37.675743103027344,15.389669418334961,34.982975006103516,-30.114315032958984,-27.021453857421875,38.82233428955078,8.428855895996094,-20.493661880493164,-20.159727096557617,-31.251697540283203,18.172992706298828,-34.32775115966797,-29.446868896484375,33.32777404785156,-11.024462699890137,18.985517501831055,-7.191205024719238,9.228971481323242,-7.543858051300049,14.13000202178955,-38.763492584228516,28.7951717376709,28.060482025146484,-27.716217041015625,24.62540626525879,35.03894805908203,14.157479286193848,-20.1193904876709,30.563396453857422,37.22788619995117,-20.128143310546875,-26.455881118774414,-31.011598587036133,-24.704662322998047,35.573577880859375,-9.687776565551758,-38.78369140625,-39.268795013427734,16.306230545043945,-26.055082321166992,-46.09434509277344,-11.540627479553223,34.64528274536133,37.46086502075195,39.06135940551758,32.93266296386719,26.336631774902344,34.12746047973633,-11.270599365234375,31.9440975189209,-37.09353256225586,-16.11890983581543,21.81560707092285,-36.238704681396484,34.348697662353516,-44.27760314941406,-29.21477699279785,-32.26777267456055,-30.380460739135742,-10.596753120422363,24.60751724243164,28.654356002807617,-31.29688262939453,-15.25047492980957,-22.37421417236328,8.967265129089355,-8.827410697937012,34.952903747558594,39.6864128112793,-20.39815330505371,-32.1786003112793,-19.109760284423828,32.281978607177734,16.040573120117188,31.87690544128418,-11.26014232635498,-25.78431510925293,-14.135043144226074,-18.289867401123047,-35.83452224731445,33.78364181518555,20.11608123779297,-10.145157814025879,-38.28224182128906,-50.13810729980469,-33.46833038330078,-40.39748764038086,-19.976465225219727,21.142330169677734,-37.37633514404297,-1.0074628591537476,-18.365421295166016,-31.687524795532227,-33.21828079223633,30.382238388061523,-18.013072967529297,-5.552266597747803,12.965953826904297,5.7637553215026855,-17.677146911621094,-31.81995391845703,-9.297822952270508,-10.125848770141602,-47.2470588684082,-15.041484832763672,30.65097427368164,-12.42491340637207,28.040966033935547,37.22152328491211,34.90495681762695,-15.232649803161621,-36.24229431152344,-19.20053482055664,-30.472166061401367,-36.799320220947266,-23.193603515625,-5.009650707244873,-31.600065231323242,-17.901409149169922,-20.655141830444336,-29.793699264526367,-10.515375137329102,6.626206398010254,-31.525053024291992,-51.47231674194336,33.22599792480469,27.350112915039062,-26.293781280517578,25.971515655517578,-30.788639068603516,-29.912317276000977,-49.9693603515625,37.9182014465332,37.76612854003906,-30.532127380371094,4.791440486907959,8.126335144042969,27.611528396606445,18.295730590820312,29.990718841552734,26.80158233642578,15.306809425354004,10.929717063903809,-32.146419525146484,24.071674346923828,-1.2375597953796387,-32.78273010253906,-36.06532669067383,-25.762754440307617,-39.05859375,40.79036331176758,-46.157901763916016,31.31985092163086,-18.0506534576416,-27.20083999633789,-28.18242073059082,39.424659729003906,-17.4925479888916,-36.45445251464844,40.697418212890625,-44.85424041748047,40.749446868896484,35.468833923339844,23.73374366760254,-6.931700229644775,-0.9312601685523987,19.484268188476562,-25.740882873535156,30.838716506958008,15.221488952636719,34.65993118286133,-46.50550842285156,-36.66282653808594,30.17890739440918,-31.134450912475586,20.01444435119629,-34.377864837646484,-17.637035369873047,-27.851734161376953,-30.997766494750977,32.01961135864258,-30.39946174621582,-35.96194839477539,13.077482223510742,-20.20917510986328,-46.323978424072266,-26.924097061157227,24.80220603942871,35.054813385009766,-22.204376220703125,26.680965423583984,-29.09381103515625,37.92156982421875,31.622821807861328,37.37985610961914,35.10248565673828,-11.508378028869629,20.205427169799805,-31.410614013671875,12.007670402526855,25.25885772705078,-44.33230209350586,-39.31052780151367,32.56784439086914,-23.256057739257812,-33.2553596496582,-23.754676818847656,-31.521316528320312,27.36730194091797,-28.970643997192383,-0.9346066117286682,-32.3990364074707,-18.200708389282227,-29.097864151000977,24.158306121826172,-15.495999336242676,29.38033103942871,19.469959259033203,23.64217185974121,35.4490966796875,-22.485891342163086,-30.4337158203125,35.29238510131836,-7.986659526824951,22.547454833984375,6.455218315124512,-36.48451614379883,-24.951562881469727,-17.10504913330078,-25.777729034423828,16.837039947509766,-22.394563674926758,29.636871337890625,33.127899169921875,-16.86130714416504,-18.88831901550293,-26.482515335083008,-30.073564529418945,23.190797805786133,34.54348373413086,44.27614974975586,-9.550324440002441,37.2556266784668,-8.765168190002441,-19.5765380859375,29.765321731567383,35.55512237548828,24.940616607666016,20.77509880065918,22.46541976928711,31.694089889526367,-31.607362747192383,24.35753631591797,22.256378173828125,19.375532150268555,-24.902183532714844,-23.007896423339844,-26.04694175720215,-21.736658096313477,16.089330673217773,-23.246234893798828,-24.09381675720215,-37.95146560668945,32.65933609008789,24.186067581176758,43.15510177612305,-26.165451049804688,-6.619161605834961,-29.833606719970703,33.086769104003906,41.49729537963867,38.02970886230469,22.167409896850586,34.83005142211914,-55.307518005371094,22.962505340576172,-10.031970977783203,27.283594131469727,-17.75546646118164,30.612695693969727,21.102235794067383,30.365999221801758,28.609519958496094,-31.604379653930664,15.680439949035645,14.003053665161133,38.97965621948242,24.797266006469727,-29.10455322265625,27.233415603637695,33.72758865356445,29.709165573120117,-37.556678771972656,22.32460594177246,35.037174224853516,-28.793014526367188,39.35930633544922,-16.077388763427734,-34.75732421875,23.567087173461914,-19.961868286132812,-40.4651985168457,-16.205337524414062,19.6650390625,-1.7548269033432007,-18.400779724121094,19.64703369140625,31.258848190307617,6.626262664794922,21.72479248046875,-29.92466926574707,20.087377548217773,20.129898071289062,23.201419830322266,-5.573025226593018,-25.032943725585938,27.990800857543945,17.932369232177734,-42.22535705566406,22.026050567626953,-31.910598754882812,-22.499319076538086,-13.815058708190918,-25.99994659423828,-41.39197540283203,-42.62916564941406,31.637813568115234,-21.715330123901367,-24.782474517822266,-10.018630981445312,2.46712589263916,-45.10133361816406,-22.01010513305664,-33.01560592651367,-16.848892211914062,-25.637231826782227,37.25572967529297,-36.5515251159668,-23.214492797851562,-43.779842376708984,-33.83161544799805,-39.03657150268555,-31.969970703125,-44.47956848144531,10.774715423583984,-38.38295364379883,-37.6712646484375,7.73815393447876,29.14591407775879,18.118560791015625,-20.95697593688965,-3.235214948654175,-25.553621292114258,36.2994270324707,-44.8135871887207,-21.817838668823242,-31.127798080444336,-35.62623596191406,-40.735435485839844,-50.778526306152344,-36.453834533691406,-38.27195739746094,-7.798454761505127,-10.544671058654785,32.072410583496094,32.37345886230469,-37.4713134765625,-18.67975425720215,29.517045974731445,23.86013412475586,39.53449630737305,-46.49504470825195,-5.152693271636963,33.51946258544922,34.18452453613281,32.930763244628906,25.95888328552246,-30.515945434570312,-17.86886215209961,9.929200172424316,-36.09683609008789,-43.037635803222656,-49.879432678222656,-27.93866729736328,-13.347284317016602,-27.85516357421875,23.4482479095459,37.876739501953125,-16.292999267578125,-4.801633834838867,38.66114807128906,19.937305450439453,-31.158363342285156,33.417118072509766,34.82088088989258,16.3684139251709,23.761917114257812,31.944820404052734,26.088157653808594,0.7055537700653076,17.261159896850586,-26.901992797851562,-0.36443254351615906,31.573265075683594,-26.81797981262207,33.609737396240234,1.7723217010498047,10.849059104919434,2.2711477279663086,-36.91843032836914,-22.260339736938477,20.960268020629883,-21.950557708740234,37.2473258972168,3.934561014175415,2.5842509269714355,-36.13814163208008,25.309375762939453,-29.968233108520508,4.941093444824219,34.9856071472168,-42.10074996948242,15.999536514282227,-35.02084732055664,29.045839309692383,-39.768836975097656,-22.79461669921875,-46.41067123413086,13.055978775024414,-17.56338119506836,-20.120397567749023,15.20671558380127,-14.325332641601562,-13.971695899963379,-20.82862663269043,26.37847328186035,-26.219188690185547,29.58966636657715,-35.55882263183594,-37.68873596191406,29.747451782226562,0.11575543880462646,19.378482818603516,-30.0974178314209,-35.45633316040039,-28.366073608398438,-27.829566955566406,-24.922330856323242,23.698381423950195,-6.659763813018799,-24.752655029296875,-23.920635223388672,25.254016876220703,-20.253681182861328,31.335735321044922,10.834903717041016,22.15713119506836,-29.88156509399414,-28.871337890625,-20.33907699584961,-26.55213165283203,14.363399505615234,-6.381714820861816,25.515172958374023,36.36441421508789,31.229127883911133,-47.943416595458984,-37.34812927246094,-24.823457717895508,-22.443584442138672,20.53992462158203,22.105613708496094,-30.516685485839844,-8.262415885925293,20.538833618164062,19.995849609375,31.11234474182129,-49.6127815246582,-29.84595489501953,-21.116718292236328,-6.944526195526123,-21.82373046875,-20.819528579711914,-25.336673736572266,34.848453521728516,-7.917568206787109,-37.79241943359375,14.384434700012207,-30.98920440673828,25.014060974121094,26.555885314941406,-28.752437591552734,23.127498626708984,-45.15522003173828,37.580684661865234,30.506107330322266,-33.141334533691406,30.232303619384766,-21.00782012939453,-34.32029342651367,-32.673583984375,-22.906265258789062,-30.542186737060547,22.216432571411133,29.978229522705078,-26.762420654296875,22.292661666870117,-1.9740979671478271,-16.120738983154297,-6.094156742095947,31.313541412353516,-34.37566375732422,-39.09359359741211,-28.191499710083008,0.07506518810987473,31.04427719116211,-30.021728515625,-31.23733901977539,-28.720664978027344,-27.794355392456055,-46.177127838134766,-37.316314697265625,24.674285888671875,-30.940954208374023,-29.60731315612793,-20.5953311920166,-13.070423126220703,17.254981994628906,18.73002815246582,-37.580928802490234,37.00882339477539,-26.72557830810547,-48.91413116455078,-51.34135055541992,-20.57562255859375,21.166282653808594,-44.60548782348633,-7.291346073150635,-48.10209274291992,-27.040132522583008,-30.200275421142578,39.73067855834961,-37.14167404174805,-26.308570861816406,-26.511199951171875,-45.24734115600586,-45.63661575317383,35.74071502685547,-14.998369216918945,26.870813369750977,-23.518457412719727,-28.621532440185547,39.802833557128906,13.567469596862793,36.64023208618164,-32.36301040649414,20.758331298828125,-43.96624755859375,22.401657104492188,31.5706729888916,13.584187507629395,19.117706298828125,13.633763313293457,32.15238952636719,-36.9642219543457,-22.37888526916504,19.467121124267578,19.430442810058594,-46.500667572021484,-9.718823432922363,32.34569549560547,28.34926414489746,-20.91047477722168,20.822973251342773,-29.71418571472168,37.6512336730957,-36.136199951171875,-45.95867919921875,-31.352375030517578,23.25201416015625,23.8660831451416,29.826290130615234,24.994295120239258,25.581682205200195,-14.953567504882812,25.495988845825195,29.787450790405273,-19.143047332763672,-12.870168685913086,25.39896011352539,-14.271780014038086,20.267480850219727,-22.73603057861328,-25.08328628540039,-46.11967086791992,-45.278953552246094,-18.696733474731445,22.406877517700195,19.9494571685791,14.296089172363281,-25.41661262512207,-2.114772319793701,-24.82021713256836,-37.001609802246094,14.897835731506348,34.156558990478516,21.926301956176758,-28.857879638671875,-42.7697868347168,-33.662532806396484,-38.504390716552734,21.20720672607422,-30.493085861206055,-33.83440399169922,-34.5814208984375,-26.45033836364746,-39.780704498291016,-22.483936309814453,-24.183252334594727,-18.090774536132812,-26.465742111206055,-3.1434502601623535,-23.333112716674805,-40.68409729003906,-38.46101760864258,-35.55936050415039,-19.030818939208984,-10.633413314819336,19.004121780395508,3.778608560562134,32.19497299194336,-28.539215087890625,29.14763069152832,-46.60736083984375,19.9005184173584,-30.42336654663086,26.00531768798828,21.23855972290039,20.28718376159668,-27.14479637145996,-36.89558410644531,25.006484985351562,-34.94034194946289,21.42361068725586,-6.592339515686035,35.33253860473633,31.518606185913086,26.48501968383789,-34.520233154296875,-27.935640335083008,-36.10825729370117,-25.233736038208008,-32.51189041137695,-21.520265579223633,-16.438152313232422,-38.87468719482422,-10.19213581085205,14.469621658325195,-42.91240310668945,-21.77585792541504,37.759647369384766,37.87499237060547,33.15868377685547,25.398725509643555,21.55283546447754,3.418267250061035,-16.107051849365234,29.569551467895508,-13.712747573852539,9.117033004760742,31.30943489074707,12.933540344238281,-35.486427307128906,38.93653869628906,-28.976186752319336,27.205944061279297,32.11831283569336,27.037567138671875,-8.68563175201416,-6.556085109710693,39.02359390258789,-30.270753860473633,-13.829303741455078,-31.390151977539062,-13.606444358825684,-37.613555908203125,-16.728139877319336,26.003023147583008,5.482152938842773,-16.87264633178711,-24.64662742614746,-16.844362258911133,10.447905540466309,-37.48215103149414,32.89419174194336,23.158504486083984,12.965742111206055,31.668424606323242,-16.432754516601562,-26.740415573120117,22.389789581298828,-33.28628921508789,-2.4045965671539307,-42.723026275634766,-29.264535903930664,25.92191505432129,-30.568695068359375,-19.703454971313477,31.333703994750977,22.270565032958984,23.383337020874023,11.020501136779785,39.7574348449707,12.943339347839355,-10.010445594787598,26.298242568969727,30.18559455871582,-27.048845291137695,-33.30448532104492,-6.599598407745361,-27.45768928527832,-23.898550033569336,24.201160430908203,7.29352331161499,-11.950202941894531,-25.226600646972656,42.98165512084961,-26.80175018310547,-8.115663528442383,-31.0905704498291,-15.10084342956543,29.936809539794922,-14.00302791595459,-18.56584930419922,26.424598693847656,-12.235963821411133,-29.29705810546875,36.638153076171875,-18.788005828857422,36.553993225097656,-19.347915649414062,-38.1885871887207,-12.620494842529297,-9.612918853759766,-16.326993942260742,12.620738983154297,-21.307981491088867,22.959558486938477,-26.11968231201172,-36.895057678222656,-13.7102632522583,-20.258657455444336,16.6741886138916,-30.752519607543945,10.784053802490234,-26.58016014099121,-23.447065353393555,-36.9648551940918,-26.120670318603516,-6.27977180480957,-35.16571044921875,-29.969261169433594,-30.125295639038086,-35.2883415222168,-16.17051124572754,21.045093536376953,-25.05031967163086,-28.66649627685547,-34.07972717285156,-32.77278518676758,-37.656227111816406,-30.093746185302734,-18.857145309448242,19.181610107421875,-19.342363357543945,8.139179229736328,-41.320274353027344,-17.75800323486328,-34.326229095458984,-10.16515827178955,12.233892440795898,12.568094253540039,-42.47991943359375,-31.299867630004883,-31.38518714904785,-39.06306076049805,22.6351375579834,-35.88577651977539,18.64256477355957,-15.931466102600098,41.2911262512207,-1.1003265380859375,-12.393921852111816,-21.186662673950195,-38.37582015991211,39.26192855834961,19.359437942504883,-6.289431571960449,-19.772172927856445,31.26653480529785,27.910829544067383,34.35839080810547,28.530813217163086,28.150650024414062,-27.351627349853516,-27.586854934692383,-13.170225143432617,-9.606303215026855,-16.35533332824707,-15.904298782348633,-29.815353393554688,-29.977333068847656,30.817485809326172,-18.929126739501953,-36.7254524230957,-14.549481391906738,-34.10556411743164,-7.11131477355957,30.61115264892578,-6.165707588195801,-30.421396255493164,13.635528564453125,31.403627395629883,38.96574020385742,-17.4043025970459,-11.682731628417969,34.67338943481445,34.758460998535156,21.206329345703125,-45.644798278808594,-17.300996780395508,20.58497428894043,32.97251892089844,-21.009052276611328,29.81884002685547,-6.703922748565674,20.97720718383789,-12.002176284790039,-10.300113677978516,28.661115646362305,-25.788715362548828,22.689224243164062,31.046846389770508,37.83329772949219,31.893722534179688,26.924274444580078,-11.669775009155273,-9.088708877563477,-18.755226135253906,-21.27322769165039,25.035009384155273,22.698915481567383,-44.35703659057617,27.30026626586914,-7.237879753112793,-11.747496604919434,-32.932254791259766,-37.667423248291016,30.189958572387695,28.445072174072266,-24.136005401611328,-27.884939193725586,-12.722548484802246,-27.64619255065918,-32.10319900512695,34.29768371582031,-25.163660049438477,-41.33916473388672,26.705873489379883,-37.23271942138672,-11.179244995117188,31.711124420166016,26.605140686035156,-36.87807083129883,-8.24710464477539,-21.999975204467773,-24.430633544921875,16.739498138427734,-29.688369750976562,-44.87086868286133,-32.0233268737793,-45.06549072265625,29.06251335144043,9.085432052612305,-29.972084045410156,-31.497718811035156,27.796506881713867,-42.38774108886719,30.11273193359375,32.718414306640625,30.312000274658203,-18.948673248291016,26.340919494628906,31.623769760131836,30.967666625976562,-31.209169387817383,32.12348556518555,-34.992794036865234,-34.512996673583984,24.472164154052734,15.361002922058105,28.75229835510254,-30.535486221313477,31.603670120239258,-35.3026008605957,-15.492509841918945,23.044391632080078,-3.2223660945892334,-15.051024436950684,-40.06645965576172,-18.668163299560547,26.555103302001953,-23.488170623779297,13.089448928833008,-8.319375038146973,20.317886352539062,2.890493631362915,-30.939512252807617,4.982029438018799,-18.756752014160156,-23.685909271240234,-26.306074142456055,19.863492965698242,20.569305419921875,-34.51898956298828,16.776262283325195,40.447265625,21.458749771118164,8.333100318908691,18.862791061401367,-17.803558349609375,-32.82806396484375,-28.78945541381836,-15.203396797180176,28.179872512817383,-20.113481521606445,-37.15580368041992,-25.255905151367188,40.50858688354492,27.368396759033203,-25.358627319335938,30.499380111694336,-27.525869369506836,34.46119689941406,25.85322380065918,-34.3003044128418,31.37684440612793,-26.71506118774414,-31.135692596435547,28.418153762817383,-38.20731735229492,32.27491760253906,-18.657424926757812,21.118118286132812,-40.875221252441406,-26.82379722595215,23.391536712646484,-24.376741409301758,-30.035673141479492,-30.538354873657227,-14.902608871459961,26.36254119873047,-26.32477378845215,-43.80818176269531,-44.03316879272461,-18.185977935791016,-25.545082092285156,22.79031753540039,-7.3611578941345215,-35.58001708984375,36.56549072265625,-28.423633575439453,-23.127891540527344,-34.406253814697266,-3.9651286602020264,22.175870895385742,7.015835762023926,-32.7248420715332,-25.47276496887207,-20.01962661743164,-22.47711181640625,-37.91119384765625,27.4306697845459,-17.729034423828125,-36.50590896606445,24.94016456604004,31.77753257751465,-31.44679069519043,38.79143524169922,40.22520446777344,-17.973690032958984,-43.897239685058594,32.04698944091797,-20.933645248413086,-37.45585632324219,14.145628929138184,28.26776885986328,33.791202545166016,8.0171537399292,-28.89396095275879,-32.69491958618164,-33.8537712097168,-6.83862829208374,-28.848148345947266,-26.154396057128906,-33.68437194824219,-34.09588623046875,-34.21533203125,-34.36616516113281,-36.58244323730469,-38.26240158081055,-37.92544937133789,-29.101709365844727,-36.31060791015625,-44.844844818115234,17.159637451171875,35.02871322631836,17.179555892944336,19.781930923461914,-30.070781707763672,20.312847137451172,-19.964204788208008,-18.352767944335938,20.68433380126953,25.543323516845703,39.562618255615234,-17.635574340820312,-24.47789192199707,-2.171577215194702,26.232675552368164,-14.970993041992188,-14.633566856384277,23.465576171875,20.301563262939453,-18.503494262695312,-18.042190551757812,-29.118864059448242,-16.461406707763672,-19.446645736694336,-25.12409019470215,35.8191032409668,-26.22000503540039,-38.32490921020508,27.620431900024414,9.667790412902832,18.734960556030273,18.788938522338867,-21.931758880615234,21.726036071777344,-25.832799911499023,14.733500480651855,-37.161502838134766,-12.78058910369873,22.238737106323242,37.807193756103516,-23.911876678466797,9.886710166931152,-31.795860290527344,-35.62613296508789,-29.284603118896484,24.633480072021484,18.495515823364258,-30.634891510009766,-36.74357986450195,-28.83702278137207,20.76789093017578,25.267576217651367,-30.581937789916992,42.028804779052734,-16.15247917175293,-25.795312881469727,29.459579467773438,19.064668655395508,25.707286834716797,30.157691955566406,29.885700225830078,-30.31105613708496,26.645912170410156,-27.05352210998535,-14.989802360534668,11.381766319274902,18.503253936767578,-22.62563133239746,3.2787606716156006,-21.242164611816406,-26.402284622192383,25.260040283203125,35.29487228393555,-29.499757766723633,-22.557952880859375,-12.155891418457031,-20.920915603637695,-50.507118225097656,20.83331298828125,40.95462417602539,-5.670310020446777,26.349767684936523,16.525022506713867,-23.901212692260742,26.717613220214844,-27.1456298828125,32.383914947509766,25.557493209838867,34.90435791015625,32.029415130615234,-25.701969146728516,-23.74751091003418,20.258604049682617,37.13749694824219,34.25614929199219,-29.73965835571289,31.493940353393555,24.521892547607422,-18.4739990234375,-4.858634948730469,17.50937843322754,-21.68706512451172,29.07171630859375,14.823588371276855,-21.089990615844727,32.694034576416016,15.812485694885254,-36.436622619628906,-24.040048599243164,-27.656402587890625,-18.76532745361328,-37.23143005371094,-17.172897338867188,18.444631576538086,-31.338407516479492,-33.01657485961914,-5.393765926361084,23.853687286376953,-30.539215087890625,-16.275463104248047,-5.169994831085205,23.25550079345703,24.7845458984375,35.83487319946289,-36.543331146240234,30.152084350585938,22.643375396728516,-24.35390281677246,33.45942687988281,-26.3467960357666,21.822795867919922,-20.745798110961914,-25.771976470947266,-25.74787139892578,-38.17922592163086,2.2949929237365723,-27.439008712768555,35.280738830566406,-18.285058975219727,-43.90962600708008,-23.938949584960938,18.958744049072266,-18.551532745361328,30.81769371032715,-22.57804298400879,-37.644775390625,-33.15642547607422,-32.56266403198242,-32.15285873413086,-22.309480667114258,-30.77450180053711,-29.693363189697266,-36.86507797241211,-19.06633949279785,-18.15530014038086,-30.808204650878906,27.10590362548828,-30.096010208129883,-16.3919677734375,-29.91346549987793,21.70233154296875,19.142667770385742,-34.20866012573242,24.42595100402832,-21.28360939025879,-4.804651737213135,-31.618350982666016,24.694068908691406,-17.28628921508789,23.5125732421875,25.271509170532227,15.54413890838623,-32.453758239746094,11.454012870788574,22.015766143798828,-16.618480682373047,16.418615341186523,-30.71512794494629,27.132081985473633,12.931560516357422,-18.443342208862305,18.710308074951172,-15.336315155029297,-23.135038375854492,-11.380496978759766,32.2469596862793,-37.128604888916016,30.399084091186523,-35.83381271362305,-48.44340896606445,-32.5263671875,-21.145872116088867,-34.65671920776367,-31.67952537536621,21.7315616607666,-24.032428741455078,30.44080352783203,-19.222660064697266,-24.16490364074707,-21.887502670288086,-18.011749267578125,-50.490203857421875,-20.566356658935547,-37.350040435791016,-33.04096603393555,-51.68476486206055,-12.938241958618164,32.59519958496094,-29.164899826049805,13.342162132263184,29.213077545166016,41.594154357910156,-31.431285858154297,13.65792179107666,29.675060272216797,-22.53331756591797,-4.53648567199707,-16.19288444519043,20.576276779174805,17.661884307861328,-28.34957504272461,-38.69976806640625,-43.76756286621094,23.49431800842285,27.172666549682617,-36.91664123535156],\"xaxis\":\"x\",\"y\":[7.427514553070068,22.332792282104492,-1.8462419509887695,9.06114673614502,-8.554783821105957,18.11214828491211,18.73727798461914,19.338056564331055,24.81981086730957,11.28099250793457,6.501891136169434,23.709571838378906,23.119022369384766,16.363468170166016,3.974038600921631,8.347443580627441,5.9917802810668945,12.594622611999512,2.845515012741089,5.50334358215332,4.136153221130371,14.96837329864502,18.936185836791992,-15.536666870117188,-11.880707740783691,-7.7084059715271,-2.6860294342041016,7.0406107902526855,-1.281059980392456,15.804125785827637,-12.188401222229004,-13.327277183532715,5.7456207275390625,-4.192712783813477,12.89611530303955,-1.4808845520019531,8.666767120361328,16.008922576904297,-1.3066773414611816,-2.2905683517456055,1.171923279762268,0.22934916615486145,7.086291313171387,0.7200475931167603,0.23577576875686646,8.230925559997559,-11.138289451599121,-8.18078327178955,12.52184009552002,-13.552582740783691,5.917656898498535,4.687592029571533,18.695079803466797,1.3523540496826172,6.151185989379883,13.86727237701416,2.6218461990356445,-3.4504337310791016,2.5568506717681885,-4.799009323120117,-4.985251426696777,2.283186435699463,-11.749578475952148,-1.6407212018966675,-9.539898872375488,7.875157356262207,-7.858675003051758,-7.852348327636719,0.07060028612613678,4.979019641876221,2.137470006942749,12.801491737365723,-8.10710334777832,-6.22236442565918,-4.5832390785217285,-2.9894232749938965,-5.657596588134766,-6.274977684020996,22.0015869140625,-6.495272159576416,3.3728020191192627,14.313016891479492,8.154471397399902,-8.653342247009277,9.345327377319336,12.11064624786377,-4.341963291168213,8.571434020996094,3.3669095039367676,-2.156630277633667,-8.935942649841309,-13.788658142089844,-16.348812103271484,7.6879682540893555,-1.2215256690979004,4.679957866668701,-9.753593444824219,-8.88857364654541,8.364117622375488,24.124679565429688,-3.6862072944641113,-15.337876319885254,8.357730865478516,1.3993630409240723,10.02206039428711,-11.910799980163574,2.0879056453704834,-11.399285316467285,-8.107779502868652,-6.1598920822143555,12.572882652282715,14.837812423706055,-11.626659393310547,-7.248012542724609,-9.127508163452148,-5.726254463195801,-3.98660945892334,-15.665902137756348,1.2598321437835693,1.798974871635437,6.42205810546875,12.852862358093262,-13.460237503051758,1.4133360385894775,8.481240272521973,5.758981227874756,12.794925689697266,4.974100112915039,15.785645484924316,3.064589500427246,21.916690826416016,-1.8769642114639282,0.6275313496589661,18.519941329956055,-7.848848342895508,20.077301025390625,-18.255338668823242,-7.332609176635742,-16.714046478271484,-1.023665189743042,-2.0675644874572754,23.965391159057617,-5.831560134887695,-18.88302230834961,-2.6051456928253174,-8.404779434204102,-4.028191089630127,3.6710636615753174,-9.355669975280762,-5.197294235229492,1.450932502746582,-2.9636409282684326,-18.20026969909668,8.53007984161377,-8.404635429382324,15.763830184936523,-20.126543045043945,-11.167054176330566,2.3722310066223145,-5.60538911819458,12.402749061584473,0.582487940788269,-16.03858757019043,6.378249168395996,3.442715644836426,-19.682466506958008,-13.907657623291016,4.286604881286621,12.265021324157715,-3.5587575435638428,-6.499958038330078,3.3883278369903564,-15.926036834716797,-3.884239912033081,6.315359592437744,-16.192726135253906,-14.981306076049805,-1.031738519668579,0.9978868961334229,17.43956184387207,15.602225303649902,5.87028694152832,4.882991313934326,-4.029255390167236,-3.9254190921783447,-0.49811527132987976,-13.733114242553711,-3.8059725761413574,-14.345751762390137,-17.98773956298828,-5.379890441894531,15.025052070617676,17.334571838378906,-16.067096710205078,3.3845231533050537,-1.7439079284667969,-0.3105350732803345,6.469749450683594,2.703690767288208,17.01261329650879,-19.727313995361328,20.072612762451172,-7.65511417388916,-10.446084976196289,-11.957047462463379,-4.906641006469727,-2.98897385597229,-2.5844101905822754,-8.765639305114746,-12.899567604064941,-12.682135581970215,-9.818758010864258,-19.174772262573242,4.234127521514893,8.004949569702148,-14.857391357421875,-11.802682876586914,-7.865327835083008,2.767913341522217,-10.019830703735352,-5.351799488067627,-8.416053771972656,-0.5850682258605957,7.908694744110107,21.644460678100586,-8.328527450561523,-3.545530080795288,-16.236980438232422,20.909143447875977,-14.499449729919434,-3.8110525608062744,5.995495796203613,6.8473429679870605,8.81319808959961,-18.653667449951172,14.119940757751465,-26.70039939880371,1.846419095993042,8.07921028137207,-15.246323585510254,-19.977779388427734,-20.19252586364746,9.154030799865723,7.250993251800537,-16.9398250579834,-19.21036720275879,2.0733747482299805,8.632920265197754,5.880166530609131,-7.608301162719727,7.882532119750977,8.267520904541016,4.65850830078125,11.978860855102539,-0.3406859338283539,16.768686294555664,9.310456275939941,6.5931077003479,6.441857814788818,6.988936424255371,10.383506774902344,16.174148559570312,-6.57882833480835,6.711747169494629,-18.533184051513672,24.614850997924805,-13.332316398620605,6.772402763366699,27.435821533203125,24.851211547851562,-5.358177661895752,5.478227138519287,8.769762992858887,-31.82223892211914,8.077733993530273,-2.407055616378784,14.044687271118164,5.151657581329346,8.881088256835938,-27.044330596923828,15.26197338104248,5.1556172370910645,12.90153694152832,4.087565898895264,8.368295669555664,11.898355484008789,21.278440475463867,13.243557929992676,-6.605227947235107,-19.136837005615234,6.451444149017334,4.499660015106201,-30.344884872436523,-17.677064895629883,-33.492740631103516,4.907948970794678,-21.7587890625,23.910358428955078,-8.325098037719727,-4.184968948364258,7.090423107147217,16.80261993408203,20.62264060974121,4.847790718078613,18.346500396728516,-2.628829002380371,5.526711940765381,2.617305278778076,-1.6269570589065552,-10.641249656677246,-20.25300407409668,-5.626340866088867,-3.211376428604126,10.815313339233398,8.315892219543457,-32.81535339355469,-5.682164669036865,3.164905548095703,9.514684677124023,-2.5111329555511475,-5.4671759605407715,-17.560720443725586,1.9421335458755493,11.99244499206543,9.680973052978516,-7.031569957733154,7.9582037925720215,-9.314789772033691,-14.266304016113281,3.303847312927246,-7.127561092376709,-13.693258285522461,-4.948441505432129,-3.1359269618988037,-1.8467817306518555,9.373892784118652,-13.69287395477295,-15.771032333374023,5.8668413162231445,1.4303873777389526,18.93377685546875,-17.713882446289062,-1.3023988008499146,20.04239273071289,7.0508646965026855,-2.063135862350464,-11.482355117797852,6.578283309936523,17.479690551757812,12.340826988220215,-4.2091593742370605,4.983984470367432,-0.21359960734844208,2.3943684101104736,9.057441711425781,-5.648346900939941,1.084214448928833,-1.6327911615371704,6.237408638000488,3.941218137741089,-16.79920196533203,0.6817604303359985,2.5669171810150146,-3.0865912437438965,10.152364730834961,12.340503692626953,-21.1956787109375,-6.964993000030518,-29.475196838378906,-2.1852259635925293,-13.02078628540039,-7.8745436668396,-20.50381088256836,12.693158149719238,3.458892822265625,11.709871292114258,-7.719182968139648,18.892135620117188,-22.434574127197266,-6.987671375274658,-19.412227630615234,20.60171127319336,14.279816627502441,18.668039321899414,0.5698608756065369,3.7922823429107666,-16.870485305786133,-11.610175132751465,-19.658422470092773,1.2271935939788818,-15.09933853149414,21.331737518310547,2.9856882095336914,-5.589785099029541,-28.371286392211914,12.161604881286621,7.712143898010254,-16.033056259155273,-20.253978729248047,23.847806930541992,-6.134788990020752,18.884822845458984,4.937917709350586,13.409327507019043,-30.985530853271484,-1.7094842195510864,4.231262683868408,15.245018005371094,3.661384344100952,-2.872377872467041,18.259525299072266,3.8890633583068848,-5.169525146484375,6.964784622192383,-19.278186798095703,3.2809035778045654,13.416824340820312,18.94320297241211,3.5750107765197754,8.398214340209961,-7.641390323638916,25.454559326171875,-2.5582432746887207,22.864059448242188,17.97895622253418,-3.545382022857666,-15.605899810791016,-0.4033600389957428,9.86924934387207,-11.139422416687012,0.7139015197753906,-10.451399803161621,15.271843910217285,-10.706352233886719,9.233010292053223,12.511585235595703,-12.445073127746582,7.470366477966309,9.806862831115723,-8.804144859313965,-3.7891182899475098,6.118389129638672,-10.514053344726562,-19.246070861816406,6.0815300941467285,8.731118202209473,15.785627365112305,11.575845718383789,14.907585144042969,-27.40993309020996,0.46064403653144836,-12.690242767333984,-2.318232536315918,-13.072216987609863,10.389778137207031,-5.6090168952941895,-19.175506591796875,-22.313425064086914,8.505887031555176,6.937208652496338,-7.6080145835876465,-17.016420364379883,15.740317344665527,-1.7194689512252808,-1.982627511024475,-24.27391242980957,0.7555665373802185,3.98579478263855,6.27023458480835,15.842742919921875,0.28385064005851746,-13.109418869018555,-10.420994758605957,-16.183231353759766,20.514001846313477,7.049683570861816,-5.978697299957275,-16.709461212158203,-13.348735809326172,-19.351167678833008,1.7031235694885254,-8.573781967163086,13.893813133239746,23.268754959106445,-5.275960445404053,16.085737228393555,-9.202795028686523,-18.747934341430664,6.418694972991943,8.458014488220215,-16.807424545288086,3.2098331451416016,-19.582088470458984,17.09050178527832,8.809361457824707,8.576642990112305,12.890137672424316,-4.220712661743164,6.200605392456055,13.097183227539062,-11.968828201293945,19.88065528869629,15.692286491394043,21.904987335205078,8.693582534790039,6.382285118103027,0.45356106758117676,18.667255401611328,-14.908817291259766,13.31151008605957,-7.294858932495117,15.82376766204834,7.898379802703857,-9.573562622070312,-18.532962799072266,-10.324771881103516,2.799384832382202,-0.08752202242612839,6.283913612365723,19.274700164794922,-21.029659271240234,-9.280211448669434,17.30259895324707,12.572822570800781,1.7457165718078613,-13.745059967041016,-15.758665084838867,4.7551116943359375,-8.576525688171387,11.355985641479492,2.838312864303589,-2.518975019454956,6.080066680908203,-3.037264823913574,-10.731539726257324,-6.759644031524658,-5.587668418884277,-10.36231803894043,-3.2965028285980225,7.443744659423828,5.306303024291992,6.518740653991699,22.238204956054688,22.907182693481445,-6.428897857666016,-9.592226028442383,5.15821647644043,-1.7988935708999634,4.432103633880615,-6.360532283782959,21.134122848510742,-3.233232021331787,14.807799339294434,0.34438082575798035,5.172475814819336,1.3061959743499756,7.71710205078125,-1.8015910387039185,-13.334722518920898,-16.577333450317383,0.3300999701023102,-18.08504867553711,22.216154098510742,-8.799628257751465,2.899984836578369,-11.02290153503418,0.42830899357795715,-2.7844398021698,-11.402685165405273,-19.78071403503418,-7.866913318634033,-15.309320449829102,-6.33765983581543,12.32753849029541,7.789978504180908,21.039533615112305,16.002281188964844,8.99236011505127,6.416611671447754,4.695647716522217,16.686159133911133,-3.358689785003662,-18.1490535736084,21.959470748901367,18.264738082885742,13.444062232971191,-2.5832791328430176,4.746947765350342,-16.88569450378418,-20.19676399230957,-11.612757682800293,-16.847976684570312,-0.5009795427322388,2.9599242210388184,3.6038858890533447,-6.2691240310668945,-10.012112617492676,-2.6525793075561523,-11.510054588317871,8.16478443145752,-6.8116350173950195,16.784042358398438,9.51146411895752,7.956763744354248,-0.18886713683605194,15.035117149353027,3.0807793140411377,-6.525591850280762,-12.683730125427246,-4.100017547607422,-13.777220726013184,-7.842433452606201,18.101272583007812,11.18605899810791,22.341737747192383,9.555747032165527,13.644365310668945,-5.95882511138916,8.441427230834961,6.795715808868408,-2.52316951751709,-11.17448616027832,-10.67347240447998,17.097471237182617,21.43348503112793,-25.26422691345215,-17.495817184448242,7.94343376159668,9.487913131713867,4.900400161743164,-8.656925201416016,-35.8974494934082,6.882503509521484,15.151036262512207,2.6371686458587646,1.600380778312683,8.854681015014648,-14.037784576416016,17.08860206604004,-11.032450675964355,-17.746517181396484,2.4140114784240723,-35.98249053955078,-3.7807064056396484,15.359508514404297,6.225646018981934,-5.647548675537109,-5.410379409790039,0.41637033224105835,-3.242924928665161,-1.2516822814941406,-4.357072830200195,6.345088958740234,-16.397077560424805,15.606765747070312,20.381328582763672,-1.7212939262390137,-32.44544219970703,-0.514413058757782,-17.97690773010254,-16.986242294311523,-2.0857527256011963,-14.183385848999023,17.964275360107422,17.685617446899414,-27.70237922668457,18.375688552856445,6.797966003417969,-9.876102447509766,5.16106653213501,-27.425600051879883,14.0468111038208,-3.7547202110290527,8.381778717041016,-0.48912128806114197,9.446464538574219,-13.3546781539917,9.162278175354004,11.827239036560059,9.423048973083496,-16.35443687438965,8.027334213256836,-12.828568458557129,19.42633628845215,14.630563735961914,0.14173461496829987,0.7403426170349121,9.761225700378418,6.6631340980529785,7.551787376403809,19.496566772460938,-2.642240524291992,8.802129745483398,-8.556639671325684,-7.716761589050293,-7.777275562286377,11.769550323486328,21.111202239990234,2.3297979831695557,17.802515029907227,-20.26388168334961,0.7908993363380432,21.333452224731445,0.599457859992981,4.589738368988037,1.5979737043380737,8.839262962341309,16.774351119995117,-3.6647117137908936,5.1257710456848145,-7.940089225769043,9.496684074401855,12.576165199279785,-16.665109634399414,-11.371651649475098,2.244140386581421,15.63890266418457,-8.619147300720215,-13.679876327514648,-13.616150856018066,20.240419387817383,-13.013452529907227,7.865055561065674,10.566420555114746,8.937731742858887,13.510303497314453,3.0159175395965576,0.7693191766738892,1.3415253162384033,11.540809631347656,-4.136838912963867,-8.190633773803711,-20.68585777282715,-7.641748905181885,-33.88261795043945,-29.64760971069336,-2.7930259704589844,2.587198495864868,23.221651077270508,8.906846046447754,3.3183507919311523,3.2929859161376953,7.768457412719727,2.3659205436706543,-25.16653823852539,-12.529678344726562,5.774327754974365,-11.72457504272461,6.3786749839782715,23.99225425720215,-30.05418586730957,9.382776260375977,8.833654403686523,22.321046829223633,8.920130729675293,-23.65003776550293,-14.913033485412598,13.532855987548828,13.19021987915039,-10.8541259765625,8.191410064697266,-13.7279634475708,-1.4199557304382324,-4.789875507354736,-6.780064105987549,10.417457580566406,-9.137106895446777,-13.834399223327637,-19.18740463256836,-12.67151165008545,-13.183462142944336,22.365253448486328,23.56636619567871,-7.798171520233154,9.130464553833008,-13.655942916870117,2.3090884685516357,10.08062744140625,5.101023197174072,1.440700650215149,9.553458213806152,16.240436553955078,2.2427282333374023,19.843791961669922,-3.8916921615600586,19.672842025756836,6.505762577056885,-4.426631450653076,-9.350777626037598,7.088314533233643,7.038209438323975,5.608883857727051,-3.4136176109313965,1.1289215087890625,5.141916751861572,-33.23057556152344,-12.840875625610352,-11.471416473388672,-16.61066246032715,-7.36588191986084,-6.757149696350098,8.593267440795898,-14.502589225769043,3.6453990936279297,-9.364082336425781,12.232769966125488,8.214917182922363,7.346111297607422,7.7424774169921875,7.099350452423096,8.665396690368652,-6.016981601715088,4.9200005531311035,8.265458106994629,1.4855117797851562,9.694340705871582,2.9757044315338135,21.056787490844727,7.469120502471924,14.409470558166504,-11.553121566772461,10.473748207092285,9.751697540283203,8.09140396118164,19.991361618041992,-18.87921905517578,5.204486846923828,-6.773045539855957,-4.031601905822754,7.62456750869751,-6.724778652191162,16.572477340698242,4.384092330932617,-2.099414348602295,-1.3528809547424316,-14.683856964111328,3.7463932037353516,-8.544709205627441,11.613161087036133,-7.282297134399414,-11.035974502563477,15.851363182067871,-2.0875473022460938,-10.981866836547852,-8.082341194152832,2.1550652980804443,7.630989074707031,10.211199760437012,-13.088497161865234,19.178312301635742,16.236248016357422,11.100333213806152,9.595797538757324,8.946385383605957,-16.43619155883789,-15.505302429199219,18.91241455078125,-17.518131256103516,5.33956241607666,13.753153800964355,-18.515483856201172,-3.7308411598205566,10.37171745300293,-11.032238006591797,-2.6243298053741455,18.96176528930664,-16.038257598876953,-10.062851905822754,-1.6803712844848633,-4.787906646728516,-14.81198501586914,-10.00709056854248,-11.760384559631348,4.685606002807617,8.875167846679688,-1.0196279287338257,4.368478775024414,2.9499237537384033,4.745588779449463,9.119274139404297,13.851107597351074,18.266075134277344,9.743220329284668,21.302013397216797,-14.045068740844727,7.9443440437316895,4.734508514404297,19.563148498535156,1.3388899564743042,-19.360492706298828,-2.6732940673828125,4.566064357757568,-15.202215194702148,8.350850105285645,6.227680683135986,-3.8870928287506104,-20.529884338378906,-0.932472288608551,-6.328423023223877,-14.235773086547852,-9.859213829040527,10.041752815246582,4.667669296264648,7.114360809326172,-18.667600631713867,-25.561874389648438,-18.832714080810547,8.471404075622559,-10.27790641784668,9.724080085754395,17.73523712158203,6.283259868621826,15.359668731689453,-8.812084197998047,-7.021007061004639,16.33017921447754,-3.4987425804138184,-0.1091318428516388,6.968162536621094,-33.78611373901367,16.036073684692383,-0.969950258731842,13.098837852478027,-11.021255493164062,-8.680429458618164,-5.068425178527832,3.1201581954956055,-15.577298164367676,-4.051661968231201,11.85586166381836,-8.093633651733398,14.260265350341797,8.789397239685059,4.075866222381592,3.674877166748047,-18.135766983032227,17.172985076904297,2.8884379863739014,-2.956371545791626,15.598045349121094,-9.489062309265137,2.5827536582946777,12.721879005432129,-12.04387092590332,6.049837589263916,-10.103119850158691,-13.672713279724121,-3.5609500408172607,-10.581323623657227,11.750333786010742,-20.232301712036133,8.589235305786133,7.000708103179932,11.04214096069336,-6.418571472167969,4.861831188201904,14.84836196899414,19.686647415161133,-15.668261528015137,-9.031208038330078,-3.1366238594055176,-8.9591064453125,19.483482360839844,18.7122745513916,16.714204788208008,8.506355285644531,-8.500967979431152,6.752951145172119,3.3388283252716064,2.032227039337158,-6.786813735961914,5.101658344268799,2.114907741546631,-36.65823745727539,-6.568799018859863,3.7133805751800537,-4.992013454437256,-1.1803721189498901,-9.974061012268066,14.465855598449707,-16.211496353149414,-8.922368049621582,-15.846879005432129,3.9623336791992188,16.818326950073242,-4.80359411239624,-19.84493637084961,-8.070930480957031,6.0519795417785645,3.949582815170288,1.0498296022415161,6.480625152587891,13.213275909423828,3.299679756164551,-4.889127731323242,-10.94465446472168,9.084959030151367,1.8107988834381104,-11.969738006591797,-20.676708221435547,-6.503836154937744,-9.165663719177246,-11.19504165649414,3.989074945449829,-13.58867359161377,4.85503625869751,-5.599679946899414,-7.922957897186279,6.802618503570557,1.9901063442230225,11.796524047851562,-4.044276237487793,11.337990760803223,3.6052730083465576,16.293733596801758,2.945068597793579,-7.901365280151367,-11.724315643310547,16.92017364501953,17.42842674255371,17.279451370239258,24.84987449645996,19.441823959350586,-4.555366516113281,0.7653711438179016,7.48139762878418,-11.699612617492676,6.465978145599365,4.580423831939697,9.306706428527832,12.815345764160156,19.544292449951172,6.8317389488220215,-11.81520938873291,-13.744914054870605,-17.969350814819336,8.622841835021973,7.634853839874268,11.05101490020752,-10.57785701751709,4.237339973449707,11.503974914550781,2.4646215438842773,-8.19189167022705,-1.5306029319763184,15.888145446777344,-6.831020355224609,-12.234047889709473,-1.8947845697402954,-11.663945198059082,-11.0010347366333,6.9776201248168945,-8.131084442138672,0.2945689857006073,-9.802431106567383,4.634339809417725,-3.1906216144561768,-9.974563598632812,-26.997241973876953,10.125603675842285,2.158764362335205,1.7074651718139648,8.604819297790527,3.726607322692871,-20.46047592163086,3.443607807159424,4.394957542419434,5.99894905090332,-5.586813449859619,7.662893772125244,-8.942272186279297,9.912797927856445,-11.111309051513672,-24.51999282836914,-31.776968002319336,26.34735679626465,-12.192643165588379,-2.7974131107330322,22.225976943969727,-1.201210618019104,-1.1949793100357056,18.985565185546875,2.6965887546539307,10.924062728881836,-16.973865509033203,-3.212169647216797,-6.366214752197266,-5.774271011352539,-28.29227066040039,7.619377136230469,15.758981704711914,7.034738540649414,-4.860652446746826,6.745632171630859,4.062704563140869,5.668013572692871,19.52446746826172,-2.1655237674713135,-3.3048346042633057,1.8192815780639648,-2.127492666244507,-22.284852981567383,-17.754261016845703,-19.627561569213867,-6.832766056060791,16.9173526763916,14.915325164794922,-13.364813804626465,27.081796646118164,25.524974822998047,-0.7052571177482605,-3.4997379779815674,12.264975547790527,6.276748180389404,-13.404288291931152,-8.974781036376953,1.6862787008285522,5.584024429321289,-20.144290924072266,-11.957755088806152,1.9644091129302979,13.503445625305176,5.631918907165527,9.680779457092285,3.984642505645752,21.29943084716797,18.237279891967773,8.32848834991455,-15.332797050476074,13.919926643371582,2.9727625846862793,7.527182579040527,-15.291951179504395,-15.864933967590332,-7.799197673797607,-2.259974956512451,-11.100298881530762,13.183971405029297,5.092739582061768,6.44624137878418,-9.12850284576416,7.776662826538086,-5.562892913818359,7.119243144989014,5.092525482177734,-0.3937419056892395,-2.0489697456359863,-7.0615234375,-11.516525268554688,-6.4526753425598145,2.948491096496582,-6.133716106414795,16.929218292236328,5.661811828613281,-3.2670469284057617,-15.772380828857422,3.0278847217559814,21.789962768554688,5.308328628540039,4.777804851531982,-12.67943000793457,-7.251840591430664,-11.743722915649414,-3.33095383644104,-0.3772371709346771,-5.852504730224609,-11.701608657836914,-1.5272588729858398,-17.1240234375,-2.524211883544922,6.797603607177734,-14.700754165649414,-1.454624056816101,-17.08573341369629,3.5939111709594727,14.20002555847168,-9.010010719299316,3.6243746280670166,7.054416179656982,-10.50540828704834,-8.889284133911133,-5.253955364227295,8.998634338378906,-10.385037422180176,1.8433138132095337,-0.22292248904705048,19.478092193603516,15.569551467895508,5.572392463684082,2.856342315673828,-16.62416648864746,-4.064028263092041,12.211527824401855,7.772521495819092,3.9704031944274902,-17.881107330322266,-0.37779709696769714,1.8078645467758179,22.13092613220215,-3.9441280364990234,5.121363639831543,6.583382606506348,-4.3253045082092285,11.09531021118164,3.0829007625579834,15.262279510498047,2.059330701828003,-20.372739791870117,-0.4950854480266571,9.036881446838379,8.843279838562012,9.517949104309082,0.9899585247039795,4.120931148529053,-19.567670822143555,-10.960700988769531,1.5636101961135864,9.398676872253418,6.725645065307617,7.123283386230469,-7.035182952880859,-8.215822219848633,11.583930969238281,-34.18628692626953,3.7678489685058594,-14.233077049255371,-14.055463790893555,-19.96930503845215,-15.818733215332031,-5.995394229888916,-12.21507740020752,15.566852569580078,-6.917698860168457,13.835805892944336,14.454899787902832,-5.236323833465576,22.330280303955078,-15.660481452941895,3.161677122116089,17.864423751831055,15.350414276123047,2.574216604232788,7.342134952545166,0.5682727694511414,-22.890939712524414,2.6636078357696533,6.6661601066589355,12.649210929870605,4.933494567871094,8.802817344665527,2.8712804317474365,9.811813354492188,12.074294090270996,3.149466037750244,-19.69483184814453,20.07346534729004,3.959906578063965,17.93805694580078,10.04664134979248,20.33831214904785,-3.5866267681121826,-27.882139205932617,10.394168853759766,-6.190262317657471,3.3586766719818115,22.348108291625977,12.537429809570312,-24.115097045898438,-17.452001571655273,-3.136779308319092,-9.140262603759766,-6.6870903968811035,12.65140151977539,0.377932071685791,-12.575919151306152,-10.084385871887207,13.65120792388916,-15.29681396484375,-11.135074615478516,1.1787388324737549,12.913960456848145,-0.5551616549491882,-10.31885814666748,-0.9149971604347229,4.2818379402160645,3.772385358810425,-16.400880813598633,-7.981037139892578,11.213662147521973,7.474497318267822,-16.00571060180664,10.185286521911621,-17.631193161010742,-4.352616786956787,2.477968692779541,15.152850151062012,-10.506766319274902,-16.39849853515625,-4.4293036460876465,8.547799110412598,-17.780305862426758,4.670985698699951,-30.47585105895996,-8.460774421691895,-9.205780029296875,18.92945098876953,2.6544034481048584,7.684203147888184,-19.598289489746094,-10.15242862701416,-14.859084129333496,4.492458343505859,-11.601707458496094,23.225162506103516,-11.38068962097168,8.392396926879883,10.469931602478027,-13.1045503616333,-8.498682022094727,20.956193923950195,-12.111080169677734,-6.578960418701172,-33.43183898925781,-10.614511489868164,14.832427978515625,-12.445642471313477,22.756927490234375,17.493938446044922,22.276172637939453,-15.021965026855469,0.6046556830406189,-1.678160548210144,-6.416635036468506,15.06076431274414,-0.3512744605541229,9.494378089904785,3.0981333255767822,-7.338266372680664,11.278228759765625,17.267675399780273,4.226954460144043,8.654927253723145,10.175284385681152,-5.177299976348877,-0.613689124584198,18.826526641845703,10.558899879455566,16.33320426940918,15.601801872253418,-2.2081284523010254,-16.308639526367188,6.0988311767578125,6.808654308319092,12.875717163085938,8.239128112792969,22.777334213256836,19.228437423706055,-35.867149353027344,13.298344612121582,-17.47173500061035,-5.122910499572754,-14.8711519241333,-7.397086143493652,-10.631902694702148,-7.665152072906494,-1.4250272512435913,-5.123080730438232,-33.48161315917969,-19.389324188232422,-14.902660369873047,0.11414093524217606,5.701446533203125,-18.56877899169922,2.3173699378967285,-16.392229080200195,-2.217902421951294,-7.394222259521484,-2.959653377532959,-1.2216148376464844,-3.1420185565948486,-19.532773971557617,-11.6918306350708,-5.667900562286377,-8.373011589050293,-0.7265183925628662,-5.142340660095215,-33.7662239074707,20.131574630737305,-2.2237470149993896,-26.657257080078125,-16.13718032836914,-13.889263153076172,14.356902122497559,11.857184410095215,5.091884613037109,14.34465217590332,20.836166381835938,4.2463788986206055,0.9343689680099487,1.6743968725204468,1.3957083225250244,5.217844486236572,6.658334732055664,18.719165802001953,-5.763597011566162,7.378332614898682,-1.3905364274978638,5.161856651306152,20.23349952697754,16.291242599487305,9.88052749633789,4.483253002166748,-2.3857364654541016,0.7851831316947937,19.749155044555664,8.137060165405273,-2.869636297225952,-0.5137925148010254,-19.39560890197754,0.18970507383346558,8.717022895812988,-14.121521949768066,4.038364410400391,3.7450244426727295,16.64937973022461,-8.389890670776367,7.771008491516113,-8.752728462219238,0.050803184509277344,5.82600736618042,-4.889282703399658,0.7544317245483398,14.896925926208496,-9.917095184326172,-13.521032333374023,-12.295897483825684,9.394447326660156,-13.351395606994629,-6.531986236572266,-4.212875843048096,6.69579553604126,-7.153149127960205,-8.125482559204102,2.62526535987854,8.48755931854248,18.655750274658203,27.16050148010254,-15.62382698059082,22.517780303955078,-19.049301147460938,-7.000787258148193,-4.296185493469238,3.0803630352020264,-0.9734387397766113,10.96568775177002,1.3490869998931885,5.71069860458374,-3.171888828277588,-8.910568237304688,3.787487745285034,3.085116386413574,-23.373626708984375,-2.6696457862854004,3.8689239025115967,4.409897804260254,1.9969139099121094,9.866642951965332,14.61657428741455,-6.333902359008789,-4.2728776931762695,-2.324214220046997,12.658864974975586,-9.252822875976562,7.421932220458984,-18.224061965942383,21.036277770996094,-19.91608428955078,-0.034853871911764145,16.707874298095703,-6.5190629959106445,9.100400924682617,-5.070115566253662,-20.797870635986328,10.00571060180664,-13.333313941955566,-30.710723876953125,-10.823939323425293,3.772163152694702,-4.471213340759277,2.5084075927734375,9.384839057922363,-3.0040476322174072,-5.333655834197998,7.376531600952148,-12.657201766967773,-10.051091194152832,-6.260883808135986,13.487834930419922,13.443578720092773,11.837102890014648,-10.736335754394531,-10.66718578338623,-13.577326774597168,-8.332175254821777,-3.919074535369873,23.11216163635254,1.9078646898269653,0.8143846392631531,-12.277525901794434,3.0218732357025146,10.749597549438477,-21.599966049194336,-9.984940528869629,14.676740646362305,7.276556491851807,1.747672438621521,-4.0100860595703125,1.5769208669662476,-1.7613292932510376,-6.773192405700684,11.340315818786621,-2.390580177307129,4.476750373840332,18.8992862701416,10.699186325073242,-0.09093435853719711,3.941774606704712,9.709341049194336,2.387096643447876,-10.677460670471191,8.723114967346191,-24.224191665649414,-12.111289024353027,6.336186408996582,-6.335040092468262,-1.8677705526351929,-18.369367599487305,15.311288833618164,-17.226224899291992,4.782175540924072,-7.379741191864014,-12.165806770324707,-12.809057235717773,-1.3351293802261353,-15.244028091430664,5.201442718505859,-0.11508211493492126,16.84697151184082,10.329992294311523,1.8500012159347534,-4.74738073348999,12.085223197937012,-6.126687526702881,22.301679611206055,8.149127006530762,25.99589729309082,13.879925727844238,9.887747764587402,-6.596234321594238,9.274435043334961,7.343715667724609,6.617278099060059,-0.43735525012016296,-5.074590682983398,-3.513845443725586,-18.81943130493164,2.956671714782715,-4.9929680824279785,11.048604011535645,0.2575196623802185,-8.77066421508789,6.002663612365723,5.0887908935546875,5.10828971862793,11.161955833435059,-2.9174177646636963,0.45274123549461365,-13.022555351257324,1.6098417043685913,-6.013657093048096,16.682891845703125,17.654436111450195,3.07375168800354,0.20026853680610657,7.355584144592285,-2.201770305633545,4.06425142288208,4.694338798522949,-8.618340492248535,0.4165046811103821,3.8488433361053467,-15.571765899658203,-7.57808256149292,-7.702362060546875,3.6808624267578125,8.601176261901855,2.609189033508301,-8.206192016601562,12.781355857849121,-0.7663342952728271,12.094206809997559,-7.97902250289917,4.415182590484619,3.0627291202545166,-6.642374038696289,4.286879539489746,16.43182373046875,6.151671886444092,5.435251712799072,3.949690580368042,-4.051092624664307,3.591554641723633,-6.830628871917725,13.061564445495605,-4.880734443664551,2.9725992679595947,-6.289444923400879,-6.829553127288818,-10.978631973266602,1.456716537475586,2.925150156021118,-6.010229110717773,5.455054759979248,25.919775009155273,-9.364320755004883,12.051128387451172,-6.31803560256958,-13.424304008483887,-19.697498321533203,21.425870895385742,-29.920930862426758,-1.2765412330627441,2.6895666122436523,7.244130611419678,-14.279650688171387,8.656298637390137,2.515059471130371,18.410436630249023,-7.401255130767822,-15.286928176879883,-30.503694534301758,-8.470170974731445,-1.659717082977295,-18.69951629638672,-8.9208984375,6.1586809158325195,1.6273186206817627,16.38350486755371,-6.7630720138549805,-8.529013633728027,-18.861042022705078,5.401205539703369,-9.666910171508789,-15.546425819396973,-21.15452766418457,17.195940017700195,-8.055781364440918,16.26089096069336,8.947681427001953,20.133991241455078,-8.408929824829102,15.452001571655273,13.513790130615234,2.7148828506469727,11.739026069641113,16.050600051879883,-6.671187400817871,4.435884475708008,2.4322450160980225,3.809516429901123,16.68128776550293,5.731738090515137,1.3751640319824219,22.37561798095703,7.090959548950195,-1.3231444358825684,-7.919816970825195,-6.477640151977539,4.059767723083496,-8.90316390991211,9.657862663269043,11.403534889221191,7.2736029624938965,-6.538549900054932,2.4049875736236572,10.767781257629395,-3.849714994430542,-10.141275405883789,18.623321533203125,1.7334363460540771,-5.281723976135254,-6.46923828125,15.646676063537598,6.557393550872803,1.2305022478103638,-6.924224853515625,-11.699061393737793,17.424022674560547,7.704219818115234,-3.8535261154174805,-18.994888305664062,1.376894235610962,-4.592547416687012,-11.479253768920898,-12.134634017944336,-7.191565990447998,9.647603034973145,-5.464832305908203,-6.213886737823486,-7.8084869384765625,-16.84782600402832,11.056384086608887,-12.930147171020508,-19.01219367980957,-5.206002235412598,-6.763768672943115,1.8597407341003418,8.5957612991333,-8.269598007202148,-11.639342308044434,-2.4569616317749023,-1.736162781715393,-6.656855583190918,-11.468277931213379,-18.151939392089844,0.13690286874771118,11.918179512023926,-8.635927200317383,8.337442398071289,-5.111502170562744,-3.417619228363037,26.684186935424805,-17.413433074951172,-2.450133800506592,7.961455345153809,17.70782470703125,-18.236997604370117,-14.049612998962402,-5.449415683746338,-7.274786472320557,4.052055358886719,-13.839548110961914,6.016122341156006,-0.24450534582138062,5.323928356170654,5.641812801361084,16.904436111450195,9.194172859191895,16.289268493652344,3.063706159591675,13.315247535705566,6.143439769744873,8.093402862548828,-15.058720588684082,17.99864959716797,14.360633850097656,19.425262451171875,-9.626509666442871,22.05707359313965,22.036230087280273,-28.616838455200195,-1.7701239585876465,17.95608901977539,3.682732105255127,-7.944058418273926,22.814598083496094,-11.893583297729492,-7.859470844268799,-10.035758972167969,-2.7659406661987305,-15.902141571044922,3.313267707824707,-9.192523956298828,-4.061822891235352,2.496328353881836,-11.657886505126953,20.181962966918945,-15.897985458374023,2.514408588409424,-15.055014610290527,-9.743062019348145,4.451616287231445,24.573434829711914,6.493335723876953,-3.116497755050659,-10.918990135192871,17.973648071289062,3.412773847579956,17.07326889038086,7.297756671905518,6.895390510559082,7.0018815994262695,20.6923770904541,0.6598952412605286,9.910767555236816,9.410216331481934,0.6226783394813538,4.208648204803467,11.692806243896484,22.10184097290039,9.449265480041504,-18.326356887817383,-19.176002502441406,-1.680132508277893,13.17473316192627,-16.911924362182617,3.3524651527404785,2.296457529067993,3.7772910594940186,-8.593438148498535,-6.181605815887451,-26.186464309692383,12.054204940795898,-16.810388565063477,7.849070072174072,-4.258699417114258,-19.48326301574707,9.488471031188965,-1.4715136289596558,-0.6167012453079224,2.1645045280456543,-2.545835018157959,-6.599689483642578,-19.025297164916992,15.467361450195312,-12.041289329528809,17.057039260864258,-6.228518486022949,3.9581127166748047,-8.258169174194336,-3.3918468952178955,2.2716405391693115,-4.872786045074463,-4.694640636444092,0.5792409777641296,-6.059027194976807,-7.425944805145264,-1.8143587112426758,9.010488510131836,-8.305315971374512,19.652385711669922,-16.962074279785156,8.31970500946045,19.89859962463379,16.86034393310547,3.3478827476501465,2.5022788047790527,16.174760818481445,-3.9489057064056396,8.971199035644531,21.0531063079834,10.611964225769043,-20.311933517456055,10.332721710205078,1.0580317974090576,7.529798984527588,3.381911516189575,4.682920932769775,8.200270652770996,11.495025634765625,-5.690833568572998,15.52632999420166,7.686456680297852,-13.534892082214355,-6.374735355377197,18.926305770874023,10.524480819702148,8.8355073928833,6.98158597946167,9.149428367614746,-1.8481638431549072,-11.88259220123291,26.709897994995117,8.914955139160156,-0.7896373271942139,-8.189286231994629,16.890439987182617,-25.61178970336914,4.09677791595459,-9.880768775939941,18.4043025970459,2.17734956741333,4.0071024894714355,-6.96989107131958,1.4345303773880005,-0.08469724655151367,-18.26524543762207,0.38090232014656067,-2.9103314876556396,0.30889564752578735,5.478699207305908,-8.042162895202637,0.5324479341506958,-8.651490211486816,12.77202033996582,10.672983169555664,-6.960817337036133,-16.35405921936035,-17.197664260864258,1.904264211654663,7.221117973327637,10.211326599121094,9.720372200012207,13.056891441345215,-10.005745887756348,1.0748950242996216,-8.156452178955078,-3.761474370956421,-21.171043395996094,4.08907413482666,10.894042015075684,8.639852523803711,-2.55692982673645,5.458919048309326,-0.5287752151489258,3.476738452911377,-34.27484130859375,-11.227639198303223,2.9908907413482666,9.820538520812988,8.849530220031738,5.353085517883301,17.739789962768555,4.742035865783691,2.7882213592529297,6.946038722991943,2.767989158630371,5.7387776374816895,-13.12885856628418,-12.601448059082031,12.12913703918457,-3.4087977409362793,-11.140401840209961,-34.82050704956055,-6.900232315063477,-28.89525604248047,5.061182975769043,-34.852291107177734,0.7971183657646179,17.432376861572266,22.50564956665039,5.211084365844727,-20.627750396728516,18.213529586791992,11.053120613098145,-10.859288215637207,-5.170886039733887,-22.165414810180664,-14.094117164611816,21.805315017700195,5.92570161819458,-7.394769668579102,5.016127109527588,22.481801986694336,6.793857097625732,-5.393734455108643,-3.568624496459961,-8.285643577575684,-12.151087760925293,-6.173899173736572,-9.681939125061035,-8.292305946350098,13.837249755859375,14.350115776062012,6.621171474456787,-32.094818115234375,-7.784934043884277,-10.869863510131836,-14.857051849365234,-15.353158950805664,22.657461166381836,7.028043270111084,8.986964225769043,8.137104988098145,-33.811214447021484,19.36420249938965,13.99334716796875,19.761398315429688,10.314985275268555,15.132550239562988,0.9980769157409668,24.238880157470703,4.489897727966309,11.418875694274902,2.75563645362854,7.540635585784912,-32.49047088623047,-4.232735633850098,-13.698444366455078,-1.1044840812683105,3.261368989944458,4.834415912628174,-7.263940811157227,25.103853225708008,24.2554931640625,20.006250381469727,-1.6908180713653564,-14.244638442993164,-12.593347549438477,3.131962776184082,-7.665362358093262,15.673935890197754,-0.9854662418365479,-3.2462382316589355,0.4509495496749878,-8.67760181427002,22.08916473388672,1.333189606666565,-1.49308443069458,10.247859954833984,-36.751129150390625,-6.329392910003662,2.7647533416748047,-2.876044511795044,1.7749640941619873,-20.450082778930664,-23.242788314819336,7.751364707946777,2.503549575805664,11.366098403930664,-1.3972654342651367,3.397042989730835,-12.082195281982422,2.0072364807128906,8.407475471496582,12.299409866333008,-16.251157760620117,3.704577684402466,-33.12081527709961,10.56859302520752,-26.55729103088379,17.775529861450195,1.4443297386169434,3.3589377403259277,10.735565185546875,5.238922595977783,3.769331932067871,14.102103233337402,-13.827689170837402,-11.171735763549805,24.195846557617188,5.811062335968018,20.000072479248047,10.721662521362305,-9.0385160446167,2.1458075046539307,-15.834477424621582,2.448288679122925,-3.725821018218994,-10.659480094909668,-10.954514503479004,-7.290826320648193,-7.490918159484863,-19.54022216796875,2.4816291332244873,-16.185726165771484,-13.06807804107666,-17.063005447387695,-19.760379791259766,4.1928229331970215,-17.086687088012695,-9.620088577270508,-4.129897594451904,-6.464160442352295,-10.67428970336914,-11.74095344543457,-29.818239212036133,-9.949090957641602,14.064677238464355,-11.661718368530273,-17.96122169494629,-8.778017044067383,7.151120662689209,6.170997142791748,17.237625122070312,-13.253113746643066,-2.783517360687256,-1.137145757675171,19.03800392150879,6.823347568511963,5.213339328765869,-10.607091903686523,14.074762344360352,-0.6783980131149292,-9.614818572998047,18.791410446166992,-5.978670597076416,-4.944258689880371,13.997309684753418,13.976668357849121,0.27274492383003235,5.745492458343506,-3.9841501712799072,2.132979393005371,-7.149820327758789,-3.0569300651550293,21.908775329589844,-18.02158546447754,-18.71469497680664,8.89277458190918,-8.900337219238281,5.620690822601318,18.291532516479492,9.879691123962402,-18.942514419555664,7.962490081787109,-15.109335899353027,3.0252628326416016,-9.346360206604004,-5.011382102966309,-0.9692913889884949,-11.609484672546387,-11.1359281539917,10.681159973144531,-2.8649208545684814,11.597264289855957,7.740995407104492,2.6298482418060303,8.03575611114502,5.136311054229736,-0.14114737510681152,-5.495811939239502,2.700754404067993,-8.508589744567871,0.4618074297904968,23.521312713623047,17.405132293701172,18.678041458129883,-15.407540321350098,2.621262788772583,-0.6120052933692932,-14.620402336120605,-2.175276756286621,-4.354940414428711,9.444768905639648,-3.380033016204834,-6.724148273468018,-0.0759720504283905,4.113358020782471,-5.059154987335205,-6.2382001876831055,-10.967405319213867,-14.656952857971191,-11.832072257995605,-8.728348731994629,-8.748201370239258,-4.442093372344971,-3.822603464126587,-2.3053717613220215,-7.938995361328125,-19.352331161499023,17.07795524597168,-11.614364624023438,7.125986099243164,19.126131057739258,6.699899673461914,-27.348276138305664,2.971109390258789,22.99612045288086,-15.44710922241211,6.3225860595703125,-6.2450785636901855,0.25986331701278687,9.055012702941895,-8.39706039428711,25.768699645996094,23.31833267211914,-34.84300231933594,-2.1314470767974854,15.526144981384277,22.107919692993164,8.992594718933105,-2.9224791526794434,3.063101053237915,-0.13852046430110931,1.814147710800171,12.727741241455078,5.721237659454346,9.372900009155273,-3.918750286102295,0.7443835139274597,-34.92464065551758,-12.483202934265137,-10.051776885986328,-19.358314514160156,20.86876106262207,-22.86096954345703,-5.866597652435303,6.259448528289795,1.8422458171844482,12.366860389709473,-5.5428290367126465,4.529839515686035,-7.926410675048828,1.374440312385559,-3.7881927490234375,-11.288164138793945,-13.957581520080566,-11.639371871948242,13.554932594299316,-9.95038890838623,3.864426374435425,-10.020166397094727,8.449925422668457,-14.129837989807129,3.0004186630249023,-15.770841598510742,-3.1798338890075684,0.2369329184293747,-13.073853492736816,-11.935226440429688,-24.82223129272461,-1.563198447227478,-9.623417854309082,3.3935439586639404,3.0492563247680664,-8.942880630493164,-12.054800033569336,-15.683586120605469,-31.471330642700195,-5.169205665588379,-6.704866886138916,4.891091823577881,10.597662925720215,-4.2434844970703125,-16.91957664489746,5.9462456703186035,15.863808631896973,4.8730010986328125,8.472014427185059,-12.73868465423584,-14.264892578125,3.683983087539673,6.7381415367126465,-31.036022186279297,-8.225228309631348,-4.006359100341797,-4.699901103973389,1.0087809562683105,12.501523971557617,20.730546951293945,-3.0490334033966064,2.4695332050323486,-2.8368284702301025,-0.505013644695282,3.8142495155334473,4.939719200134277,3.7775681018829346,3.7414255142211914,3.202951192855835,-9.309935569763184,-5.567951679229736,3.9473495483398438,-31.286304473876953,5.570656776428223,10.501975059509277,1.7961903810501099,6.8725996017456055,1.489130973815918,4.319687843322754,13.873117446899414,11.560132026672363,-9.30514144897461,-12.666168212890625,19.0998592376709,3.2567930221557617,-25.749269485473633,-3.7437469959259033,17.18927764892578,1.076859474182129,4.268521785736084,-0.8986197113990784,-13.41157341003418,-10.817544937133789,-2.3051154613494873,2.2216169834136963,-3.288778305053711,22.190122604370117,3.232985019683838,10.871790885925293,0.6380372643470764,-36.31442642211914,-34.7442741394043,10.937981605529785,13.596236228942871,8.621200561523438,17.04225730895996,6.998098850250244,9.180712699890137,18.274642944335938,-19.2191162109375,18.210691452026367,7.648937225341797,2.0623157024383545,17.064680099487305,14.939743995666504,1.4116417169570923,16.3503360748291,-18.260225296020508,-2.283233165740967,5.557698726654053,13.991071701049805,4.153440952301025,-28.761003494262695,-1.9295328855514526,13.450933456420898,-4.953728675842285,-34.47400665283203,-7.5703020095825195,-6.12314510345459,-10.254643440246582,-6.272034168243408,12.489208221435547,-17.13217544555664,7.0286126136779785,-5.84573221206665,9.971683502197266,2.3296802043914795,7.280389308929443,-3.1763722896575928,6.788478851318359,6.2472991943359375,-14.869107246398926,12.43117904663086,7.523341178894043,-16.840255737304688,-3.0608575344085693,-5.41387939453125,-5.704718589782715,6.796475410461426,-3.9868662357330322,-22.809188842773438,-7.6717939376831055,11.527044296264648,19.937740325927734,-0.556368887424469,11.332502365112305,7.789185047149658,19.770530700683594,6.193856239318848,6.938877582550049,-0.148650124669075,4.8755974769592285,9.213102340698242,13.206632614135742,6.895991325378418,-11.759543418884277,23.284120559692383,5.028973579406738,-0.2024528831243515,-21.695032119750977,-11.31196403503418,-7.165976524353027,-5.192286968231201,-9.87672233581543,-10.937255859375,-9.96731948852539,-17.912324905395508,8.253631591796875,10.40384292602539,-7.732378959655762,8.02656364440918,2.564934492111206,-8.03460693359375,-21.379674911499023,-10.093243598937988,-12.92836856842041,-10.268098831176758,-7.647658824920654,5.964242935180664,1.973317265510559,4.346703052520752,-10.743956565856934,14.993741035461426,-9.042054176330566,-7.143232822418213,2.5615856647491455,-9.476320266723633,9.61794662475586,-0.045404188334941864,10.280941009521484,8.128070831298828,-9.189854621887207,2.551736831665039,-11.720902442932129,-9.834100723266602,-15.187209129333496,-1.2757039070129395,0.23894228041172028,-2.054452896118164,-11.608046531677246,-1.1179859638214111,-6.7777628898620605,-15.499248504638672,-4.704193592071533,-18.54213523864746,8.364255905151367,-12.230941772460938,-8.807920455932617,-5.477491855621338,6.890806198120117,5.462827205657959,17.965356826782227,15.6201753616333,19.510221481323242,2.654151439666748,1.4303053617477417,-16.404247283935547,10.49242115020752,-7.965883255004883,-2.783599376678467,-8.398275375366211,-6.994898319244385,-4.148665428161621,-10.036161422729492,-8.092596054077148,4.042974948883057,2.1490886211395264,4.273478031158447,-1.9537663459777832,-30.354150772094727,-16.115650177001953,-2.695274591445923,-8.872188568115234,-4.54056453704834,-16.395267486572266,-2.0968401432037354,-14.101202964782715,-8.30631160736084,0.9792383909225464,-4.476498603820801,-17.54633903503418,-6.384254455566406,-16.864933013916016,-34.13508605957031,22.360471725463867,11.471060752868652,7.435598373413086,-17.28465461730957,9.020325660705566,-13.914420127868652,-3.9696786403656006,6.919409275054932,-14.079811096191406,-13.573262214660645,-14.711126327514648,-1.0801522731781006,8.525272369384766,20.543197631835938,1.8989485502243042,-13.719714164733887,20.217119216918945,-8.556385040283203,-10.974246978759766,1.5117368698120117,12.333492279052734,-18.26407814025879,2.322589635848999,6.715798854827881,-0.2344338744878769,-2.454366445541382,4.543087959289551,-0.8298287987709045,-20.282224655151367,-19.571229934692383,6.683881759643555,-3.363574504852295,-0.105797179043293,7.983386516571045,3.905694007873535,12.466965675354004,10.173078536987305,8.988958358764648,-10.401042938232422,-9.843469619750977,14.844324111938477,-14.02368450164795,-0.39455392956733704,6.093752861022949,18.832914352416992,-4.371832847595215,-19.48796272277832,-5.45412015914917,8.97811508178711,0.11271287500858307,12.167259216308594,-3.8631937503814697,12.932462692260742,2.872509479522705,6.468239784240723,-0.7695342898368835,-4.216501712799072],\"yaxis\":\"y\",\"type\":\"scattergl\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"x\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"y\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"color\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('db49b51e-a9bb-4c43-b080-577ab4a30718');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["fig.write_html(\"trimap_viz.html\")"],"metadata":{"id":"NaufM7YA6Cat","executionInfo":{"status":"ok","timestamp":1700402851590,"user_tz":-180,"elapsed":557,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["В следующих частях домашнего задания вам понадобится train-test-dev разбиение. Авторы статей предлагают следующую структуру разбиения: обучающее множество – 80 книг, валидационное – 10 книг, тестовое – 10 книг. Предложения из одного источника не должны попадать в разные сегменты разбиения."],"metadata":{"id":"yaqzbbe02yBe"}},{"cell_type":"markdown","source":["## Часть 2. [3 балла] Извлечение именованных сущностей\n","1. Обучите стандартную модель для извлечения именованных сущностей, CNN-BiLSTM-CRF, для извлечения именованных *низкоуровневых именованных сущностей*, т.е. для самых коротких из вложенных сущностей.\n","Модель устроена так: сверточная сеть на символах + эмбеддинги слов + двунаправленная LSTM сеть (модель последовательности) + CRF (глобальная нормализация).\n","2. Замените часть модели на символах и словах (CNN + эмбеддинги словах) на ELMo и / или BERT. Должна получиться модель ELMo / BERT + BiLSTM + CRF.\n","3. Замените модель последовательности (BiLSTM) на другой слой, например, на Transformer. Должна получиться модель CNN  + Transformer + CRF.\n","\n","[бонус] Дообучите BERT для извлечения именованных сущностей.\n","\n","[бонус] Используйте модель для извлечения вложенных именованных сущностей [Ju et al., 2018]\n","\n","[бонус] Модифицируйте модель для извлечения вложенных именованных сущностей [Ju et al., 2018]: вместо эмбеддингов слов используйте ELMo и/или BERT."],"metadata":{"id":"16HzSJ0r2yBe"}},{"cell_type":"code","source":["!git clone https://github.com/dbamman/litbank.git"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:51:32.737052Z","iopub.execute_input":"2023-11-18T19:51:32.737477Z","iopub.status.idle":"2023-11-18T19:51:36.497710Z","shell.execute_reply.started":"2023-11-18T19:51:32.737442Z","shell.execute_reply":"2023-11-18T19:51:36.496274Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"qTOe_Hd02yBe","executionInfo":{"status":"ok","timestamp":1700420384996,"user_tz":-180,"elapsed":3139,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"34b824e6-ab86-44c6-f279-4f654f356fa1"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'litbank'...\n","remote: Enumerating objects: 1187, done.\u001b[K\n","remote: Counting objects: 100% (38/38), done.\u001b[K\n","remote: Compressing objects: 100% (16/16), done.\u001b[K\n","remote: Total 1187 (delta 26), reused 22 (delta 22), pack-reused 1149\u001b[K\n","Receiving objects: 100% (1187/1187), 40.65 MiB | 22.73 MiB/s, done.\n","Resolving deltas: 100% (152/152), done.\n"]}]},{"cell_type":"code","source":["!ls litbank/"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:51:36.499976Z","iopub.execute_input":"2023-11-18T19:51:36.500295Z","iopub.status.idle":"2023-11-18T19:51:37.488836Z","shell.execute_reply.started":"2023-11-18T19:51:36.500258Z","shell.execute_reply":"2023-11-18T19:51:37.487601Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"QeGfz64c2yBe","executionInfo":{"status":"ok","timestamp":1700407853149,"user_tz":-180,"elapsed":8,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"65d7f249-48df-420c-c232-d94e68d852be"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["coref  entities  events  img  original\tquotations  README.md  tagger\n"]}]},{"cell_type":"markdown","source":["### Собираем датасет"],"metadata":{"id":"5AJ4KACD2yBf"}},{"cell_type":"code","source":["entities_files= os.listdir(\"litbank/entities/tsv/\")\n","events_files = os.listdir(\"litbank/events/tsv/\")\n","\n","def make_df_from_source(files, dir):\n","    res = []\n","    for entities_file in entities_files:\n","        res.append(file_to_sentences(dir + entities_file))\n","\n","    return res\n","\n","def file_to_sentences(file):\n","    sentence = []\n","    text = []\n","    with open(file, \"r\") as f:\n","        lines = f.readlines()\n","        for word in lines:\n","            word = word.split()\n","            if len(word) != 0:\n","                sentence.append((word[0], word[1]))\n","            else:\n","                text.append(sentence)\n","                sentence = []\n","    return text"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:51:59.598545Z","iopub.execute_input":"2023-11-18T19:51:59.598963Z","iopub.status.idle":"2023-11-18T19:51:59.607718Z","shell.execute_reply.started":"2023-11-18T19:51:59.598922Z","shell.execute_reply":"2023-11-18T19:51:59.606748Z"},"trusted":true,"id":"2z-I1Kb-2yBf","executionInfo":{"status":"ok","timestamp":1700420384996,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["entities_text_list = make_df_from_source(entities_files, \"litbank/entities/tsv/\")\n","entities_text_list[0][0]"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:02.491004Z","iopub.execute_input":"2023-11-18T19:52:02.491390Z","iopub.status.idle":"2023-11-18T19:52:02.698824Z","shell.execute_reply.started":"2023-11-18T19:52:02.491362Z","shell.execute_reply":"2023-11-18T19:52:02.697847Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"rnkHA_vU2yBf","executionInfo":{"status":"ok","timestamp":1700407853149,"user_tz":-180,"elapsed":5,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"39e755a6-6991-4998-871e-1eddc2902fba"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('CHAPTER', 'O'),\n"," ('1', 'O'),\n"," ('The', 'B-PER'),\n"," ('Rassendylls', 'I-PER'),\n"," ('--', 'O'),\n"," ('With', 'O'),\n"," ('a', 'O'),\n"," ('Word', 'O'),\n"," ('on', 'O'),\n"," ('the', 'B-PER'),\n"," ('Elphbergs', 'I-PER'),\n"," ('“', 'O'),\n"," ('I', 'O'),\n"," ('wonder', 'O'),\n"," ('when', 'O'),\n"," ('in', 'O'),\n"," ('the', 'B-LOC'),\n"," ('world', 'I-LOC'),\n"," ('you', 'O'),\n"," ('’re', 'O'),\n"," ('going', 'O'),\n"," ('to', 'O'),\n"," ('do', 'O'),\n"," ('anything', 'O'),\n"," (',', 'O'),\n"," ('Rudolf', 'B-PER'),\n"," ('?', 'O'),\n"," ('”', 'O'),\n"," ('said', 'O'),\n"," ('my', 'B-PER'),\n"," ('brother', 'I-PER'),\n"," ('’s', 'O'),\n"," ('wife', 'O'),\n"," ('.', 'O')]"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["len(entities_text_list)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:04.364409Z","iopub.execute_input":"2023-11-18T19:52:04.364771Z","iopub.status.idle":"2023-11-18T19:52:04.370843Z","shell.execute_reply.started":"2023-11-18T19:52:04.364741Z","shell.execute_reply":"2023-11-18T19:52:04.369829Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"1izu3eQj2yBf","executionInfo":{"status":"ok","timestamp":1700407860273,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"945722c6-4861-46c4-80fe-c79fb3df4d07"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["train_entities = entities_text_list[:80]\n","val_entities = entities_text_list[80:90]\n","test_entities = entities_text_list[90:]"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:05.237872Z","iopub.execute_input":"2023-11-18T19:52:05.238780Z","iopub.status.idle":"2023-11-18T19:52:05.243239Z","shell.execute_reply.started":"2023-11-18T19:52:05.238745Z","shell.execute_reply":"2023-11-18T19:52:05.242257Z"},"trusted":true,"id":"gL7umdFx2yBf","executionInfo":{"status":"ok","timestamp":1700407863720,"user_tz":-180,"elapsed":433,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":[" train_entities[0][0]"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:08.157684Z","iopub.execute_input":"2023-11-18T19:52:08.158731Z","iopub.status.idle":"2023-11-18T19:52:08.165823Z","shell.execute_reply.started":"2023-11-18T19:52:08.158694Z","shell.execute_reply":"2023-11-18T19:52:08.164969Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"GJTb5g5J2yBf","executionInfo":{"status":"ok","timestamp":1700407865947,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"8f18698a-3295-44ed-a039-cf5c174386ef"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('CHAPTER', 'O'),\n"," ('1', 'O'),\n"," ('The', 'B-PER'),\n"," ('Rassendylls', 'I-PER'),\n"," ('--', 'O'),\n"," ('With', 'O'),\n"," ('a', 'O'),\n"," ('Word', 'O'),\n"," ('on', 'O'),\n"," ('the', 'B-PER'),\n"," ('Elphbergs', 'I-PER'),\n"," ('“', 'O'),\n"," ('I', 'O'),\n"," ('wonder', 'O'),\n"," ('when', 'O'),\n"," ('in', 'O'),\n"," ('the', 'B-LOC'),\n"," ('world', 'I-LOC'),\n"," ('you', 'O'),\n"," ('’re', 'O'),\n"," ('going', 'O'),\n"," ('to', 'O'),\n"," ('do', 'O'),\n"," ('anything', 'O'),\n"," (',', 'O'),\n"," ('Rudolf', 'B-PER'),\n"," ('?', 'O'),\n"," ('”', 'O'),\n"," ('said', 'O'),\n"," ('my', 'B-PER'),\n"," ('brother', 'I-PER'),\n"," ('’s', 'O'),\n"," ('wife', 'O'),\n"," ('.', 'O')]"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["def get_df(entities_list):\n","    result_dict = {'text':[],\n","                   'entity':[],\n","                   'binary':[]}\n","    for text in entities_list:\n","        for sequence in text:\n","            result_dict['text'].append(\" \".join([i[0] for i in sequence]))\n","            result_dict['entity'].append([i[1] for i in sequence])\n","            result_dict['binary'].append([0 if i[1]=='O' else 1 for i in sequence])\n","    result_df = pd.DataFrame(result_dict)\n","    return result_df\n","\n","train_df = get_df(train_entities)\n","val_df = get_df(val_entities)\n","test_df = get_df(test_entities)\n","\n","print(len(train_df), len(val_df), len(test_df))\n","display(train_df.head())"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:09.880793Z","iopub.execute_input":"2023-11-18T19:52:09.881645Z","iopub.status.idle":"2023-11-18T19:52:09.991094Z","shell.execute_reply.started":"2023-11-18T19:52:09.881609Z","shell.execute_reply":"2023-11-18T19:52:09.990215Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"2vVdT9zS2yBf","executionInfo":{"status":"ok","timestamp":1700407867353,"user_tz":-180,"elapsed":6,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"284b0aae-d71a-412d-e977-493032c35aca"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["6863 810 889\n"]},{"output_type":"display_data","data":{"text/plain":["                                                text  \\\n","0  CHAPTER 1 The Rassendylls -- With a Word on th...   \n","1  “ My dear Rose , ” I answered , laying down my...   \n","2                 My position is a comfortable one .   \n","3  I have an income nearly sufficient for my want...   \n","4                          Behold , it is enough ! ”   \n","\n","                                              entity  \\\n","0  [O, O, B-PER, I-PER, O, O, O, O, O, B-PER, I-P...   \n","1  [O, B-PER, I-PER, B-PER, O, O, O, O, O, O, O, ...   \n","2                              [O, O, O, O, O, O, O]   \n","3  [O, O, O, O, O, O, O, O, O, O, B-PER, I-PER, O...   \n","4                              [O, O, O, O, O, O, O]   \n","\n","                                              binary  \n","0  [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, ...  \n","1  [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","2                              [0, 0, 0, 0, 0, 0, 0]  \n","3  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, ...  \n","4                              [0, 0, 0, 0, 0, 0, 0]  "],"text/html":["\n","  <div id=\"df-f7c45f2e-cae9-40a7-94fc-8cd59aabfc6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>entity</th>\n","      <th>binary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHAPTER 1 The Rassendylls -- With a Word on th...</td>\n","      <td>[O, O, B-PER, I-PER, O, O, O, O, O, B-PER, I-P...</td>\n","      <td>[0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>“ My dear Rose , ” I answered , laying down my...</td>\n","      <td>[O, B-PER, I-PER, B-PER, O, O, O, O, O, O, O, ...</td>\n","      <td>[0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>My position is a comfortable one .</td>\n","      <td>[O, O, O, O, O, O, O]</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>I have an income nearly sufficient for my want...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, B-PER, I-PER, O...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Behold , it is enough ! ”</td>\n","      <td>[O, O, O, O, O, O, O]</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7c45f2e-cae9-40a7-94fc-8cd59aabfc6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7c45f2e-cae9-40a7-94fc-8cd59aabfc6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7c45f2e-cae9-40a7-94fc-8cd59aabfc6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-72ddf6d9-072b-44b8-832c-d1386d95b0d8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72ddf6d9-072b-44b8-832c-d1386d95b0d8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-72ddf6d9-072b-44b8-832c-d1386d95b0d8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}}]},{"cell_type":"markdown","source":["### I часть [CNN + biLSTM + CRF]"],"metadata":{"id":"TrmCjL9R-JnJ"}},{"cell_type":"markdown","source":["#### Архитектура модели"],"metadata":{"id":"EO8ZeeeG2yBf"}},{"cell_type":"code","source":["class CharCNN(nn.Module):\n","\n","    def __init__(self, vocab_size, embedding_dim, n_filters, kernel_size, output_dim, dropout):\n","        super().__init__()\n","        self.embedding = nn.Embedding(vocab_size, embedding_dim)\n","        self.conv1 = nn.Conv1d(in_channels=embedding_dim,\n","                                     out_channels=n_filters,\n","                                     kernel_size = kernel_size,\n","                                     padding=2,\n","                               )\n","\n","        self.fc = nn.Linear(n_filters, output_dim)\n","        self.dropout = nn.Dropout(dropout)\n","\n","    def forward(self, x):\n","\n","        #x = [bs, len_word]\n","\n","        embedded = self.embedding(x)\n","        #embedded = [bs, len_word, emb_dim]\n","\n","        embedded = embedded.permute(0, 2, 1)\n","        #embedded = [bs, emb_dim, len_word]\n","\n","        conv1 = F.relu(self.conv1(embedded))\n","        #conv1 = [bs, n_filters, len_s + 2 - kernel_size + 1]\n","\n","        pooled1 = self.dropout(F.max_pool1d(conv1, conv1.shape[2]).squeeze(2))\n","        #pooled1 = [bs, n_filters]\n","\n","        return self.fc(pooled1) # [bs, output_dim]"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:12.250310Z","iopub.execute_input":"2023-11-18T19:52:12.251267Z","iopub.status.idle":"2023-11-18T19:52:12.259085Z","shell.execute_reply.started":"2023-11-18T19:52:12.251229Z","shell.execute_reply":"2023-11-18T19:52:12.258166Z"},"trusted":true,"id":"RUnghQ4_2yBf","executionInfo":{"status":"ok","timestamp":1700407871150,"user_tz":-180,"elapsed":409,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["class CNNbiLSTMCRF(nn.Module):\n","\n","    def __init__(self, vocab_size, char_vocab_size, output_dim,\n","                 embedding_dim=100, char_embedding_dim=10, char_output_dim=50,\n","                 hidden_size=50, num_layers=1, dropout=0.5):\n","        super().__init__()\n","        self.embedding = nn.Embedding(vocab_size, embedding_dim)\n","\n","        self.cnn_char = CharCNN(vocab_size=char_vocab_size,\n","                            embedding_dim=char_embedding_dim,\n","                            n_filters=10,\n","                            kernel_size=3,\n","                            output_dim=char_output_dim,\n","                            dropout=0.2)\n","        self.bilstm = nn.LSTM(input_size=embedding_dim + char_output_dim,\n","                              hidden_size = hidden_size,\n","                              num_layers = num_layers,\n","                              batch_first = True,\n","                              bidirectional=True)\n","\n","        self.fc = nn.Linear(in_features=hidden_size * (1 + self.bilstm.bidirectional), out_features=output_dim)\n","\n","        self.dropout = nn.Dropout(dropout)\n","\n","        self.crf = CRF(num_tags=output_dim)\n","\n","    def forward_wo_crf(self, text_input, char_input):\n","        #text_input = [bs, len_sent]\n","        #char_input = [bs, len_sent, len_word]\n","        char_embedes= []\n","        bs, len_sent = text_input.shape\n","\n","        for i in range(char_input.shape[1]):\n","            #i-th word in sent\n","            char_embedes.append(self.cnn_char(char_input[:, i, :]).unsqueeze(1)) #[bs, 1, char_emb]\n","        char_embedded = torch.cat(char_embedes, dim=1)\n","        #char_embedded = [bs, len_s, char_emb]\n","\n","        word_embedded = self.embedding(text_input)\n","        #word_embedded = [bs, len_s, word_emb]\n","\n","        input = torch.cat([char_embedded, word_embedded], dim=2)\n","        #input = [bs, len_s, word_emb + char_emb]\n","\n","        output, hidden = self.bilstm(input)\n","        #output = [bs, seq_len,  num_directions * hidden_size]\n","        #hidden = [num_layers*num_directions, bs, hidden_size]\n","\n","        output = self.dropout(self.fc(output))\n","        #output = [bs, seq_len, output_dim]\n","\n","        return output\n","\n","    def forward(self, output, tags, mask=None):\n","        #output = [bs, seq_len, output_dim]\n","        #tags = [bs, seq_len]\n","\n","        output = output.permute(1, 0, 2)\n","        #output = [seq_len, bs, output_dim]\n","        if type(mask) == type(None):\n","            mask = torch.ones(tags.shape, dtype=torch.uint8)\n","\n","        tags = tags.permute(1, 0)\n","        mask = mask.permute(1, 0)\n","        #tags = [seq_len, bs]\n","\n","        loss = self.crf(output, tags, mask)\n","\n","        return -loss"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:13.226522Z","iopub.execute_input":"2023-11-18T19:52:13.226943Z","iopub.status.idle":"2023-11-18T19:52:13.241414Z","shell.execute_reply.started":"2023-11-18T19:52:13.226906Z","shell.execute_reply":"2023-11-18T19:52:13.240396Z"},"trusted":true,"id":"ZxMdKj-O2yBg","executionInfo":{"status":"ok","timestamp":1700407872839,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["#### Датасет и даталоадер для модели"],"metadata":{"id":"UWlFUUVG2yBj"}},{"cell_type":"code","source":["COMMON_TOKENS = [\"PAD\", \"SOS\", \"EOS\", \"UNK\"]\n","\n","def build_vocab(sents, tokinize, max_size=10000):\n","    word_counter = defaultdict(int)\n","    for sent in sents:\n","        for word in tokinize(sent):\n","            word_counter[word] += 1\n","\n","    tokens = COMMON_TOKENS + [tok for tok, _ in sorted(word_counter.items(), key=lambda x: -x[1])]\n","    tokens = tokens[:max_size]\n","\n","    tok2idx = {tok : i for i, tok in enumerate(tokens)}\n","    idx2tok = {i : tok for tok, i in tok2idx.items()}\n","\n","    return tok2idx, idx2tok\n","\n","def default_tokenizer(sent):\n","    return sent.split()\n","\n","\n","def sentence2idx(sent, tok2idx, preprocess, tokenize):\n","    tokens = tokenize(preprocess(sent))\n","    unk = tok2idx[\"UNK\"]\n","    return [tok2idx.get(tok, unk) for tok in tokens]\n","    #[tok2idx[\"SOS\"]] + [tok2idx.get(tok, unk) for tok in tokens] + [tok2idx[\"EOS\"]]\n","\n","\n","def idx2sentence(sent, idx2tok):\n","    return \" \".join(idx2tok[idx] for idx in sent)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:15.730420Z","iopub.execute_input":"2023-11-18T19:52:15.730773Z","iopub.status.idle":"2023-11-18T19:52:15.741045Z","shell.execute_reply.started":"2023-11-18T19:52:15.730743Z","shell.execute_reply":"2023-11-18T19:52:15.740177Z"},"trusted":true,"id":"cVPRvEMO2yBk","executionInfo":{"status":"ok","timestamp":1700407874570,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["dict_lookup, dict_lookup_reverse = build_vocab(train_df[\"text\"], default_tokenizer, max_size=25000)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:16.647984Z","iopub.execute_input":"2023-11-18T19:52:16.648941Z","iopub.status.idle":"2023-11-18T19:52:16.724208Z","shell.execute_reply.started":"2023-11-18T19:52:16.648906Z","shell.execute_reply":"2023-11-18T19:52:16.723334Z"},"trusted":true,"id":"ogXBUkWV2yBk","executionInfo":{"status":"ok","timestamp":1700407876619,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["char2idx, idx2char = build_vocab(train_df[\"text\"], lambda x: list(x))"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:17.438909Z","iopub.execute_input":"2023-11-18T19:52:17.439260Z","iopub.status.idle":"2023-11-18T19:52:17.546930Z","shell.execute_reply.started":"2023-11-18T19:52:17.439229Z","shell.execute_reply":"2023-11-18T19:52:17.546005Z"},"trusted":true,"id":"ZFkUmvhJ2yBk","executionInfo":{"status":"ok","timestamp":1700407877374,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["a = sentence2idx(train_df[\"text\"][0], dict_lookup, lambda x: x, lambda x: x.split())\n","print(a)\n","print(idx2sentence(a, dict_lookup_reverse))"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:18.396091Z","iopub.execute_input":"2023-11-18T19:52:18.396890Z","iopub.status.idle":"2023-11-18T19:52:18.402677Z","shell.execute_reply.started":"2023-11-18T19:52:18.396839Z","shell.execute_reply":"2023-11-18T19:52:18.401591Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"OEfDplgb2yBk","executionInfo":{"status":"ok","timestamp":1700403230738,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"60e6c4c3-fa27-40c7-eef0-447539e8087d"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["[375, 843, 44, 3056, 29, 699, 9, 7512, 28, 5, 3057, 32, 12, 647, 63, 11, 5, 188, 31, 1679, 180, 10, 71, 325, 4, 1178, 51, 33, 55, 30, 559, 123, 268, 6]\n","CHAPTER 1 The Rassendylls -- With a Word on the Elphbergs “ I wonder when in the world you ’re going to do anything , Rudolf ? ” said my brother ’s wife .\n"]}]},{"cell_type":"code","source":["ent2idx = {ann : idx  for idx, ann in enumerate(set([i for ann in train_df[\"entity\"] for i in ann]))}\n","idx2ent = {idx : ent for ent, idx in ent2idx.items()}"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:19.200914Z","iopub.execute_input":"2023-11-18T19:52:19.201775Z","iopub.status.idle":"2023-11-18T19:52:19.220157Z","shell.execute_reply.started":"2023-11-18T19:52:19.201745Z","shell.execute_reply":"2023-11-18T19:52:19.219065Z"},"trusted":true,"id":"LpJrXkSm2yBk","executionInfo":{"status":"ok","timestamp":1700407878986,"user_tz":-180,"elapsed":1,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["from collections import Counter\n","c = Counter()\n","for sent in train_df[\"entity\"]:\n","    c += Counter(sent)\n","c"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:20.156065Z","iopub.execute_input":"2023-11-18T19:52:20.156415Z","iopub.status.idle":"2023-11-18T19:52:20.213145Z","shell.execute_reply.started":"2023-11-18T19:52:20.156387Z","shell.execute_reply":"2023-11-18T19:52:20.212191Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"p8rFJ5lN2yBk","executionInfo":{"status":"ok","timestamp":1700403233606,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"c731bbb9-c0fe-498f-d4d7-9121ef4a8449"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Counter({'O': 146387,\n","         'B-PER': 6333,\n","         'I-PER': 9200,\n","         'B-LOC': 769,\n","         'I-LOC': 1196,\n","         'B-GPE': 614,\n","         'B-FAC': 1432,\n","         'I-FAC': 2140,\n","         'I-GPE': 429,\n","         'B-ORG': 77,\n","         'I-ORG': 149,\n","         'B-VEH': 142,\n","         'I-VEH': 204})"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["class NewDataset(Dataset):\n","    def __init__(self, text, target):\n","        self.text = text\n","        self.target = target\n","\n","    def __len__(self):\n","        return len(self.target)\n","\n","    def __getitem__(self, item):\n","        x = sentence2idx(self.text[item], dict_lookup, lambda x: x, lambda x: x.split())\n","        y = [ent2idx[ent] for ent in self.target[item]]\n","        char = [sentence2idx(word, char2idx, lambda x: x, lambda x: list(x)) for word in self.text[item].lower().split()]\n","        return {\"text\" : x, \"target\" : y, \"char\":char}"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:21.014457Z","iopub.execute_input":"2023-11-18T19:52:21.014840Z","iopub.status.idle":"2023-11-18T19:52:21.022200Z","shell.execute_reply.started":"2023-11-18T19:52:21.014811Z","shell.execute_reply":"2023-11-18T19:52:21.021305Z"},"trusted":true,"id":"0Ij2enjY2yBk","executionInfo":{"status":"ok","timestamp":1700407882012,"user_tz":-180,"elapsed":416,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["train_ds = NewDataset(train_df[\"text\"], train_df[\"entity\"])\n","valid_ds = NewDataset(val_df[\"text\"], val_df[\"entity\"])\n","test_ds = NewDataset(test_df[\"text\"], test_df[\"entity\"])"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:21.946739Z","iopub.execute_input":"2023-11-18T19:52:21.947595Z","iopub.status.idle":"2023-11-18T19:52:21.952516Z","shell.execute_reply.started":"2023-11-18T19:52:21.947559Z","shell.execute_reply":"2023-11-18T19:52:21.951667Z"},"trusted":true,"id":"Cp6fx-Yv2yBk","executionInfo":{"status":"ok","timestamp":1700407884851,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["def collate_fn(samples):\n","\n","    def _pad(lst_of_lst, pad, left=False, max_len=None, is_tensor=True):\n","        if not max_len:\n","            max_len = max(len(_) for _ in lst_of_lst)\n","\n","        if left:\n","            out = [[pad] * (max_len - len(lst)) + lst for lst in lst_of_lst]\n","            mask = [[0] * (max_len - len(lst)) + len(lst) * [1] for lst in lst_of_lst]\n","        else:\n","            out = [lst + [pad] * (max_len - len(lst)) for lst in lst_of_lst]\n","            mask = [len(lst) * [1] + [0] * (max_len - len(lst)) for lst in lst_of_lst]\n","\n","        if is_tensor:\n","            return torch.tensor(out, dtype=torch.long), torch.tensor(mask, dtype=torch.uint8)\n","        else:\n","            return out, mask\n","\n","    target, mask = _pad([entry[\"target\"] for entry in samples], pad=13, left=False)\n","\n","    max_len_word = max([len(word) for entry in samples for word in entry[\"char\"]])\n","\n","\n","\n","\n","    return {\"text\" : _pad([entry[\"text\"] for entry in samples], pad=dict_lookup[\"PAD\"], left=False)[0],\n","            \"char\" : _pad([_pad(entry[\"char\"], pad=char2idx[\"PAD\"], max_len=max_len_word, is_tensor=False)[0] \\\n","                           for entry in samples],\\\n","                          pad=[char2idx[\"PAD\"]] * max_len_word, left=False)[0],\n","            \"target\" : target,\n","            \"mask\" : mask}"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:23.146754Z","iopub.execute_input":"2023-11-18T19:52:23.147220Z","iopub.status.idle":"2023-11-18T19:52:23.158694Z","shell.execute_reply.started":"2023-11-18T19:52:23.147190Z","shell.execute_reply":"2023-11-18T19:52:23.157625Z"},"trusted":true,"id":"kSDtu6kS2yBl","executionInfo":{"status":"ok","timestamp":1700407885825,"user_tz":-180,"elapsed":1,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["trainloader = DataLoader(train_ds, batch_size=64, shuffle=True, collate_fn=collate_fn)\n","testloader = DataLoader(test_ds, batch_size=64, shuffle=True, collate_fn=collate_fn)\n","validloader = DataLoader(valid_ds, batch_size=64, shuffle=True, collate_fn=collate_fn)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:24.171748Z","iopub.execute_input":"2023-11-18T19:52:24.172110Z","iopub.status.idle":"2023-11-18T19:52:24.178101Z","shell.execute_reply.started":"2023-11-18T19:52:24.172081Z","shell.execute_reply":"2023-11-18T19:52:24.177032Z"},"trusted":true,"id":"TY_u88jl2yBl","executionInfo":{"status":"ok","timestamp":1700407887535,"user_tz":-180,"elapsed":1,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["#### Трейнер"],"metadata":{"id":"SqRgnYw82yBl"}},{"cell_type":"code","source":["class ModelTrainer(ABC):\n","    def __init__(self, model, optimizer, metric,\n","                 loss_function=nn.CrossEntropyLoss(),\n","                 epochs=20):\n","        self.model = model\n","        self.optimizer = optimizer\n","        self.loss_function = loss_function\n","        self.epochs = epochs\n","        self.device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n","        self.logs = defaultdict(list)\n","        self.metric = metric\n","\n","    def get_metric(self, output, y):\n","        y, mask = y\n","        prediction = torch.tensor(self.model.crf.decode(output), dtype=torch.long, device=self.device).permute(1, 0)\n","        metric = self.metric(prediction, y, mask)\n","        return metric\n","\n","    def _train_epoch(self, dataloader):\n","        self.model.train()\n","\n","        for batch in dataloader:\n","            x = batch[\"text\"].to(self.device)\n","            y = batch[\"target\"].to(self.device)\n","            char = batch[\"char\"].to(self.device)\n","            mask = batch[\"mask\"].to(self.device)\n","\n","            output = self.model.forward_wo_crf(x, char)\n","\n","            loss = self.model(output, y, mask)\n","            metric = self.get_metric(output, (y, mask))\n","\n","            self.logs[\"loss\"].append(loss.item())\n","            self.logs[\"acc\"].append(metric)\n","\n","            self.optimizer.zero_grad()\n","            loss.backward()\n","            self.optimizer.step()\n","\n","    def validate(self, dataloader):\n","        self.model.eval()\n","        self.model.to(self.device)\n","        logs = defaultdict(list)\n","\n","        with torch.no_grad():\n","            for batch in dataloader:\n","                x = batch[\"text\"].to(self.device)\n","                y = batch[\"target\"].to(self.device)\n","                char = batch[\"char\"].to(self.device)\n","                mask = batch[\"mask\"].to(self.device)\n","\n","                output = self.model.forward_wo_crf(x, char)\n","\n","                loss = self.model(output, y, mask)\n","                metric = self.get_metric(output, (y, mask))\n","\n","                logs[\"loss\"].append(loss.item())\n","                logs[\"acc\"].append(metric)\n","\n","\n","        return {\"acc\" : [np.mean(logs[\"acc\"])], \"loss\" : [np.mean(logs[\"loss\"])]}\n","\n","    def fit(self, train_loader, val_loader=None,\n","            optimizer=None,\n","            loss_function=None,\n","            metric=None,\n","            ):\n","\n","        self.model.to(self.device)\n","        epoch = 0\n","        print(f\"{'Epoch':^7} | {'Val Loss':^9} | {'Val F1':^9}\")\n","        while (epoch < self.epochs):\n","            self._train_epoch(train_loader)\n","            #print(f\"{epoch + 1:^7} | {torch.mean(torch.tensor(self.logs['loss'], dtype=torch.float32))} | {torch.mean(torch.tensor(self.logs['acc'], dtype=torch.float32))}\")\n","\n","            if val_loader:\n","                val_logs = self.validate(val_loader)\n","                for k, v in val_logs.items():\n","                    self.logs[f'val_{k}'].extend(v)\n","                print(f\"{epoch + 1:^7} | {torch.mean(torch.tensor(val_logs['loss'], dtype=torch.float32)):.3f} | {torch.mean(torch.tensor(val_logs['acc'], dtype=torch.float32)):.5f}\")\n","\n","            self.logs['steps'].append(len(self.logs['loss']))\n","            epoch += 1"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:27.460968Z","iopub.execute_input":"2023-11-18T19:52:27.461303Z","iopub.status.idle":"2023-11-18T19:52:27.480969Z","shell.execute_reply.started":"2023-11-18T19:52:27.461275Z","shell.execute_reply":"2023-11-18T19:52:27.479901Z"},"trusted":true,"id":"tKDW1xbD2yBl","executionInfo":{"status":"ok","timestamp":1700407889590,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":["#### Обучаем модель"],"metadata":{"id":"UvrhrAve2yBl"}},{"cell_type":"code","source":["def f1(preds, y, mask):\n","    preds = preds.reshape(-1).cpu().numpy()\n","    y = y.reshape(-1).cpu().numpy()\n","    return f1_score(y, preds, average=\"macro\", labels=range(12))"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:21.930970Z","iopub.execute_input":"2023-11-18T20:03:21.931602Z","iopub.status.idle":"2023-11-18T20:03:21.936736Z","shell.execute_reply.started":"2023-11-18T20:03:21.931568Z","shell.execute_reply":"2023-11-18T20:03:21.935784Z"},"trusted":true,"id":"QN61K7br-XX-","executionInfo":{"status":"ok","timestamp":1700407933822,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["def f1_events(preds, y, mask):\n","    events_y = (y != ent2idx[\"O\"]) + (y == 13)\n","    events_pred = (preds != ent2idx[\"O\"]) + (preds == 13)\n","    preds = events_pred.reshape(-1).cpu().numpy()\n","    y = events_y.reshape(-1).cpu().numpy()\n","    return f1_score(y, preds, labels=[0, 1])"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:28.578952Z","iopub.execute_input":"2023-11-18T19:52:28.579615Z","iopub.status.idle":"2023-11-18T19:52:28.585728Z","shell.execute_reply.started":"2023-11-18T19:52:28.579582Z","shell.execute_reply":"2023-11-18T19:52:28.584654Z"},"trusted":true,"id":"1hBbRXof2yBm","executionInfo":{"status":"ok","timestamp":1700407952808,"user_tz":-180,"elapsed":685,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["embedds = []\n","for key in dict_lookup.keys():\n","    try:\n","        embedds.append(torch.tensor(word2vec_model[key]).reshape(1, -1))\n","    except KeyError:\n","        embedds.append(torch.tensor(np.zeros((1, 100))))\n","\n","\n","pretrain_embedding = torch.cat(embedds)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:29.202338Z","iopub.execute_input":"2023-11-18T19:52:29.202694Z","iopub.status.idle":"2023-11-18T19:52:29.615367Z","shell.execute_reply.started":"2023-11-18T19:52:29.202663Z","shell.execute_reply":"2023-11-18T19:52:29.614327Z"},"trusted":true,"id":"QPx44SIN2yBm","executionInfo":{"status":"ok","timestamp":1700407955124,"user_tz":-180,"elapsed":1360,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["model =  CNNbiLSTMCRF(len(dict_lookup), len(char2idx), len(ent2idx) + 1)\n","\n","model.embedding.weight.data.copy_(pretrain_embedding)\n","optimizer = optim.Adam(model.parameters())\n","\n","trainer = ModelTrainer(model, optimizer, metric=f1, epochs=10)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:52:58.333943Z","iopub.execute_input":"2023-11-18T19:52:58.334320Z","iopub.status.idle":"2023-11-18T19:52:58.421972Z","shell.execute_reply.started":"2023-11-18T19:52:58.334291Z","shell.execute_reply":"2023-11-18T19:52:58.421165Z"},"trusted":true,"id":"a6cOS1Vq2yBm","executionInfo":{"status":"ok","timestamp":1700407956679,"user_tz":-180,"elapsed":531,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["trainer.fit(trainloader, validloader)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T19:53:00.365957Z","iopub.execute_input":"2023-11-18T19:53:00.366326Z","iopub.status.idle":"2023-11-18T20:02:31.348890Z","shell.execute_reply.started":"2023-11-18T19:53:00.366296Z","shell.execute_reply":"2023-11-18T20:02:31.347564Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"KbUgLUSc2yBm","executionInfo":{"status":"ok","timestamp":1700408457627,"user_tz":-180,"elapsed":436123,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"fe676fe4-82a8-4de0-8864-c00566e2a027"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":[" Epoch  | Val Loss  |  Val F1  \n","   1    | 1056.913 | 0.04905\n","   2    | 856.571 | 0.11214\n","   3    | 668.949 | 0.12200\n","   4    | 602.260 | 0.12861\n","   5    | 549.265 | 0.14371\n","   6    | 552.331 | 0.17637\n","   7    | 514.650 | 0.12762\n","   8    | 507.641 | 0.15919\n","   9    | 504.647 | 0.13936\n","  10    | 508.098 | 0.16028\n"]}]},{"cell_type":"code","source":["trainer.validate(testloader)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:34.072115Z","iopub.execute_input":"2023-11-18T20:02:34.072452Z","iopub.status.idle":"2023-11-18T20:02:37.470825Z","shell.execute_reply.started":"2023-11-18T20:02:34.072425Z","shell.execute_reply":"2023-11-18T20:02:37.469864Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"frh1V7U42yBm","executionInfo":{"status":"ok","timestamp":1700408465655,"user_tz":-180,"elapsed":2535,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"1e9083cc-3a8e-4127-a0ee-48566340cedc"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'acc': [0.16623638361711093], 'loss': [429.5121743338449]}"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["it = iter(testloader)\n","b = next(it)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:40.423718Z","iopub.execute_input":"2023-11-18T20:02:40.424592Z","iopub.status.idle":"2023-11-18T20:02:40.452112Z","shell.execute_reply.started":"2023-11-18T20:02:40.424544Z","shell.execute_reply":"2023-11-18T20:02:40.451213Z"},"trusted":true,"id":"yavxXZSj2yBm","executionInfo":{"status":"ok","timestamp":1700408472622,"user_tz":-180,"elapsed":402,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["idx2ent"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:41.412742Z","iopub.execute_input":"2023-11-18T20:02:41.413143Z","iopub.status.idle":"2023-11-18T20:02:41.420107Z","shell.execute_reply.started":"2023-11-18T20:02:41.413111Z","shell.execute_reply":"2023-11-18T20:02:41.419118Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"1mblMbbE2yBm","executionInfo":{"status":"ok","timestamp":1700408474114,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"e9a2b5c8-8eb7-4aff-ae95-660806bdd7f8"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0: 'O',\n"," 1: 'I-PER',\n"," 2: 'B-PER',\n"," 3: 'B-LOC',\n"," 4: 'B-ORG',\n"," 5: 'B-GPE',\n"," 6: 'I-GPE',\n"," 7: 'I-LOC',\n"," 8: 'I-VEH',\n"," 9: 'I-FAC',\n"," 10: 'B-FAC',\n"," 11: 'I-ORG',\n"," 12: 'B-VEH'}"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["def predict(batch, model, device):\n","    x = batch[\"text\"].to(device)\n","    char = batch[\"char\"].to(device)\n","\n","    output = model.forward_wo_crf(x, char)\n","    prediction = torch.tensor(model.crf.decode(output), dtype=torch.long, device=device).permute(1, 0)\n","    return prediction\n","\n","#[idx2ent[i] for i in predict(b, model, device='cuda:0').cpu().numpy()[0] ]"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:41.832213Z","iopub.execute_input":"2023-11-18T20:02:41.832556Z","iopub.status.idle":"2023-11-18T20:02:42.581059Z","shell.execute_reply.started":"2023-11-18T20:02:41.832526Z","shell.execute_reply":"2023-11-18T20:02:42.579432Z"},"trusted":true,"id":"EA2vL6dv2yBm","executionInfo":{"status":"ok","timestamp":1700408476255,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["b = next(it)\n","print('target:', [idx2ent.get(i, \"pad\") for i in b[\"target\"][0].cpu().numpy()])\n","\n","a = predict(b, model, device='cuda:0').cpu().numpy()[0]\n","print('predict:', [idx2ent[i] for i in a])\n","\n","res = []\n","for word in b[\"char\"][0].numpy():\n","    res.append(\"\".join([idx2char.get(char) for char in word if char != char2idx[\"PAD\"]]))\n","print(\"text:\", \" \".join(res))"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:51.701253Z","iopub.execute_input":"2023-11-18T20:02:51.702142Z","iopub.status.idle":"2023-11-18T20:02:51.918619Z","shell.execute_reply.started":"2023-11-18T20:02:51.702107Z","shell.execute_reply":"2023-11-18T20:02:51.917043Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"eGJ8BI9p2yBm","executionInfo":{"status":"ok","timestamp":1700408478623,"user_tz":-180,"elapsed":433,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"a9407389-a878-488a-d8b7-6d71778d02d9"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["target: ['O', 'B-PER', 'I-PER', 'I-PER', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-PER', 'O', 'O', 'B-PER', 'I-PER', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-PER', 'I-PER', 'O', 'O', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad', 'pad']\n","predict: ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-PER', 'O', 'O', 'B-PER', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-PER', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']\n","text: as a young admirer had once said of him : \" if anybody can tell a fellow just when to wear a black tie with evening clothes and when not to , it 's larry lefferts . \"                                                   \n"]}]},{"cell_type":"markdown","source":["### II часть [BERT + BiLSTM + CRF]"],"metadata":{"id":"VAynlDRE7IEn"}},{"cell_type":"code","source":["PRE_TRAINED_MODEL_NAME = 'bert-base-cased'"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:57.563808Z","iopub.execute_input":"2023-11-18T20:02:57.564751Z","iopub.status.idle":"2023-11-18T20:02:57.568998Z","shell.execute_reply.started":"2023-11-18T20:02:57.564716Z","shell.execute_reply":"2023-11-18T20:02:57.567813Z"},"trusted":true,"id":"gimqmzUK-XX9","executionInfo":{"status":"ok","timestamp":1700404159129,"user_tz":-180,"elapsed":441,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["class BERT_BILSTM_CRF(nn.Module):\n","    def __init__(self, output_dim,\n","                 hidden_size=50, num_layers=1, ):\n","        super().__init__()\n","\n","        self.bert = BertModel.from_pretrained('bert-base-cased')\n","\n","\n","        self.bilstm = nn.GRU(input_size=self.bert.config.hidden_size,\n","                              hidden_size = hidden_size,\n","                              num_layers = num_layers,\n","                              batch_first = True,\n","                              bidirectional=True)\n","\n","        self.fc = nn.Linear(in_features=hidden_size * (1 + self.bilstm.bidirectional), out_features=output_dim)\n","\n","        self.crf = CRF(num_tags=output_dim)\n","\n","    def forward_wo_crf(self, input_ids, attention_mask):\n","        with torch.no_grad():\n","          temp = self.bert(\n","              input_ids=input_ids,\n","              attention_mask=attention_mask\n","              )\n","        input = temp[1]\n","\n","        output, hidden = self.bilstm(input)\n","        #output = [bs, seq_len,  num_directions * hidden_size]\n","        #hidden = [num_layers*num_directions, bs, hidden_size]\n","\n","        output = self.dropout(self.fc(output))\n","        #output = [bs, seq_len, output_dim]\n","\n","        return output\n","\n","    def forward(self, output, tags, mask=None):\n","        #output = [bs, seq_len,  output_dim]\n","        #tags = [bs, seq_len]\n","\n","        output = output.permute(1, 0, 2)\n","        #output = [seq_len, bs, output_dim]\n","        if type(mask) == type(None):\n","            mask = torch.ones(tags.shape, dtype=torch.uint8)\n","\n","        tags = tags.permute(1, 0)\n","        mask = mask.permute(1, 0)\n","        #tags = [seq_len, bs]\n","\n","        loss = self.crf(output, tags, mask)\n","\n","        return -loss"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:58.595093Z","iopub.execute_input":"2023-11-18T20:02:58.595470Z","iopub.status.idle":"2023-11-18T20:02:58.606155Z","shell.execute_reply.started":"2023-11-18T20:02:58.595439Z","shell.execute_reply":"2023-11-18T20:02:58.605074Z"},"trusted":true,"id":"9e-8zJTV-XX9","executionInfo":{"status":"ok","timestamp":1700404160611,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["tokenizer = BertTokenizer.from_pretrained(PRE_TRAINED_MODEL_NAME)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:59.966291Z","iopub.execute_input":"2023-11-18T20:02:59.966652Z","iopub.status.idle":"2023-11-18T20:03:01.138395Z","shell.execute_reply.started":"2023-11-18T20:02:59.966622Z","shell.execute_reply":"2023-11-18T20:03:01.137630Z"},"trusted":true,"colab":{"referenced_widgets":["ae8426db2f314dee991a5ea34c2d45ea","4aa30d4a7772471aa26bf2535d77ac6f","24d46f03ccef4df7b937ed8fb1f0ef99","fa68d6224b3c4f5694399129a4eb6b03","aa03fc864994409190e6ff6ef828a7f7","30cb3b0aa46d4feea78069f1ef81b7b6","2d885c90e800479d97160fc6fff37274","e062f984c7144c91b8f8464133fd60d6","9894262f4740482c91243249094f84e3","769bd6e235154ef0890c8d73e2c97948","658aca807a2541198834594c7cd6eb64","b3871fe019df499686202d58ff24fcb0","35516e4ae20a4fe7854eefecec943bb6","b68e448454ac4182b5d891750b7e030b","7b60dd2c9a004874aa4fbdb0b64654eb","560de0cb8b1d4c219717f6cb1a23d142","8d302f33afea4bf99e325604b00d0331","affe31781ee848908156c22ba993609c","2fe55209bd3c4d4d8d6f33c7338f084b","2723526ff3b440c896c1d0f3c97df416","2c30a8f7b7824e779c47552ed219e093","eabb3a3f952945e6adc10e1cd9f1a5fd","506804f0d286488ca7005ef3e34af3be","a08c4d53929046b498664ab9ecd79b59","5288da122c2748d3a73476a9f960b8a6","3f3e742209904d89b0b76526fa54329b","a28a3b4b793e4c9c8c3cc1fdf6d4d646","ba818901ec0a4514868e22d8db268b81","487710e4e8744c8f9852b78d056f67ab","5fe51ae4917d4579b2f4daf89397736b","1bbe29acdf1a422d8e3aa4c4eca8da4b","ebcbe0dc04e4440d817334454c6c801f","624d25db0c5f4b84bea30880a9ef7186","d4d5252fdf894eaeba976f06e8c32c46","4a443986579f4afea5838c26b938edbf","dfa934b32d78470baa8143620002b370","64898ef75e1b4c51bdf2a5a9fb4ccbc2","115690f1c94546ea9e376245c96a46dc","922fb4327b544af0a50a952c0544b4cb","80c772e934b04de7a1a971a524bb1dfa","dc3a0cd6790a4631acd045140cba9f10","56ef9c6bd29142c191fd26fee76404e1","c63c89851650423680d05a638ed49e7f","35e4de3f50554c818d55235050f4e66a"],"base_uri":"https://localhost:8080/","height":145},"outputId":"c5966a93-e4e4-47f3-b939-9a5c5bbe1aa3","id":"5i_bQ2V2-XX9","executionInfo":{"status":"ok","timestamp":1700404166235,"user_tz":-180,"elapsed":3252,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":80,"outputs":[{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/29.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ae8426db2f314dee991a5ea34c2d45ea"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/213k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b3871fe019df499686202d58ff24fcb0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/436k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"506804f0d286488ca7005ef3e34af3be"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d4d5252fdf894eaeba976f06e8c32c46"}},"metadata":{}}]},{"cell_type":"code","source":["bert = BertModel.from_pretrained(PRE_TRAINED_MODEL_NAME)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:01.148404Z","iopub.execute_input":"2023-11-18T20:03:01.149136Z","iopub.status.idle":"2023-11-18T20:03:04.370720Z","shell.execute_reply.started":"2023-11-18T20:03:01.149107Z","shell.execute_reply":"2023-11-18T20:03:04.369745Z"},"trusted":true,"colab":{"referenced_widgets":["d9e76bd0c48345919c44b311e1dd0993","85b641b4ba03459e9b45109c9342bc38","a1f06eddb7e24011b076f528a732af0f","2b32de6aac364276a8ff1d62c0fac29e","1b3299b4ff2d459896294ef80092baf9","d4ed5eb9dd3e43a789d8f78293568d0a","2b558759d4144613a50556b5b83179f2","3079acd0fd8b4997a0e6df02bd4556b7","a7e4a3848b6341deb59386cd1390f63a","00a7189a6982429b8b5d73b4b4937e26","bcab12a7ebd94a1fb79b09fd3ccbb90a"],"base_uri":"https://localhost:8080/","height":49},"outputId":"4f3664e0-58f2-4a5e-85ad-5d00d6dce4c5","id":"mijgUD9W-XX9","executionInfo":{"status":"ok","timestamp":1700404177748,"user_tz":-180,"elapsed":10124,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":81,"outputs":[{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/436M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d9e76bd0c48345919c44b311e1dd0993"}},"metadata":{}}]},{"cell_type":"code","source":["class BertDataset(Dataset):\n","\n","    def __init__(self, reviews, targets, tokenizer, max_len):\n","        self.reviews = reviews\n","        self.targets = targets\n","        self.tokenizer = tokenizer\n","        self.max_len = max_len\n","\n","    def __len__(self):\n","        return len(self.reviews)\n","\n","    def __getitem__(self, item):\n","        review = str(self.reviews[item])\n","        target = self.targets[item]\n","\n","        encoding = self.tokenizer.encode_plus(\n","          review,\n","          add_special_tokens=True,\n","          max_length=self.max_len,\n","          return_token_type_ids=False,\n","          pad_to_max_length=True,\n","          return_attention_mask=True,\n","          return_tensors='pt',\n","          truncation=True\n","        )\n","\n","        return {\n","          'review_text': review,\n","          'input_ids': encoding['input_ids'].flatten(),\n","          'attention_mask': encoding['attention_mask'].flatten(),\n","          'targets': torch.tensor(target, dtype=torch.long)\n","        }\n","\n","def create_data_loader(df, tokenizer, max_len, batch_size):\n","    ds = BertDataset(\n","    reviews=df.text.to_numpy(),\n","    targets=df.entity.to_numpy(),\n","    tokenizer=tokenizer,\n","    max_len=max_len\n","    )\n","\n","    return DataLoader(\n","    ds,\n","    batch_size=batch_size,\n","    num_workers=4\n","    )"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:18.386150Z","iopub.execute_input":"2023-11-18T20:03:18.386519Z","iopub.status.idle":"2023-11-18T20:03:18.396322Z","shell.execute_reply.started":"2023-11-18T20:03:18.386488Z","shell.execute_reply":"2023-11-18T20:03:18.395371Z"},"trusted":true,"id":"UADIqbGN-XX-","executionInfo":{"status":"ok","timestamp":1700404179297,"user_tz":-180,"elapsed":433,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":82,"outputs":[]},{"cell_type":"code","source":["train_data_loader = create_data_loader(train_df, tokenizer, 160, 64)\n","val_data_loader = create_data_loader(val_df, tokenizer, 160, 64)\n","test_data_loader = create_data_loader(test_df, tokenizer, 160, 64)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:20.168918Z","iopub.execute_input":"2023-11-18T20:03:20.169272Z","iopub.status.idle":"2023-11-18T20:03:20.175158Z","shell.execute_reply.started":"2023-11-18T20:03:20.169244Z","shell.execute_reply":"2023-11-18T20:03:20.174212Z"},"trusted":true,"id":"bxSU6R_J-XX-","executionInfo":{"status":"ok","timestamp":1700404183188,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["model_bert =  BERT_BILSTM_CRF(len(ent2idx) + 1)\n","\n","optimizer = optim.Adam(model_bert.parameters())\n","\n","trainer_bert = ModelTrainer(model_bert, optimizer, metric=f1, epochs=10)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:34.096095Z","iopub.execute_input":"2023-11-18T20:03:34.096438Z","iopub.status.idle":"2023-11-18T20:03:35.285028Z","shell.execute_reply.started":"2023-11-18T20:03:34.096411Z","shell.execute_reply":"2023-11-18T20:03:35.284175Z"},"trusted":true,"id":"Dnhj_Z2E-XX-","executionInfo":{"status":"ok","timestamp":1700404187904,"user_tz":-180,"elapsed":1860,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["trainer_bert.fit(trainloader, validloader)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:36.096012Z","iopub.execute_input":"2023-11-18T20:03:36.096657Z","iopub.status.idle":"2023-11-18T20:04:28.094999Z","shell.execute_reply.started":"2023-11-18T20:03:36.096624Z","shell.execute_reply":"2023-11-18T20:04:28.093474Z"},"trusted":true,"outputId":"172c6f17-b1b2-42de-8249-f53118c15887","colab":{"base_uri":"https://localhost:8080/"},"id":"1HXYLKq5-XX-","executionInfo":{"status":"ok","timestamp":1700404710401,"user_tz":-180,"elapsed":513802,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":87,"outputs":[{"output_type":"stream","name":"stdout","text":[" Epoch  | Val Loss  |  Val F1  \n","   1    | 486.489 | 0.02220\n","   2    | 510.882 | 0.02193\n","   3    | 510.102 | 0.02637\n","   4    | 530.369 | 0.02163\n","   5    | 536.888 | 0.02333\n","   6    | 531.309 | 0.02565\n","   7    | 540.265 | 0.02778\n","   8    | 579.088 | 0.02621\n","   9    | 561.087 | 0.03156\n","  10    | 560.386 | 0.03388\n"]}]},{"cell_type":"code","source":["trainer_bert.validate(testloader)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:31.305789Z","iopub.execute_input":"2023-11-18T20:04:31.306637Z","iopub.status.idle":"2023-11-18T20:04:34.747535Z","shell.execute_reply.started":"2023-11-18T20:04:31.306603Z","shell.execute_reply":"2023-11-18T20:04:34.746585Z"},"trusted":true,"outputId":"55ca92f8-692e-4a7c-e6bb-9e4fa00bf2f6","colab":{"base_uri":"https://localhost:8080/"},"id":"Cd64jZii-XX-","executionInfo":{"status":"ok","timestamp":1700404712958,"user_tz":-180,"elapsed":2559,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'acc': [0.02914207661194692], 'loss': [510.31803022112166]}"]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["Лосс растёт с каждой эпохой... Так не должно быть, но так уж получилось...\n"],"metadata":{"id":"ISzinpnGA4I2"}},{"cell_type":"markdown","source":["### III часть [CNN + Transformer + CRF]"],"metadata":{"id":"zJPDA-KH_SwX"}},{"cell_type":"markdown","source":["[nn.Transformer](https://pytorch.org/docs/stable/generated/torch.nn.Transformer.html)"],"metadata":{"id":"EmRMi6XB_rCo"}},{"cell_type":"code","source":["class CNN_Transformer_CRF(nn.Module):\n","\n","    def __init__(self, vocab_size, char_vocab_size, nhead=10, num_encoder_layers=32, output_dim=50, dropout=0.2,\n","                  word_embedding_dim=50, char_embedding_dim=50, char_output_dim=50):\n","        super().__init__()\n","\n","        self.embedding = nn.Embedding(vocab_size, word_embedding_dim)\n","\n","        self.cnn_char = CharCNN(vocab_size=char_vocab_size,\n","                            embedding_dim=char_embedding_dim,\n","                            n_filters=10,\n","                            kernel_size=3,\n","                            output_dim=char_output_dim,\n","                            dropout=0.2)\n","\n","        # Transformer Encoder Layer\n","        encoder_layers = nn.TransformerEncoderLayer(\n","            d_model=char_output_dim + word_embedding_dim,\n","            nhead=nhead,\n","            dim_feedforward=char_output_dim + word_embedding_dim,\n","            dropout=dropout\n","        )\n","        self.transformer_encoder = nn.TransformerEncoder(encoder_layers, char_output_dim + word_embedding_dim)\n","\n","        self.fc = nn.Linear(char_output_dim + word_embedding_dim, output_dim)\n","        self.dropout = nn.Dropout(dropout)\n","\n","        self.crf = CRF(num_tags=output_dim)\n","\n","    def forward_wo_crf(self, text_input, char_input):\n","        #text_input = [bs, len_sent]\n","        #char_input = [bs, len_sent, len_word]\n","        char_embedes= []\n","        bs, len_sent = text_input.shape\n","\n","        for i in range(char_input.shape[1]):\n","            #i-th word in sent\n","            char_embedes.append(self.cnn_char(char_input[:, i, :]).unsqueeze(1)) #[bs, 1, char_emb]\n","        char_embedded = torch.cat(char_embedes, dim=1)\n","        #char_embedded = [bs, len_s, char_emb]\n","\n","        word_embedded = self.embedding(text_input)\n","        #word_embedded = [bs, len_s, word_emb]\n","\n","        input = torch.cat([char_embedded, word_embedded], dim=2)\n","        #input = [bs, len_s, word_emb + char_emb]\n","\n","        output = self.transformer_encoder(input)\n","        # output = [bs, seq_len, hidden_size]\n","\n","        output = self.fc(output)\n","        # output = [bs, seq_len, output_dim]\n","        return output\n","\n","    def forward(self, output, tags, mask=None):\n","        #output = [bs, seq_len, output_dim]\n","        #tags = [bs, seq_len]\n","\n","        output = output.permute(1, 0, 2)\n","        #output = [seq_len, bs, output_dim]\n","        if type(mask) == type(None):\n","            mask = torch.ones(tags.shape, dtype=torch.uint8)\n","\n","        tags = tags.permute(1, 0)\n","        mask = mask.permute(1, 0)\n","        #tags = [seq_len, bs]\n","\n","        loss = self.crf(output, tags, mask)\n","\n","        return -loss"],"metadata":{"id":"pWkYa0wN_h95","executionInfo":{"status":"ok","timestamp":1700408510759,"user_tz":-180,"elapsed":430,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["model_transformer =  CNN_Transformer_CRF(len(dict_lookup), len(char2idx))\n","\n","optimizer = optim.Adam(model_transformer.parameters())\n","\n","trainer_transformer = ModelTrainer(model_transformer, optimizer, metric=f1, epochs=10)"],"metadata":{"id":"wJnv0i7cBgnP","executionInfo":{"status":"ok","timestamp":1700408514332,"user_tz":-180,"elapsed":429,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["trainer_transformer.fit(trainloader, validloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E7YRWbXiBjKN","executionInfo":{"status":"ok","timestamp":1700409538667,"user_tz":-180,"elapsed":1019744,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"956e083e-a8ed-401e-c255-49036633123d"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":[" Epoch  | Val Loss  |  Val F1  \n","   1    | 1149.268 | 0.03122\n","   2    | 1108.340 | 0.03132\n","   3    | 1072.161 | 0.03192\n","   4    | 1021.303 | 0.03117\n","   5    | 989.373 | 0.03152\n","   6    | 958.851 | 0.03217\n","   7    | 927.109 | 0.03186\n","   8    | 898.139 | 0.03101\n","   9    | 871.286 | 0.03220\n","  10    | 859.484 | 0.03228\n"]}]},{"cell_type":"code","source":["trainer_transformer.validate(testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZbFWhfYEUOqE","executionInfo":{"status":"ok","timestamp":1700409722150,"user_tz":-180,"elapsed":10776,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"94d62f9f-a88d-4261-fc1b-a52d35f16ee9"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'acc': [0.03293649510500419], 'loss': [711.7438092912946]}"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["import gc\n","gc.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z9Vpq6kVL0iz","executionInfo":{"status":"ok","timestamp":1700413802705,"user_tz":-180,"elapsed":603,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"f0d63a0a-4e41-4ff2-f682-ed561d25f924"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["383"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["### [BONUS] Дообучите BERT для извлечения именованных сущностей"],"metadata":{"id":"0WWXcfaC2yBn"}},{"cell_type":"code","source":["PRE_TRAINED_MODEL_NAME = 'bert-base-cased'"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:57.563808Z","iopub.execute_input":"2023-11-18T20:02:57.564751Z","iopub.status.idle":"2023-11-18T20:02:57.568998Z","shell.execute_reply.started":"2023-11-18T20:02:57.564716Z","shell.execute_reply":"2023-11-18T20:02:57.567813Z"},"trusted":true,"id":"7gCwHCnf2yBn","executionInfo":{"status":"ok","timestamp":1700405500337,"user_tz":-180,"elapsed":418,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["class BERT_BILSTM_CRF(nn.Module):\n","    def __init__(self, output_dim,\n","                 hidden_size=50, num_layers=1, ):\n","        super().__init__()\n","\n","        self.bert = BertModel.from_pretrained('bert-base-cased')\n","\n","\n","        self.bilstm = nn.GRU(input_size=self.bert.config.hidden_size,\n","                              hidden_size = hidden_size,\n","                              num_layers = num_layers,\n","                              batch_first = True,\n","                              bidirectional=True)\n","\n","        self.fc = nn.Linear(in_features=hidden_size * (1 + self.bilstm.bidirectional), out_features=output_dim)\n","\n","        self.crf = CRF(num_tags=output_dim)\n","\n","    def forward_wo_crf(self, input_ids, attention_mask):\n","\n","        temp = self.bert(\n","            input_ids=input_ids,\n","            attention_mask=attention_mask\n","            )\n","        input = temp[1]\n","\n","        output, hidden = self.bilstm(input)\n","        #output = [bs, seq_len,  num_directions * hidden_size]\n","        #hidden = [num_layers*num_directions, bs, hidden_size]\n","\n","        output = self.dropout(self.fc(output))\n","        #output = [bs, seq_len, output_dim]\n","\n","        return output\n","\n","    def forward(self, output, tags, mask=None):\n","        #output = [bs, seq_len,  output_dim]\n","        #tags = [bs, seq_len]\n","\n","        output = output.permute(1, 0, 2)\n","        #output = [seq_len, bs, output_dim]\n","        if type(mask) == type(None):\n","            mask = torch.ones(tags.shape, dtype=torch.uint8)\n","\n","        tags = tags.permute(1, 0)\n","        mask = mask.permute(1, 0)\n","        #tags = [seq_len, bs]\n","\n","        loss = self.crf(output, tags, mask)\n","\n","        return -loss"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:58.595093Z","iopub.execute_input":"2023-11-18T20:02:58.595470Z","iopub.status.idle":"2023-11-18T20:02:58.606155Z","shell.execute_reply.started":"2023-11-18T20:02:58.595439Z","shell.execute_reply":"2023-11-18T20:02:58.605074Z"},"trusted":true,"id":"zIWXADPn2yBn","executionInfo":{"status":"ok","timestamp":1700405503740,"user_tz":-180,"elapsed":489,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["tokenizer = BertTokenizer.from_pretrained(PRE_TRAINED_MODEL_NAME)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:02:59.966291Z","iopub.execute_input":"2023-11-18T20:02:59.966652Z","iopub.status.idle":"2023-11-18T20:03:01.138395Z","shell.execute_reply.started":"2023-11-18T20:02:59.966622Z","shell.execute_reply":"2023-11-18T20:03:01.137630Z"},"trusted":true,"id":"poojeLqX2yBn","executionInfo":{"status":"ok","timestamp":1700405506555,"user_tz":-180,"elapsed":460,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["bert = BertModel.from_pretrained(PRE_TRAINED_MODEL_NAME)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:01.148404Z","iopub.execute_input":"2023-11-18T20:03:01.149136Z","iopub.status.idle":"2023-11-18T20:03:04.370720Z","shell.execute_reply.started":"2023-11-18T20:03:01.149107Z","shell.execute_reply":"2023-11-18T20:03:04.369745Z"},"trusted":true,"id":"F-TJXmMP2yBn","executionInfo":{"status":"ok","timestamp":1700405509357,"user_tz":-180,"elapsed":1444,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":94,"outputs":[]},{"cell_type":"code","source":["class BertDataset(Dataset):\n","\n","    def __init__(self, reviews, targets, tokenizer, max_len):\n","        self.reviews = reviews\n","        self.targets = targets\n","        self.tokenizer = tokenizer\n","        self.max_len = max_len\n","\n","    def __len__(self):\n","        return len(self.reviews)\n","\n","    def __getitem__(self, item):\n","        review = str(self.reviews[item])\n","        target = self.targets[item]\n","\n","        encoding = self.tokenizer.encode_plus(\n","          review,\n","          add_special_tokens=True,\n","          max_length=self.max_len,\n","          return_token_type_ids=False,\n","          pad_to_max_length=True,\n","          return_attention_mask=True,\n","          return_tensors='pt',\n","          truncation=True\n","        )\n","\n","        return {\n","          'review_text': review,\n","          'input_ids': encoding['input_ids'].flatten(),\n","          'attention_mask': encoding['attention_mask'].flatten(),\n","          'targets': torch.tensor(target, dtype=torch.long)\n","        }\n","\n","def create_data_loader(df, tokenizer, max_len, batch_size):\n","    ds = BertDataset(\n","    reviews=df.text.to_numpy(),\n","    targets=df.entity.to_numpy(),\n","    tokenizer=tokenizer,\n","    max_len=max_len\n","    )\n","\n","    return DataLoader(\n","    ds,\n","    batch_size=batch_size,\n","    num_workers=4\n","    )"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:18.386150Z","iopub.execute_input":"2023-11-18T20:03:18.386519Z","iopub.status.idle":"2023-11-18T20:03:18.396322Z","shell.execute_reply.started":"2023-11-18T20:03:18.386488Z","shell.execute_reply":"2023-11-18T20:03:18.395371Z"},"trusted":true,"id":"2eDQv64v2yBn","executionInfo":{"status":"ok","timestamp":1700405511238,"user_tz":-180,"elapsed":1,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":95,"outputs":[]},{"cell_type":"code","source":["train_data_loader = create_data_loader(train_df, tokenizer, 160, 64)\n","val_data_loader = create_data_loader(val_df, tokenizer, 160, 64)\n","test_data_loader = create_data_loader(test_df, tokenizer, 160, 64)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:20.168918Z","iopub.execute_input":"2023-11-18T20:03:20.169272Z","iopub.status.idle":"2023-11-18T20:03:20.175158Z","shell.execute_reply.started":"2023-11-18T20:03:20.169244Z","shell.execute_reply":"2023-11-18T20:03:20.174212Z"},"trusted":true,"id":"pYGmZ_S82yBn","executionInfo":{"status":"ok","timestamp":1700405513088,"user_tz":-180,"elapsed":1,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["def f1(preds, y, mask):\n","    preds = preds.reshape(-1).cpu().numpy()\n","    y = y.reshape(-1).cpu().numpy()\n","    return f1_score(y, preds, average=\"macro\", labels=range(12))"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:21.930970Z","iopub.execute_input":"2023-11-18T20:03:21.931602Z","iopub.status.idle":"2023-11-18T20:03:21.936736Z","shell.execute_reply.started":"2023-11-18T20:03:21.931568Z","shell.execute_reply":"2023-11-18T20:03:21.935784Z"},"trusted":true,"id":"8yYc6lBk2yBn","executionInfo":{"status":"ok","timestamp":1700405514525,"user_tz":-180,"elapsed":1,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":97,"outputs":[]},{"cell_type":"code","source":["model_bert =  BERT_BILSTM_CRF(len(ent2idx) + 1)\n","\n","optimizer = optim.Adam(model_bert.parameters())\n","\n","trainer_bert = ModelTrainer(model_bert, optimizer, metric=f1, epochs=10)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:34.096095Z","iopub.execute_input":"2023-11-18T20:03:34.096438Z","iopub.status.idle":"2023-11-18T20:03:35.285028Z","shell.execute_reply.started":"2023-11-18T20:03:34.096411Z","shell.execute_reply":"2023-11-18T20:03:35.284175Z"},"trusted":true,"id":"som5U6XN2yBo","executionInfo":{"status":"ok","timestamp":1700405517873,"user_tz":-180,"elapsed":1835,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["trainer_bert.fit(trainloader, validloader)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:03:36.096012Z","iopub.execute_input":"2023-11-18T20:03:36.096657Z","iopub.status.idle":"2023-11-18T20:04:28.094999Z","shell.execute_reply.started":"2023-11-18T20:03:36.096624Z","shell.execute_reply":"2023-11-18T20:04:28.093474Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"FuU_-1_V2yBo","executionInfo":{"status":"ok","timestamp":1700406031084,"user_tz":-180,"elapsed":490834,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"5ce47e4a-4a30-456e-fe65-68afc76df531"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stdout","text":[" Epoch  | Val Loss  |  Val F1  \n","   1    | 594.546 | 0.02936\n","   2    | 601.763 | 0.02938\n","   3    | 617.051 | 0.03623\n","   4    | 617.263 | 0.03422\n","   5    | 656.139 | 0.02991\n","   6    | 651.071 | 0.03630\n","   7    | 668.161 | 0.03622\n","   8    | 661.860 | 0.04567\n","   9    | 672.420 | 0.03889\n","  10    | 696.450 | 0.03997\n"]}]},{"cell_type":"code","source":["trainer_bert.validate(testloader)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:31.305789Z","iopub.execute_input":"2023-11-18T20:04:31.306637Z","iopub.status.idle":"2023-11-18T20:04:34.747535Z","shell.execute_reply.started":"2023-11-18T20:04:31.306603Z","shell.execute_reply":"2023-11-18T20:04:34.746585Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"j13E_p3q2yBo","executionInfo":{"status":"ok","timestamp":1700406041870,"user_tz":-180,"elapsed":3116,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"580d7759-bf3c-466c-a924-c9a9043b3821"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'acc': [0.03509501661818217], 'loss': [643.1513977050781]}"]},"metadata":{},"execution_count":102}]},{"cell_type":"markdown","source":["## Часть 3. [2 балла] Извлечение событий\n","\n","1. Используйте BiLSTM на эмбеддингах слов для извлечения триггеров событий.\n","\n","2. Замените часть модели на  словах  на ELMo и/или BERT.  Должна получиться модель ELMo / BERT + BiLSTM.\n","\n","[бонус] Предобучите BiLSTM как языковую модель. Дообучите ее для извлечения триггеров.\n","\n","[бонус] Дообучите BERT для извлечения триггеров событий."],"metadata":{"id":"1TNsyomr2yBo"}},{"cell_type":"markdown","source":["Сделать train-test-dev для событий"],"metadata":{"id":"eR8lCkfY2yBo"}},{"cell_type":"markdown","source":["### Собираем датасет"],"metadata":{"id":"LiPKuyH62yBo"}},{"cell_type":"code","source":["events_files = os.listdir(\"litbank/events/tsv/\")\n","\n","events_text_list = make_df_from_source(events_files, \"litbank/events/tsv/\")\n","events_text_list[0][0]"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:38.715209Z","iopub.execute_input":"2023-11-18T20:04:38.715643Z","iopub.status.idle":"2023-11-18T20:04:38.902670Z","shell.execute_reply.started":"2023-11-18T20:04:38.715612Z","shell.execute_reply":"2023-11-18T20:04:38.901706Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"7nhMQFOy2yBo","executionInfo":{"status":"ok","timestamp":1700420384997,"user_tz":-180,"elapsed":5,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"ea7f62a3-ae06-40a8-df3d-5318d662be2c"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('CHAPTER', 'O'),\n"," ('1', 'O'),\n"," ('The', 'O'),\n"," ('Rassendylls', 'O'),\n"," ('--', 'O'),\n"," ('With', 'O'),\n"," ('a', 'O'),\n"," ('Word', 'O'),\n"," ('on', 'O'),\n"," ('the', 'O'),\n"," ('Elphbergs', 'O'),\n"," ('“', 'O'),\n"," ('I', 'O'),\n"," ('wonder', 'EVENT'),\n"," ('when', 'O'),\n"," ('in', 'O'),\n"," ('the', 'O'),\n"," ('world', 'O'),\n"," ('you', 'O'),\n"," ('’re', 'O'),\n"," ('going', 'O'),\n"," ('to', 'O'),\n"," ('do', 'O'),\n"," ('anything', 'O'),\n"," (',', 'O'),\n"," ('Rudolf', 'O'),\n"," ('?', 'O'),\n"," ('”', 'O'),\n"," ('said', 'EVENT'),\n"," ('my', 'O'),\n"," ('brother', 'O'),\n"," ('’s', 'O'),\n"," ('wife', 'O'),\n"," ('.', 'O')]"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["len(events_text_list)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:39.944665Z","iopub.execute_input":"2023-11-18T20:04:39.945431Z","iopub.status.idle":"2023-11-18T20:04:39.951358Z","shell.execute_reply.started":"2023-11-18T20:04:39.945396Z","shell.execute_reply":"2023-11-18T20:04:39.950355Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"8egVBeys2yBo","executionInfo":{"status":"ok","timestamp":1700414082950,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"5b5af590-1b20-44b7-943c-e6dedcc734c5"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["train_events = events_text_list[:80]\n","val_events = events_text_list[80:90]\n","test_events = events_text_list[90:]"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:40.910561Z","iopub.execute_input":"2023-11-18T20:04:40.910923Z","iopub.status.idle":"2023-11-18T20:04:40.915464Z","shell.execute_reply.started":"2023-11-18T20:04:40.910892Z","shell.execute_reply":"2023-11-18T20:04:40.914470Z"},"trusted":true,"id":"0MpO5z802yBo","executionInfo":{"status":"ok","timestamp":1700420384997,"user_tz":-180,"elapsed":3,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["def get_df(events_list):\n","    result_dict = {'text':[],\n","                   'entity':[],\n","                   'binary':[]}\n","    for text in events_list:\n","        for sequence in text:\n","            result_dict['text'].append(\" \".join([i[0] for i in sequence]))\n","            result_dict['entity'].append([i[1] for i in sequence])\n","            result_dict['binary'].append([0 if i[1]=='O' else 1 for i in sequence])\n","    result_df = pd.DataFrame(result_dict)\n","    return result_df\n","\n","train_df = get_df(train_events)\n","val_df = get_df(val_events)\n","test_df = get_df(test_events)\n","\n","print(len(train_df), len(val_df), len(test_df))\n","display(train_df.head())"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:41.310879Z","iopub.execute_input":"2023-11-18T20:04:41.311222Z","iopub.status.idle":"2023-11-18T20:04:41.427967Z","shell.execute_reply.started":"2023-11-18T20:04:41.311194Z","shell.execute_reply":"2023-11-18T20:04:41.426928Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"01rDfzyO2yBo","executionInfo":{"status":"ok","timestamp":1700420385250,"user_tz":-180,"elapsed":255,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"c91cce97-35cb-49b9-dfd1-a75557b0b17a"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["6861 810 889\n"]},{"output_type":"display_data","data":{"text/plain":["                                                text  \\\n","0  CHAPTER 1 The Rassendylls -- With a Word on th...   \n","1  “ My dear Rose , ” I answered , laying down my...   \n","2                 My position is a comfortable one .   \n","3  I have an income nearly sufficient for my want...   \n","4                          Behold , it is enough ! ”   \n","\n","                                              entity  \\\n","0  [O, O, O, O, O, O, O, O, O, O, O, O, O, EVENT,...   \n","1  [O, O, O, O, O, O, O, EVENT, O, EVENT, O, O, O...   \n","2                              [O, O, O, O, O, O, O]   \n","3  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...   \n","4                              [O, O, O, O, O, O, O]   \n","\n","                                              binary  \n","0  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, ...  \n","1  [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, ...  \n","2                              [0, 0, 0, 0, 0, 0, 0]  \n","3  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...  \n","4                              [0, 0, 0, 0, 0, 0, 0]  "],"text/html":["\n","  <div id=\"df-b50ee6e1-a74b-46a9-a591-51f9ab63f98a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>entity</th>\n","      <th>binary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHAPTER 1 The Rassendylls -- With a Word on th...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, EVENT,...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>“ My dear Rose , ” I answered , laying down my...</td>\n","      <td>[O, O, O, O, O, O, O, EVENT, O, EVENT, O, O, O...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>My position is a comfortable one .</td>\n","      <td>[O, O, O, O, O, O, O]</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>I have an income nearly sufficient for my want...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Behold , it is enough ! ”</td>\n","      <td>[O, O, O, O, O, O, O]</td>\n","      <td>[0, 0, 0, 0, 0, 0, 0]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b50ee6e1-a74b-46a9-a591-51f9ab63f98a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b50ee6e1-a74b-46a9-a591-51f9ab63f98a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b50ee6e1-a74b-46a9-a591-51f9ab63f98a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6a9cb62d-9dac-45b1-a43f-dee84567cf0e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6a9cb62d-9dac-45b1-a43f-dee84567cf0e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6a9cb62d-9dac-45b1-a43f-dee84567cf0e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}}]},{"cell_type":"code","source":["tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:42.253784Z","iopub.execute_input":"2023-11-18T20:04:42.254584Z","iopub.status.idle":"2023-11-18T20:04:43.283274Z","shell.execute_reply.started":"2023-11-18T20:04:42.254551Z","shell.execute_reply":"2023-11-18T20:04:43.282269Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":145,"referenced_widgets":["d7d019b241d94b21b1d84a3c4686a0b1","69fbec43aec74ec3b94e14b79fd72106","8b9c33312d3e441789b0b8d1f49bf09b","c719bb6c27344e0ea4f1eacf3270420f","1ec569e806284812ac90a05740e4c897","993f1b2ed8f040b6bf74e65ae114d5f3","9a4f2496eeac4cf59642c38f9e03b482","5f70b10e90a446bf991316fdd5fe4e43","b9a0dcd227fc425fb00bd61df841b050","f032b54061aa40e5929f667a85dbb70c","628e6476cb774fca9bfa03f2a532f68c","4bf3ae6085ff4ead9af0d07a917f331c","c3ca42a6f68044fabc23c15ff8485e3f","c878b9ab401a44cd80ca9362c44218ec","a334b76f096446858780d14461bc3100","13897f682c584d6c95057699dbef9d22","d2f79eb283c84b419e6b6c6309742ccc","23288bc9bdae450c9472d0adcf193dbc","b7792e0406f84e188b9fcf610884ff2d","4ad33263225243fe935f01fd79e0740b","4781ae5a9c8940da973a47cb37fc680d","e155d6a87c87409fb98c802456c6a828","08be919480e44d318581562db0ab6dac","8fcc8765adf247fc954831f858a0d0d4","cce4aaed6e374df4bb2542cb3eec0fd6","4196150f880a4076a0e407c0fb26b18e","f8aa57e3b6be49a99c0041d6d01cbd68","4347b7db6f2c47bd815a4b5cc806ac8f","4a761990a85049528edb64cea5bb85f2","471a7954d52748789d0f11fac3ad7134","99c6915a8cd14e8c8451877d9ae2aa1c","409e49713a5444768e7c4b6ee84cacb4","fe5e7fc99a454109b43492e2556e7146","ded520a5d4fd4e6e904adc0aaabb2065","e5441521fe2543c1bb2248c40e2aad3d","78924df82e1546caadd199ab7acf605d","623e4d552d8246d49d9b3586dd807483","572d2f7d1aff4d96875555d4ee3f305b","154e454a269945778e8cddf269337d8d","be40efe57deb4ac38cd35fc306153495","5be6ff45371f44ea8116526f6042554f","422fb4587be64838b25fe81ad1241604","c401be1801db4493a1f6daf570fd0b5c","8460942ab73b4b20b2ce6ca885811a40"]},"id":"UrH9-cTX2yBp","executionInfo":{"status":"ok","timestamp":1700420386339,"user_tz":-180,"elapsed":1092,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"413339c0-8b81-415f-e925-f9ba5477025d"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d7d019b241d94b21b1d84a3c4686a0b1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4bf3ae6085ff4ead9af0d07a917f331c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"08be919480e44d318581562db0ab6dac"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ded520a5d4fd4e6e904adc0aaabb2065"}},"metadata":{}}]},{"cell_type":"markdown","source":["### I часть [BiLSTM]"],"metadata":{"id":"vGdRrT1K2yBp"}},{"cell_type":"markdown","source":["#### Датасет для модели"],"metadata":{"id":"bmDkaTvp2yBp"}},{"cell_type":"code","source":["class CustomDataset(Dataset):\n","\n","    def __init__(self, tokens, labels, max_len):\n","        self.tokens = tokens\n","        self.labels = labels\n","        self.max_len = max_len\n","\n","\n","    def __len__(self):\n","        return len(self.tokens)\n","\n","    def __getitem__(self, idx):\n","        label = self.labels[idx]\n","#         label = torch.tensor(label)\n","        out_label = torch.zeros(self.max_len, dtype=torch.float32)\n","        out_label[:len(label)] = torch.tensor(label, dtype=torch.float32)[:self.max_len]\n","\n","        tokens = self.tokens[idx]\n","        out_tokens = torch.zeros(self.max_len, dtype=torch.long)\n","        out_tokens[:len(tokens)] = torch.tensor(tokens, dtype=torch.long)[:self.max_len]\n","        return out_tokens, out_label\n","\n","max_len = 64\n","BATCH_SIZE = 16\n","\n","train_labels = list(train_df['binary'])\n","train_tokens = [tokenizer.encode(text) for text in list(train_df['text'])]\n","train_dataset = CustomDataset(train_tokens, train_labels, max_len)\n","train_loader = DataLoader(train_dataset, batch_size=BATCH_SIZE, shuffle=False)\n","\n","val_labels = list(val_df['binary'])\n","val_tokens = [tokenizer.encode(text) for text in list(val_df['text'])]\n","val_dataset = CustomDataset(val_tokens, val_labels, max_len)\n","val_loader = DataLoader(val_dataset, batch_size=BATCH_SIZE, shuffle=False)\n","\n","test_labels = list(test_df['binary'])\n","test_tokens = [tokenizer.encode(text) for text in list(test_df['text'])]\n","test_dataset = CustomDataset(test_tokens, test_labels, max_len)\n","test_loader = DataLoader(test_dataset, batch_size=BATCH_SIZE, shuffle=False)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:44.554797Z","iopub.execute_input":"2023-11-18T20:04:44.555203Z","iopub.status.idle":"2023-11-18T20:04:52.294968Z","shell.execute_reply.started":"2023-11-18T20:04:44.555171Z","shell.execute_reply":"2023-11-18T20:04:52.294167Z"},"trusted":true,"id":"SbC27cnl2yBp","executionInfo":{"status":"ok","timestamp":1700413707364,"user_tz":-180,"elapsed":7064,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["#### Архитектура модели"],"metadata":{"id":"7BeIJb9w2yBp"}},{"cell_type":"code","source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","\n","class BiLSTMClassifier(nn.Module):\n","    def __init__(self, vocab_size, embedding_dim, hidden_dim, num_classes, dropout=0.5):\n","        super(BiLSTMClassifier, self).__init__()\n","        self.embedding = nn.Embedding(vocab_size, embedding_dim)\n","        self.bilstm = nn.LSTM(embedding_dim, hidden_dim, batch_first=True, bidirectional=True)\n","        self.dropout = nn.Dropout(dropout)\n","        self.fc = nn.Linear(hidden_dim * 2, num_classes)\n","\n","    def forward(self, x):\n","        x = self.embedding(x)\n","        x, _ = self.bilstm(x)\n","        x = self.dropout(x)\n","        x = self.fc(x)\n","        return x"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:52.296429Z","iopub.execute_input":"2023-11-18T20:04:52.296776Z","iopub.status.idle":"2023-11-18T20:04:52.304091Z","shell.execute_reply.started":"2023-11-18T20:04:52.296747Z","shell.execute_reply":"2023-11-18T20:04:52.303180Z"},"trusted":true,"id":"7zb-bkA-2yBp","executionInfo":{"status":"ok","timestamp":1700409792414,"user_tz":-180,"elapsed":400,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":51,"outputs":[]},{"cell_type":"markdown","source":["#### Обучение модели"],"metadata":{"id":"yXILwOKF2yBp"}},{"cell_type":"code","source":["torch.set_warn_always(False)"],"metadata":{"id":"lMEmw61rXOUy","executionInfo":{"status":"ok","timestamp":1700410495754,"user_tz":-180,"elapsed":2,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["def train_model(model, train_loader, val_loader, optimizer, criterion, device, epochs=30):\n","    best_val_loss = float('inf')\n","    for epoch in range(epochs):\n","        model.train()\n","        train_loss = 0.0\n","        train_correct = 0\n","        train_total = 0\n","        train_f1_macro_scores, val_f1_macro_scores = [], []\n","        for inputs, labels in train_loader:\n","            inputs, labels = inputs.to(device), labels.to(device)\n","\n","            optimizer.zero_grad()\n","\n","            outputs = model(inputs)\n","            loss = criterion(outputs.view(-1, outputs.shape[-1]), labels.view(-1).long())\n","            train_loss += loss.item()\n","\n","            _, predicted = torch.max(outputs, -1)\n","            train_total += labels.numel()\n","            train_correct += (predicted == labels).sum().item()\n","            f1_macro = f1_score(labels.reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","            train_f1_macro_scores.append(f1_macro)\n","\n","            loss.backward()\n","            optimizer.step()\n","\n","        avg_train_loss = train_loss / len(train_loader)\n","        train_f1 = torch.mean(torch.tensor(train_f1_macro_scores, dtype=torch.float32))\n","        train_accuracy = 100 * train_correct / train_total\n","\n","        model.eval()\n","        val_loss = 0.0\n","        val_correct = 0\n","        val_total = 0\n","        with torch.no_grad():\n","            for inputs, labels in val_loader:\n","                inputs, labels = inputs.to(device), labels.to(device)\n","\n","                outputs = model(inputs)\n","                loss = criterion(outputs.view(-1, outputs.shape[-1]), labels.view(-1).long())\n","                val_loss += loss.item()\n","\n","                _, predicted = torch.max(outputs, -1)\n","                val_total += labels.numel()\n","                val_correct += (predicted == labels).sum().item()\n","                #print(predicted.shape)\n","                #print(labels.shape)\n","                f1_macro = f1_score(labels.reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","                val_f1_macro_scores.append(f1_macro)\n","\n","        avg_val_loss = val_loss / len(val_loader)\n","        val_f1 = torch.mean(torch.tensor(val_f1_macro_scores, dtype=torch.float32))\n","        val_accuracy = 100 * val_correct / val_total\n","\n","        print(f'Epoch [{epoch+1}/{epochs}], Train Loss: {avg_train_loss:.4f}, Train F1: {train_f1:.4f}, Validation Loss: {avg_val_loss:.4f}, Validation F1: {val_f1:.4f}')\n","\n","        if avg_val_loss < best_val_loss:\n","            print('Лосс уменьшился, сохраняю модель')\n","            best_val_loss = avg_val_loss\n","            torch.save(model.state_dict(), 'bilstm_model.pth')\n","\n","    print('Модель обучена')\n","\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","model = BiLSTMClassifier(tokenizer.vocab_size, embedding_dim=300, hidden_dim=128, num_classes=2).to(device)\n","optimizer = torch.optim.Adam(model.parameters(), lr=0.001)\n","criterion = torch.nn.CrossEntropyLoss()\n","\n","train_model(model, train_loader, val_loader, optimizer, criterion, device)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:04:52.305560Z","iopub.execute_input":"2023-11-18T20:04:52.305906Z","iopub.status.idle":"2023-11-18T20:05:20.619820Z","shell.execute_reply.started":"2023-11-18T20:04:52.305853Z","shell.execute_reply":"2023-11-18T20:05:20.618845Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"tM6smLeP2yBp","executionInfo":{"status":"ok","timestamp":1700411023095,"user_tz":-180,"elapsed":137678,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"c130df19-1e0d-4105-b1d1-992f9c6a86c1"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch [1/30], Train Loss: 0.0668, Train F1: 0.0167, Validation Loss: 0.0454, Validation F1: 0.0320\n","Лосс уменьшился, сохраняю модель\n","Epoch [2/30], Train Loss: 0.0491, Train F1: 0.1430, Validation Loss: 0.0425, Validation F1: 0.1185\n","Лосс уменьшился, сохраняю модель\n","Epoch [3/30], Train Loss: 0.0412, Train F1: 0.2703, Validation Loss: 0.0425, Validation F1: 0.1817\n","Лосс уменьшился, сохраняю модель\n","Epoch [4/30], Train Loss: 0.0347, Train F1: 0.3671, Validation Loss: 0.0452, Validation F1: 0.1897\n","Epoch [5/30], Train Loss: 0.0293, Train F1: 0.4686, Validation Loss: 0.0491, Validation F1: 0.2036\n","Epoch [6/30], Train Loss: 0.0241, Train F1: 0.5741, Validation Loss: 0.0589, Validation F1: 0.1794\n","Epoch [7/30], Train Loss: 0.0198, Train F1: 0.6579, Validation Loss: 0.0717, Validation F1: 0.1836\n","Epoch [8/30], Train Loss: 0.0163, Train F1: 0.7366, Validation Loss: 0.0792, Validation F1: 0.1874\n","Epoch [9/30], Train Loss: 0.0124, Train F1: 0.7987, Validation Loss: 0.0902, Validation F1: 0.1968\n","Epoch [10/30], Train Loss: 0.0092, Train F1: 0.8466, Validation Loss: 0.0920, Validation F1: 0.2089\n","Epoch [11/30], Train Loss: 0.0070, Train F1: 0.8753, Validation Loss: 0.1022, Validation F1: 0.2014\n","Epoch [12/30], Train Loss: 0.0058, Train F1: 0.8946, Validation Loss: 0.1118, Validation F1: 0.1923\n","Epoch [13/30], Train Loss: 0.0046, Train F1: 0.9122, Validation Loss: 0.1202, Validation F1: 0.1947\n","Epoch [14/30], Train Loss: 0.0039, Train F1: 0.9127, Validation Loss: 0.1239, Validation F1: 0.2098\n","Epoch [15/30], Train Loss: 0.0035, Train F1: 0.9227, Validation Loss: 0.1268, Validation F1: 0.2078\n","Epoch [16/30], Train Loss: 0.0030, Train F1: 0.9359, Validation Loss: 0.1319, Validation F1: 0.2298\n","Epoch [17/30], Train Loss: 0.0028, Train F1: 0.9340, Validation Loss: 0.1339, Validation F1: 0.2209\n","Epoch [18/30], Train Loss: 0.0027, Train F1: 0.9383, Validation Loss: 0.1385, Validation F1: 0.2192\n","Epoch [19/30], Train Loss: 0.0025, Train F1: 0.9370, Validation Loss: 0.1416, Validation F1: 0.2204\n","Epoch [20/30], Train Loss: 0.0023, Train F1: 0.9387, Validation Loss: 0.1447, Validation F1: 0.2218\n","Epoch [21/30], Train Loss: 0.0020, Train F1: 0.9456, Validation Loss: 0.1568, Validation F1: 0.2111\n","Epoch [22/30], Train Loss: 0.0018, Train F1: 0.9505, Validation Loss: 0.1527, Validation F1: 0.2172\n","Epoch [23/30], Train Loss: 0.0017, Train F1: 0.9507, Validation Loss: 0.1535, Validation F1: 0.2208\n","Epoch [24/30], Train Loss: 0.0015, Train F1: 0.9520, Validation Loss: 0.1670, Validation F1: 0.2009\n","Epoch [25/30], Train Loss: 0.0017, Train F1: 0.9497, Validation Loss: 0.1653, Validation F1: 0.2040\n","Epoch [26/30], Train Loss: 0.0019, Train F1: 0.9463, Validation Loss: 0.1702, Validation F1: 0.2009\n","Epoch [27/30], Train Loss: 0.0018, Train F1: 0.9469, Validation Loss: 0.1686, Validation F1: 0.2084\n","Epoch [28/30], Train Loss: 0.0017, Train F1: 0.9504, Validation Loss: 0.1654, Validation F1: 0.2258\n","Epoch [29/30], Train Loss: 0.0015, Train F1: 0.9522, Validation Loss: 0.1692, Validation F1: 0.2273\n","Epoch [30/30], Train Loss: 0.0013, Train F1: 0.9575, Validation Loss: 0.1746, Validation F1: 0.1977\n","Модель обучена\n"]}]},{"cell_type":"code","source":["test_loss = 0.0\n","test_correct = 0\n","test_total = 0\n","test_f1_macro_scores = []\n","\n","with torch.no_grad():\n","    for inputs, labels in test_loader:\n","        inputs, labels = inputs.to(device), labels.to(device)\n","\n","        outputs = model(inputs)\n","        loss = criterion(outputs.view(-1, outputs.shape[-1]), labels.view(-1).long())\n","        test_loss += loss.item()\n","\n","        _, predicted = torch.max(outputs, -1)\n","        test_total += labels.numel()\n","        test_correct += (predicted == labels).sum().item()\n","        #print(predicted.shape)\n","        #print(labels.shape)\n","        f1_macro = f1_score(labels.reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","        test_f1_macro_scores.append(f1_macro)\n","\n","avg_test_loss = test_loss / len(test_loader)\n","test_f1 = torch.mean(torch.tensor(test_f1_macro_scores, dtype=torch.float32))\n","test_accuracy = 100 * test_correct / test_total\n","\n","print(avg_test_loss)\n","print(test_f1)\n","print(test_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"88sGWADlZnNM","executionInfo":{"status":"ok","timestamp":1700411312648,"user_tz":-180,"elapsed":567,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"da94fd31-b8f0-4f00-ac50-570a58580bf1"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["0.1713523654897082\n","tensor(0.2848)\n","98.64841113610798\n"]}]},{"cell_type":"markdown","source":["### II часть [BERT + BiLSTM]"],"metadata":{"id":"1LMHhfG82yBp"}},{"cell_type":"code","source":["from transformers import BertTokenizer, BertModel\n","\n","tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","bert_model = BertModel.from_pretrained('bert-base-uncased')"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:05:28.663838Z","iopub.execute_input":"2023-11-18T20:05:28.664237Z","iopub.status.idle":"2023-11-18T20:05:31.611969Z","shell.execute_reply.started":"2023-11-18T20:05:28.664207Z","shell.execute_reply":"2023-11-18T20:05:31.611136Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["0216005df23442aa8b0336a631a14306","c752ea676c78473185b98e20160587e0","24c48ae5a1cc40cbbc09f3842dc60606","cb1be9067c8b44d1940b8cbaada98689","6a3a68b64b2b46bd85deb76004b472b8","f43319fa82db440c8e42607ef9b086cf","706dbe6e0cfc44c78f376ad7a30ea16a","3368bfd4d8b94c4a8a244c20e073ba96","59ac8f621f0a4e34b36c15d3a7fc5a2d","51485e6a382547b6b0f84427de3847a4","5e4544eedef84848b286e2615c57e1f5"]},"id":"lL-U2m132yBp","executionInfo":{"status":"ok","timestamp":1700420395995,"user_tz":-180,"elapsed":9657,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"8321f915-a913-4dac-8b22-2a210cfbe8cf"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0216005df23442aa8b0336a631a14306"}},"metadata":{}}]},{"cell_type":"markdown","source":["#### Аритектура модели"],"metadata":{"id":"vPavk4eF2yBp"}},{"cell_type":"code","source":["class BERTBiLSTMClassifier(nn.Module):\n","    def __init__(self, hidden_dim, num_classes, dropout=0.5, bert_model=bert_model):\n","        super(BERTBiLSTMClassifier, self).__init__()\n","        self.bert = bert_model\n","        embedding_dim = bert_model.config.to_dict()['hidden_size']\n","        self.bilstm = nn.LSTM(embedding_dim, hidden_dim, batch_first=True, bidirectional=True)\n","        self.dropout = nn.Dropout(dropout)\n","        self.fc = nn.Linear(hidden_dim * 2, num_classes)\n","\n","    def forward(self, input_ids, attention_mask):\n","        with torch.no_grad():\n","            embedded = self.bert(input_ids, attention_mask=attention_mask)[0]\n","        lstm_out, _ = self.bilstm(embedded)\n","        lstm_out = self.dropout(lstm_out)\n","        lstm_out = lstm_out[:, -1, :]\n","        out = self.fc(lstm_out)\n","        return out"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:05:31.613754Z","iopub.execute_input":"2023-11-18T20:05:31.614401Z","iopub.status.idle":"2023-11-18T20:05:31.622370Z","shell.execute_reply.started":"2023-11-18T20:05:31.614365Z","shell.execute_reply":"2023-11-18T20:05:31.621345Z"},"trusted":true,"id":"tTkEW_Xn2yBq","executionInfo":{"status":"ok","timestamp":1700420395995,"user_tz":-180,"elapsed":15,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["#### Подготовка данных"],"metadata":{"id":"6dOyRCwA2yBq"}},{"cell_type":"code","source":["def prepare_data_for_bert(text_list, tokenizer, max_length=512):\n","    input_ids = []\n","    attention_masks = []\n","\n","    for text in text_list:\n","        encoded_text = tokenizer.encode_plus(\n","            text,\n","            max_length=max_length,\n","            add_special_tokens=True,\n","            padding='max_length',\n","            return_attention_mask=True,\n","            return_tensors='pt',\n","            truncation=True\n","        )\n","        input_ids.append(encoded_text['input_ids'])\n","        attention_masks.append(encoded_text['attention_mask'])\n","\n","    input_ids = torch.cat(input_ids, dim=0)\n","    attention_masks = torch.cat(attention_masks, dim=0)\n","    return input_ids, attention_masks"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:05:31.949855Z","iopub.execute_input":"2023-11-18T20:05:31.950218Z","iopub.status.idle":"2023-11-18T20:05:31.956667Z","shell.execute_reply.started":"2023-11-18T20:05:31.950191Z","shell.execute_reply":"2023-11-18T20:05:31.955740Z"},"trusted":true,"id":"g-7KGMY_2yBq","executionInfo":{"status":"ok","timestamp":1700420395995,"user_tz":-180,"elapsed":14,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["from torch.utils.data import Dataset\n","import torch\n","\n","class BertBiLSTMDataset(Dataset):\n","    def __init__(self, texts, labels, tokenizer, max_length=512):\n","        self.texts = texts\n","        self.labels = labels\n","        self.tokenizer = tokenizer\n","        self.max_length = max_length\n","\n","    def __len__(self):\n","        return len(self.texts)\n","\n","    def __getitem__(self, idx):\n","        text = self.texts[idx]\n","        label = self.labels[idx]\n","\n","        encoded = self.tokenizer.encode_plus(\n","            text,\n","            add_special_tokens=True,\n","            max_length=self.max_length,\n","            padding='max_length',\n","            truncation=True,\n","            return_attention_mask=True,\n","            return_tensors='pt'\n","        )\n","\n","        return {\n","            'input_ids': encoded['input_ids'].flatten(),\n","            'attention_mask': encoded['attention_mask'].flatten(),\n","            'labels': torch.tensor(label, dtype=torch.float32)\n","        }"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:12:42.216906Z","iopub.execute_input":"2023-11-18T20:12:42.217307Z","iopub.status.idle":"2023-11-18T20:12:42.226416Z","shell.execute_reply.started":"2023-11-18T20:12:42.217276Z","shell.execute_reply":"2023-11-18T20:12:42.225364Z"},"trusted":true,"id":"RUlLBbhq2yBq","executionInfo":{"status":"ok","timestamp":1700420395996,"user_tz":-180,"elapsed":15,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["from torch.nn.utils.rnn import pad_sequence\n","\n","def collate_fn(batch):\n","    input_ids = pad_sequence([item['input_ids'] for item in batch],\n","                             batch_first=True, padding_value=0)\n","    attention_mask = pad_sequence([item['attention_mask'] for item in batch],\n","                                  batch_first=True, padding_value=0)\n","    labels = pad_sequence([item['labels'] for item in batch],\n","                             batch_first=True, padding_value=0)\n","\n","    return {'input_ids': input_ids, 'attention_mask': attention_mask, 'labels': labels}"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:12:42.402722Z","iopub.execute_input":"2023-11-18T20:12:42.403054Z","iopub.status.idle":"2023-11-18T20:12:42.411595Z","shell.execute_reply.started":"2023-11-18T20:12:42.403026Z","shell.execute_reply":"2023-11-18T20:12:42.410561Z"},"trusted":true,"id":"35nTpzwU2yBq","executionInfo":{"status":"ok","timestamp":1700420395996,"user_tz":-180,"elapsed":15,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","\n","train_texts = train_df['text'].values\n","train_labels = train_df['binary'].values\n","\n","test_texts = test_df['text'].values\n","test_labels = test_df['binary'].values\n","\n","val_texts = val_df['text'].values\n","val_labels = val_df['binary'].values\n","\n","train_dataset = BertBiLSTMDataset(train_texts, train_labels, tokenizer)\n","test_dataset = BertBiLSTMDataset(test_texts, test_labels, tokenizer)\n","val_dataset = BertBiLSTMDataset(val_texts, val_labels, tokenizer)\n","\n","train_dataloader = DataLoader(train_dataset, batch_size=32, shuffle=True, collate_fn=collate_fn)\n","test_dataloader = DataLoader(test_dataset, batch_size=32, shuffle=True, collate_fn=collate_fn)\n","val_dataloader = DataLoader(val_dataset, batch_size=32, shuffle=True, collate_fn=collate_fn)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:12:42.609408Z","iopub.execute_input":"2023-11-18T20:12:42.609704Z","iopub.status.idle":"2023-11-18T20:12:42.804036Z","shell.execute_reply.started":"2023-11-18T20:12:42.609678Z","shell.execute_reply":"2023-11-18T20:12:42.803204Z"},"trusted":true,"id":"o-FPdlJa2yBq","executionInfo":{"status":"ok","timestamp":1700420396928,"user_tz":-180,"elapsed":323,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["train_labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"boyLK_z5a0nD","executionInfo":{"status":"ok","timestamp":1700411429774,"user_tz":-180,"elapsed":421,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"479a00fc-e42b-4f1c-9754-229389a60002"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([list([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]),\n","       list([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n","       list([0, 0, 0, 0, 0, 0, 0]), ...,\n","       list([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n","       list([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n","       list([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])],\n","      dtype=object)"]},"metadata":{},"execution_count":81}]},{"cell_type":"markdown","source":["#### Обучение модели"],"metadata":{"id":"7LieGpSB2yBq"}},{"cell_type":"code","source":["from tqdm import tqdm\n","\n","def train_model(model, train_loader, val_loader, optimizer, criterion, device, epochs=10):\n","    best_val_loss = float('inf')\n","\n","    for epoch in range(epochs):\n","        model.train()\n","        train_loss = 0.0\n","        train_correct = 0\n","        train_total = 0\n","        train_f1_macro_scores, val_f1_macro_scores = [], []\n","\n","        for batch in tqdm(train_loader):\n","            input_ids, attention_mask, labels = batch['input_ids'].to(device), batch['attention_mask'].to(device), batch['labels'].to(device)\n","\n","            optimizer.zero_grad()\n","\n","            outputs = model(input_ids, attention_mask)\n","#             print(labels.shape)\n","#             print(outputs.shape)\n","            loss = criterion(outputs, labels[:, :2])\n","            train_loss += loss.item()\n","\n","            _, predicted = torch.max(outputs, -1)\n","            train_total += labels.numel()\n","            #print(torch.max(labels, dim=1)[0])\n","\n","            #print(torch.eq(predicted, torch.max(labels, dim=1)[0]))\n","            train_correct += torch.eq(predicted, torch.max(labels, dim=-1)[0]).sum().item()\n","\n","            f1_macro = f1_score(torch.max(labels, dim=-1)[0].reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","            train_f1_macro_scores.append(f1_macro)\n","\n","            loss.backward()\n","            optimizer.step()\n","\n","        avg_train_loss = train_loss / len(train_loader)\n","        train_f1 = torch.mean(torch.tensor(train_f1_macro_scores, dtype=torch.float32))\n","        train_accuracy = 100 * train_correct / train_total\n","\n","        model.eval()\n","        val_loss = 0.0\n","        val_correct = 0\n","        val_total = 0\n","        with torch.no_grad():\n","            for batch in val_loader:\n","                input_ids, attention_mask, labels = batch['input_ids'].to(device), batch['attention_mask'].to(device), batch['labels'].to(device)\n","                outputs = model(input_ids, attention_mask)\n","                loss = criterion(outputs, labels[:, :2])\n","                val_loss += loss.item()\n","\n","                _, predicted = torch.max(outputs, -1)\n","                val_total += labels.numel()\n","                val_correct += torch.eq(predicted, torch.max(labels, dim=-1)[0]).sum().item()\n","                f1_macro = f1_score(torch.max(labels, dim=-1)[0].reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","                val_f1_macro_scores.append(f1_macro)\n","\n","        avg_val_loss = val_loss / len(val_loader)\n","        val_f1 = torch.mean(torch.tensor(val_f1_macro_scores, dtype=torch.float32))\n","        val_accuracy = 100 * val_correct / val_total\n","\n","        # Print statistics\n","        print(f'Epoch [{epoch+1}/{epochs}], Train Loss: {avg_train_loss:.4f}, Train F1: {train_f1:.4f}, Val Loss: {avg_val_loss:.4f}, Val F1: {val_f1:.4f}')\n","\n","        if avg_val_loss < best_val_loss:\n","            print('Лосс уменьшился, сохраняю модель')\n","            best_val_loss = avg_val_loss\n","            torch.save(model.state_dict(), 'bert_bilstm_model.pth')\n","\n","    print('Модель обучена')\n","\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","model = BERTBiLSTMClassifier(hidden_dim=128, num_classes=2).to(device)\n","optimizer = torch.optim.Adam(model.parameters(), lr=0.001)\n","criterion = torch.nn.CrossEntropyLoss()\n","\n","train_model(model, train_dataloader, val_dataloader, optimizer, criterion, device)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:14:51.236187Z","iopub.execute_input":"2023-11-18T20:14:51.236603Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"VbvR0Zk32yBq","executionInfo":{"status":"error","timestamp":1700412953507,"user_tz":-180,"elapsed":848755,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"0f32dfc6-2239-4cf9-96c7-7ce686f19275"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 215/215 [04:09<00:00,  1.16s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [1/10], Train Loss: 0.0379, Train F1: 0.6088, Val Loss: 0.0119, Val F1: 0.5256\n","Лосс уменьшился, сохраняю модель\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 215/215 [04:09<00:00,  1.16s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [2/10], Train Loss: 0.0285, Train F1: 0.5889, Val Loss: 0.0117, Val F1: 0.5223\n","Лосс уменьшился, сохраняю модель\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 215/215 [04:09<00:00,  1.16s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [3/10], Train Loss: 0.0253, Train F1: 0.5882, Val Loss: 0.0125, Val F1: 0.5275\n"]},{"output_type":"stream","name":"stderr","text":["  5%|▌         | 11/215 [00:14<04:23,  1.29s/it]\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-97-f7e355f67b55>\u001b[0m in \u001b[0;36m<cell line: 77>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0mcriterion\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mCrossEntropyLoss\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     76\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 77\u001b[0;31m \u001b[0mtrain_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_dataloader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval_dataloader\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moptimizer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcriterion\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdevice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-97-f7e355f67b55>\u001b[0m in \u001b[0;36mtrain_model\u001b[0;34m(model, train_loader, val_loader, optimizer, criterion, device, epochs)\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;31m#             print(outputs.shape)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m             \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcriterion\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m:\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 22\u001b[0;31m             \u001b[0mtrain_loss\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mloss\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m             \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpredicted\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["test_loss = 0.0\n","test_correct = 0\n","test_total = 0\n","test_f1_macro_scores = []\n","\n","with torch.no_grad():\n","    for batch in test_dataloader:\n","        input_ids, attention_mask, labels = batch['input_ids'].to(device), batch['attention_mask'].to(device), batch['labels'].to(device)\n","        outputs = model(input_ids, attention_mask)\n","        loss = criterion(outputs, labels[:, :2])\n","        test_loss += loss.item()\n","\n","        _, predicted = torch.max(outputs, -1)\n","        test_total += labels.numel()\n","        test_correct += torch.eq(predicted, torch.max(labels, dim=-1)[0]).sum().item()\n","        f1_macro = f1_score(torch.max(labels, dim=-1)[0].reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","        test_f1_macro_scores.append(f1_macro)\n","\n","avg_test_loss = test_loss / len(val_loader)\n","test_f1 = torch.mean(torch.tensor(test_f1_macro_scores, dtype=torch.float32))\n","test_accuracy = 100 * test_correct / test_total\n","\n","print(avg_test_loss)\n","print(test_f1)\n","print(test_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pH6KJ1TBgqWF","executionInfo":{"status":"ok","timestamp":1700413101309,"user_tz":-180,"elapsed":32196,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"outputId":"6a3a16dc-fb7a-4950-ae4a-89786270d9b5"},"execution_count":99,"outputs":[{"output_type":"stream","name":"stdout","text":["0.01632170289054093\n","tensor(0.5652)\n","0.5812081401339516\n"]}]},{"cell_type":"markdown","source":["### [BONUS] Дообучение BERT"],"metadata":{"id":"HuF1Xq37hcp9"}},{"cell_type":"code","source":["class BERTBiLSTMClassifier(nn.Module):\n","    def __init__(self, hidden_dim, num_classes, dropout=0.5, bert_model=bert_model):\n","        super(BERTBiLSTMClassifier, self).__init__()\n","        self.bert = bert_model\n","        embedding_dim = bert_model.config.to_dict()['hidden_size']\n","        self.bilstm = nn.LSTM(embedding_dim, hidden_dim, batch_first=True, bidirectional=True)\n","        self.dropout = nn.Dropout(dropout)\n","        self.fc = nn.Linear(hidden_dim * 2, num_classes)\n","\n","    def forward(self, input_ids, attention_mask):\n","        embedded = self.bert(input_ids, attention_mask=attention_mask)[0]\n","        lstm_out, _ = self.bilstm(embedded)\n","        lstm_out = self.dropout(lstm_out)\n","        lstm_out = lstm_out[:, -1, :]\n","        out = self.fc(lstm_out)\n","        return out"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:05:31.613754Z","iopub.execute_input":"2023-11-18T20:05:31.614401Z","iopub.status.idle":"2023-11-18T20:05:31.622370Z","shell.execute_reply.started":"2023-11-18T20:05:31.614365Z","shell.execute_reply":"2023-11-18T20:05:31.621345Z"},"trusted":true,"executionInfo":{"status":"ok","timestamp":1700420396928,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}},"id":"lH4OrpBJhn_s"},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["train_dataloader = DataLoader(train_dataset, batch_size=8, shuffle=True, collate_fn=collate_fn)\n","test_dataloader = DataLoader(test_dataset, batch_size=8, shuffle=True, collate_fn=collate_fn)\n","val_dataloader = DataLoader(val_dataset, batch_size=8, shuffle=True, collate_fn=collate_fn)"],"metadata":{"id":"WjtFR-V-lFxz","executionInfo":{"status":"ok","timestamp":1700420396928,"user_tz":-180,"elapsed":4,"user":{"displayName":"Антон Золотарев","userId":"00132696149152071356"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["from tqdm import tqdm\n","\n","def train_model(model, train_loader, val_loader, optimizer, criterion, device, epochs=10):\n","    best_val_loss = float('inf')\n","\n","    for epoch in range(epochs):\n","        model.train()\n","        train_loss = 0.0\n","        train_correct = 0\n","        train_total = 0\n","        train_f1_macro_scores, val_f1_macro_scores = [], []\n","\n","        for batch in tqdm(train_loader):\n","            input_ids, attention_mask, labels = batch['input_ids'].to(device), batch['attention_mask'].to(device), batch['labels'].to(device)\n","\n","            optimizer.zero_grad()\n","\n","            outputs = model(input_ids, attention_mask)\n","#             print(labels.shape)\n","#             print(outputs.shape)\n","            loss = criterion(outputs, labels[:, :2])\n","            train_loss += loss.item()\n","\n","            _, predicted = torch.max(outputs, -1)\n","            train_total += labels.numel()\n","            #print(torch.max(labels, dim=1)[0])\n","\n","            #print(torch.eq(predicted, torch.max(labels, dim=1)[0]))\n","            train_correct += torch.eq(predicted, torch.max(labels, dim=-1)[0]).sum().item()\n","\n","            f1_macro = f1_score(torch.max(labels, dim=-1)[0].reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","            train_f1_macro_scores.append(f1_macro)\n","\n","            loss.backward()\n","            optimizer.step()\n","\n","        avg_train_loss = train_loss / len(train_loader)\n","        train_f1 = torch.mean(torch.tensor(train_f1_macro_scores, dtype=torch.float32))\n","        train_accuracy = 100 * train_correct / train_total\n","\n","        model.eval()\n","        val_loss = 0.0\n","        val_correct = 0\n","        val_total = 0\n","        with torch.no_grad():\n","            for batch in val_loader:\n","                input_ids, attention_mask, labels = batch['input_ids'].to(device), batch['attention_mask'].to(device), batch['labels'].to(device)\n","                outputs = model(input_ids, attention_mask)\n","                loss = criterion(outputs, labels[:, :2])\n","                val_loss += loss.item()\n","\n","                _, predicted = torch.max(outputs, -1)\n","                val_total += labels.numel()\n","                val_correct += torch.eq(predicted, torch.max(labels, dim=-1)[0]).sum().item()\n","                f1_macro = f1_score(torch.max(labels, dim=-1)[0].reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","                val_f1_macro_scores.append(f1_macro)\n","\n","        avg_val_loss = val_loss / len(val_loader)\n","        val_f1 = torch.mean(torch.tensor(val_f1_macro_scores, dtype=torch.float32))\n","        val_accuracy = 100 * val_correct / val_total\n","\n","        # Print statistics\n","        print(f'Epoch [{epoch+1}/{epochs}], Train Loss: {avg_train_loss:.4f}, Train F1: {train_f1:.4f}, Val Loss: {avg_val_loss:.4f}, Val F1: {val_f1:.4f}')\n","\n","        if avg_val_loss < best_val_loss:\n","            print('Лосс уменьшился, сохраняю модель')\n","            best_val_loss = avg_val_loss\n","            torch.save(model.state_dict(), 'bert_bilstm_model.pth')\n","\n","    print('Модель обучена')\n","\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","model = BERTBiLSTMClassifier(hidden_dim=128, num_classes=2).to(device)\n","optimizer = torch.optim.Adam(model.parameters(), lr=0.001)\n","criterion = torch.nn.CrossEntropyLoss()\n","\n","train_model(model, train_dataloader, val_dataloader, optimizer, criterion, device)"],"metadata":{"execution":{"iopub.status.busy":"2023-11-18T20:14:51.236187Z","iopub.execute_input":"2023-11-18T20:14:51.236603Z"},"trusted":true,"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e728ed7f-a46d-4bbf-f67c-dbaee5be12e5","id":"VV4d_v3Mhn_0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 858/858 [10:29<00:00,  1.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [1/10], Train Loss: 0.0480, Train F1: 0.5947, Val Loss: 0.0243, Val F1: 0.5122\n","Лосс уменьшился, сохраняю модель\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 858/858 [10:30<00:00,  1.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [2/10], Train Loss: 0.0464, Train F1: 0.5962, Val Loss: 0.0185, Val F1: 0.5230\n","Лосс уменьшился, сохраняю модель\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 858/858 [10:31<00:00,  1.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [3/10], Train Loss: 0.0454, Train F1: 0.5995, Val Loss: 0.0183, Val F1: 0.5217\n","Лосс уменьшился, сохраняю модель\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 858/858 [10:30<00:00,  1.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [4/10], Train Loss: 0.0455, Train F1: 0.5974, Val Loss: 0.0259, Val F1: 0.5198\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 858/858 [10:30<00:00,  1.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [5/10], Train Loss: 0.0457, Train F1: 0.5957, Val Loss: 0.0185, Val F1: 0.5134\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 858/858 [10:30<00:00,  1.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch [6/10], Train Loss: 0.0461, Train F1: 0.5966, Val Loss: 0.0177, Val F1: 0.5203\n","Лосс уменьшился, сохраняю модель\n"]},{"output_type":"stream","name":"stderr","text":[" 48%|████▊     | 410/858 [05:01<05:28,  1.36it/s]"]}]},{"cell_type":"markdown","source":["Колаб отрубился посреди обучения, не дождёмся метрик на тестовой выборке. Но, судя по паттернам метрик (лосс на трейне и валидации, F1 на трейне и валидации), F1 на тесте было бы примерно сравнимым с необученным бертом (0.52)"],"metadata":{"id":"yQDr63SAQKhY"}},{"cell_type":"code","source":["test_loss = 0.0\n","test_correct = 0\n","test_total = 0\n","test_f1_macro_scores = []\n","\n","with torch.no_grad():\n","    for batch in test_dataloader:\n","        input_ids, attention_mask, labels = batch['input_ids'].to(device), batch['attention_mask'].to(device), batch['labels'].to(device)\n","        outputs = model(input_ids, attention_mask)\n","        loss = criterion(outputs, labels[:, :2])\n","        test_loss += loss.item()\n","\n","        _, predicted = torch.max(outputs, -1)\n","        test_total += labels.numel()\n","        test_correct += torch.eq(predicted, torch.max(labels, dim=-1)[0]).sum().item()\n","        f1_macro = f1_score(torch.max(labels, dim=-1)[0].reshape(-1).cpu().numpy(), predicted.reshape(-1).cpu().numpy())\n","        test_f1_macro_scores.append(f1_macro)\n","\n","avg_test_loss = test_loss / len(val_loader)\n","test_f1 = torch.mean(torch.tensor(test_f1_macro_scores, dtype=torch.float32))\n","test_accuracy = 100 * test_correct / test_total\n","\n","print(avg_test_loss)\n","print(test_f1)\n","print(test_accuracy)"],"metadata":{"id":"OPraejUrhn_0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Часть 4. [2 балла] Одновременное извлечение именованных сущностей и событий\n","1. Обучите модель для совместного извлечения именованных сущностей и триггеров событий. У модели должен быть общий энкодер (например, CNN + BiLSMT, ELMo + BiLSTM, BERT + BiLSTM) и два декодера: один отвечает за извлечение именнованных сущностей, другой отвечает за извлечение триггеров событий.\n","\n","[бонус] Добавьте в модель механизм внимания, так, как это покажется вам разумным.\n","\n","[бонус] Визуализируйте карты механизма внимания."],"metadata":{"id":"62RzlDhD2yBq"}},{"cell_type":"code","source":[],"metadata":{"id":"dUYUpgfC2yBq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Часть 5. [1 балл] Итоги\n","Напишите краткое резюме проделанной работы. Сравните результаты всех разработанных моделей. Что помогло вам в выполнении работы, чего не хватало?"],"metadata":{"id":"HOfdKKQ62yBr"}},{"cell_type":"markdown","source":["В ходе нашей работы мы успешно разработали и применяли различные модели глубокого обучения для извлечения именованных сущностей и триггеров событий из текстов. Основные достижения включают следующие аспекты:\n","\n","**Часть 1: Эксплоративный анализ (EDA)**\n","- Нашли топ 10 (по частоте) именованных сущностей каждого из 6 типов.\n","- Нашли топ 10 (по частоте) частотных триггеров событий\n","- Мы нарисовали кластеризацию с помощью TriMap и вложили html вместе с решением. Круто же?\n","\n","\n","**Часть 2: Извлечение именованных сущностей**\n","- Мы обучили стандартную модель CNN-BiLSTM-CRF для извлечения именованных сущностей, что позволило нам эффективно работать с низкоуровневыми сущностями. (F1=0.166)\n","- Затем мы интегрировали BERT с BiLSTM и CRF, что ухудшило качество извлечения за счет использования глубоких предварительно обученных представлений. (F1=0.029)\n","- Дополнительно, замена слоя BiLSTM на Transformer не дала возможность улучшить понимание контекста и увеличить точность извлечения. (F1=0.033)\n","- Дообучили BERT+BiLSTM+CRF (F1=0.035)\n","\n","**Часть 3: Извлечение событий**\n","- Использование BiLSTM на эмбеддингах слов позволило нам эффективно извлекать триггеры событий. (F1=0.285)\n","- Интеграция BERT с BiLSTM улучшила качество извлечения триггеров за счет более глубокого контекстуального понимания текста. (F1=0.565)\n","- Дообучили BERT + BiLSTM (F1$\\simeq 0.56$)\n","\n","В целом, результаты показали, что современные техники глубокого обучения и обработки естественного языка могут быть очень неэффективны в сложных задачах извлечения информации из текста."],"metadata":{"id":"wEShm4p_CoRM"}},{"cell_type":"code","source":[],"metadata":{"id":"732gXdv62yBr"},"execution_count":null,"outputs":[]}]}